#pragma once

// (j.dinatale 2012-03-02 17:05) - PLID 48527
#include "InventoryRc.h"
#include "InvVisionWebUtils.h"	// (j.dinatale 2012-03-16 11:45) - PLID 48935

#include "VisionWebOrderDlg.h"

// CContactLensOrderForm dialog

class CContactLensOrderForm : public CNxDialog
{
	DECLARE_DYNAMIC(CContactLensOrderForm)

public:
	CContactLensOrderForm(long nOrderID = -1, CWnd* pParent = NULL);   // standard constructor
	virtual ~CContactLensOrderForm();

	// (j.dinatale 2012-03-21 13:15) - PLID 49079 - need to be able to get the orderID
	long GetOrderID();

// Dialog Data
	enum { IDD = IDD_CONTACT_LENS_ORDER };

protected:
	CNxIconButton m_btnOK, m_btnCancel, m_btnGoToEMR, m_btnCopyToOS, m_btnCopyToOD, m_btnPrevRx;
	// (s.dhole 2012-05-21 17:08) - PLID 50531
	CNxIconButton  m_btnSaveAndPrintOrd;
	NxButton m_radioServices, m_radioProducts;
	CNxStatic m_lblEMRName;
	NXTIMELib::_DNxTimePtr m_pRxDate, m_pRxExpirationDate, m_pRxIssueDate, m_pDate;
	// (s.dhole 2012-05-07 18:23) - PLID 50131
	CNxEdit m_nxCLInvoiceNo;
	CString   m_strCLInvoiceNo;

	long m_nOrderID;
	long m_nLensRxID;
	long m_nLeftLensDetailRxID;
	long m_nRightLensDetailRxID;
	long m_nLeftLensOtherInfoID;
	long m_nRightLensOtherInfoID;
	// (s.dhole 2012-05-18 16:49) - PLID 49729
	long m_nSavedPatientID;	

	// (j.dinatale 2013-03-21 11:59) - PLID 55752
	bool m_bPrevRxImported;

	// (j.dinatale 2012-05-11 17:58) - PLID 50345 - saved fields for auditing purposes
	CString m_strSavedPatientName, m_strSavedProviderName, m_strSavedOpticianName;
	COleDateTime m_dtSavedOrderDate;


	// (j.dinatale 2012-04-09 14:19) - PLID 49219 - added an optician field
	// (j.dinatale 2012-04-12 10:29) - PLID 49631 - added the vision plan list
	NXDATALIST2Lib::_DNxDataListPtr m_pdlPatientList, m_pdlProviderList, m_pdlLocationList, 
		m_pdlServiceList, m_pdlProductList, m_pdlODProdList, m_pdlOSProdList,
		m_pdlSuppList, m_pdlOpticianList, m_pdlVisionPlans;
	// (s.dhole 2012-03-19 12:21) - PLID 48596
	BOOL m_bSavedProductToBeOrderedLeft,m_bSavedProductToBeOrderedRight;

	// (b.spivey, November 14, 2012) - PLID 53422 - property cache/flags for updating. 
	// (j.dinatale 2013-02-11 10:22) - PLID 55093 - we now keep track of the sold off shelf flag differently
	bool m_bAutoCheckSoldOffShelfNewOrder, m_bSoldOffShelfManualSetOD, m_bSoldOffShelfManualLastValOD, m_bSoldOffShelfManualSetOS, m_bSoldOffShelfManualLastValOS;

	// (j.dinatale 2013-04-30 11:21) - PLID 56530 - need to keep track if we are increasing the qty or not
	bool m_bIncreaseItemToBillQty;
	// (j.dinatale 2013-05-02 10:22) - PLID 56530 - handle product quantity accordingly
	void HandleProductQuantity(bool bIsOS, long nProductID, long nQty, BOOL bOffTheShelf, BOOL bIsBillable, NXDATALIST2Lib::IRowSettingsPtr pProductRow);

	// (j.dinatale 2013-05-03 09:06) - PLID 56530 - need a utility function for this
	void ConfigureODTrackable(BOOL bIsTrackable);
	void ConfigureOSTrackable(BOOL bIsTrackable);

	// (j.dinatale 2012-04-24 13:47) - PLID 49866
	void RestrictFieldLengths();

	bool SaveOrder();
	bool ValidateData();

	void LoadOrder();

	// (j.dinatale 2012-03-16 11:45) - PLID 48935 - format fields!
	virtual BOOL OnCommand(WPARAM wParam, LPARAM lParam);
	void FormatPrescriptionNumber(UINT nID, PrescriptionNumberFormat pnf);

	// (j.dinatale 2012-03-29 08:48) - PLID 49169 - handle if fields should be read only or not
	void HandleOSReadOnlyStatus();
	void HandleODReadOnlyStatus();
	void SetODReadOnly(BOOL bReadOnly);
	void SetOSReadOnly(BOOL bReadOnly);

	// (j.dinatale 2012-03-21 16:27) - PLID 49079 - close cleanup!
	void CloseCleanup(UINT nReturn);

	// (j.dinatale 2012-03-07 17:14) - PLID 48709 - Copy data!
	void CopyField(long nFromID, long nToID);

	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	virtual BOOL OnInitDialog();
	// (s.dhole 2012-03-16 17:30) - PLID 
	void AddItemsToList(BOOL bIsOD,BOOL bIsOS ,
						NXDATALIST2Lib::IRowSettingsPtr pServiceRow =NULL,
						GlassesOrderServiceType nType = gostOther ,
						double  nQty =1,
						BOOL bIsProduct=FALSE,
						BOOL bIsDefaultProduct =FALSE,
						BOOL bIsOffTheShelf = FALSE);
	void RemoveDeletedRowFromServiceList(); 
	void LoadServiceList();
	void RefreshCLServiceList();
	long m_nRowID;
	NXDATALIST2Lib::_DNxDataListPtr m_pdlSelectedServiceList;

	// (j.dinatale 2012-04-27 10:43) - PLID 49896 - auto update description
	CString GetGeneratedDescription();
	bool m_bAutoGenerateDescription;
	void ConfigureDescriptionAutoUpdate();
	void UpdateDescription();
	
	// (s.dhole 2012-03-19 12:32) - PLID 48971
	void UpdateContactLensProductQnt();
	long m_nLocationID;
	void RefreshProducts();
	// (s.dhole 2012-04-12 09:49) - PLID 48968
	long m_nLeftProdID ,m_nRightProdID ;
	void LoadLastPatientRx();
	// (s.dhole 2012-04-16 11:22) - PLID 49728 
	BOOL m_bIsBilled ;
	// (s.dhole 2012-04-16 12:59) - PLID 49890
	BOOL m_bIsvisionPlanExist;
	// (s.dhole 2012-04-16 11:22) - PLID 49728 
	void ApplyCLBilledSetting();
	void ApplyCLVisionPlanSetting();
	// (s.dhole 2012-04-25 17:05) - PLID 49992 
	long m_nCLInsuredPartyID;
	// (s.dhole 2012-05-17 16:33) - PLID 50479
	void CheckProductBillable(long nProductID,long  nLocationID, BOOL  &bIsBillable , BOOL  &bIsTrackableStatus );

	DECLARE_MESSAGE_MAP()
public:
	afx_msg void OnBnClickedConLenServicesRadio();
	afx_msg void OnBnClickedConLenProductsRadio();
	afx_msg void OnBnClickedOk();
	afx_msg void OnBtnOredrPrintPreviewRx();

	// (j.dinatale 2012-03-07 17:14) - PLID 48709 - Copy data!
	afx_msg void OnBnClickedConLenCopyToOs();
	afx_msg void OnBnClickedConLenCopyToOd();
	afx_msg void OnBnClickedConLenOdPrevRx();
	afx_msg void OnBnClickedChkConLensOsToBeOrdered();
	afx_msg void OnBnClickedChkConLensOdToBeOrdered();
	DECLARE_EVENTSINK_MAP()
	void RButtonDownConLensServiceCodes(LPDISPATCH lpRow, short nCol, long x, long y, long nFlags);
	void EditingStartingConLensServiceCodes(LPDISPATCH lpRow, short nCol, VARIANT* pvarValue, BOOL* pbContinue);
	void SelChosenConLensServices(LPDISPATCH lpRow);
	void SelChosenConLensProducts(LPDISPATCH lpRow);
	void EditingFinishedConLensServiceCodes(LPDISPATCH lpRow, short nCol, const VARIANT& varOldValue, const VARIANT& varNewValue, BOOL bCommit);
	void SelChangingCLVisionPlan(LPDISPATCH lpOldSel, LPDISPATCH* lppNewSel);
	void SelChangingConLensOdProduct(LPDISPATCH lpOldSel, LPDISPATCH* lppNewSel);
	void SelChangingConLensOsProduct(LPDISPATCH lpOldSel, LPDISPATCH* lppNewSel);
	void SelChangingConLensLocation(LPDISPATCH lpOldSel, LPDISPATCH* lppNewSel);
	void SelChosenConLensOdProduct(LPDISPATCH lpRow);
	void SelChosenConLensOsProduct(LPDISPATCH lpRow);
	afx_msg void OnEnKillfocusConLenOdQty();
	afx_msg void OnEnKillfocusConLenOsQty();
	void SelChosenConLensLocation(LPDISPATCH lpRow);
	void OnSelChosenConLenPatient(LPDISPATCH lpRow);
	// (j.dinatale 2012-03-19 15:54) - PLID 48682
	void OnSelChosenProviderList(LPDISPATCH lpRow);
	void OnSelChosenSupplierList(LPDISPATCH lpRow);
	void OnRequeryFinishedCLVisionPlans(short nFlags);
	afx_msg void LeftClickConLensServices(LPDISPATCH lpRow, short nCol, long x, long y, long nFlags);
	afx_msg void OnBnClickedCancel();
	afx_msg LRESULT OnBarcodeScan(WPARAM wParam, LPARAM lParam); //(r.wilson 3/26/2012) PLID 49193 - Handles barcode scans

	void KillFocusConLensExamDate(); //r.wilson 3/14/2012 PLID 48838
	afx_msg void OnEnKillfocusConLenOdSphere();
	afx_msg void OnEnKillfocusConLenOsSphere();
	afx_msg void OnEnChangeConLenOdSphere();
	afx_msg void OnEnChangeConLenOsSphere();
	// (s.dhole 2012-04-25 12:20) - PLID 49969 
	afx_msg void OnCLPreviewEmn();
	void OnRequeryFinishedConLensOdProduct(short nFlags);
	void OnRequeryFinishedConLensOsProduct(short nFlags);
	void OnSelChosenCLVisionPlan(LPDISPATCH lpRow);
	int CContactLensOrderForm::GetSectionThatHasFocus(); //(r.wilson 3/26/2012) PLID 49193

	void CContactLensOrderForm::UpdateWindowCaption(CString strPatientName); // (b.spivey, May 10, 2012) - PLID 50195
	
	
	void SelChosenConLenOptician(LPDISPATCH lpRow);
	// (s.dhole 2012-04-25 12:20) - PLID 49969 
	void ReflectCLEmn();
	long m_nEMNCLPatientID, m_nCLLastEMN ,m_nCLEmnID;
	class CEMRPreviewPopupDlg* m_pEMRCLPreviewPopupDlg;
	
	afx_msg void OnEnKillfocusConLenDescription();
	// (s.dhole 2012-05-14 12:48) - PLID 49447  Move this declaration to class level 
	// (s.dhole 2012-03-16 13:45) - PLID 48968 
	CArray<LenseServiceInfo,LenseServiceInfo&> m_arLensContactServiceInfo;
};
