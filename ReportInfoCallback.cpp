/////////////

//	DRT 8/6/03 - Remove all the GetSql<Module> functions and moved them to their own source 
//		files (ReportInfo<Module>).  This file still contains:  Header setup info, all the special 
//		filtering (GetDateFilter, etc), ttx setups, etc.

#include "stdafx.h"
#include "ReportInfo.h"
#include "Reports.h"
#include "GlobalReportUtils.h"
#include "WhereClause.h"
#include "AuditTrail.h"
#include "Groups.h"
#include "GlobalUtils.h"
#include "NxReportJob.h"
#include "ReportInfoUserPermissionsSql.h"
#include "DateTimeUtils.h"
#include "InvUtils.h"
#include "MsgBox.h"
#include "GlobalFinancialUtils.h"
#include "InternationalUtils.h"
#include "LabCustomField.h"
// (b.spivey, May 09, 2013) - PLID 56222 - need to share certain report versions between practice and
//		 the report generator used in the iPad app. 
// (c.haag 2015-02-03) - PLID 63751 - Moved to NxReportLib
#include <NxReportLib/SharedReportVersions.h>
#include "ReportAdo.h"
using namespace ADODB;

// TODO: Use the actual SQL limits here
const COleDateTime dtMin(1800, 1, 1, 0, 0, 0);
const COleDateTime dtMax(2030, 12, 31, 0, 0, 0);
const COleDateTime dtToday = COleDateTime::GetCurrentTime();

/*
                  nID = "ID"
         strPrintName = "Name"tracking
        strReportName = "ReportPrintName"
        strReportFile = "ReportPath"
      strRecordSource = "Alias"
         bCreateGroup = "AllowMakeMergeGroup"
          strCategory = "Category"
              nDetail = "DetailSummaryOption" ? (("DetailOrSummary" >= 0) ? "DetailOrSummary" : 1) : 0
             nPatient = "PatientEnabled" ? -1 : 0
            nProvider = "ProviderFilter" ? -1 : 0
			nLocation = "LocationFilter" ? -1 : 0
           nDateRange = "DatesEnabled"
          nDateFilter = "DateFilterOption" ? -1 : 0 // todo: I don't understand this  (Service date vs Input date - dt)
             bOneDate = "OneDateBox"
           dtDateFrom = "DatesEnabled" ? Today's Date
             dtDateTo = "DatesEnabled" ? Today's Date
       strDateCaption = "DatesEnabled" ? "DateCaption" : ""
            bExternal = "ExternalForm"
strReportSpecificName = "ReportSpecificName"
     strListBoxFormat = "ListBoxFormat"
     strListBoxWidths = "ListBoxWidths"
        strListBoxSQL = "ListBoxSQL"
       strFilterField = "FilterField"
            bExtended = "ReportSpecificSort"
        strExtraText  = "ReportSpecificSort" ? pNewReport->strReportSpecificName; // Right now this just pulls ReportSpecificName
        strExtraField = "ReportSpecificSort" ? "ExtendedFilterField"
        strExtraValue = "ReportSpecificSort" ? "SearchBy"
       nExtendedStyle = "ExtendedStyle"
       strExtendedSql = "ExtendedSql";
      bUseGroupOption = "GroupOption"
            bUseGroup = FALSE;
               nGroup = -9999;
            bPhaseOut = FALSE
			bEditable = FALSE
			nVersion  = 1  //whenever you change a report query, increment the version of the report, this is only for editable reports
	   strDateOptions = ""
	   ADD_REPORT(187, "Daily Batch Report", -1, "DailyBatchReportR", "DailyBatchQ", "FinancialP", "DailyBatchReportR", 
	   FALSE,  0, -1, -1, -1, -1, 1, TRUE, "Input Date", TRUE, "Logins To Print", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT", "UserName", FALSE, "Logins To Print", "", "", FALSE, 0, "", FALSE, 1, "1;Input Date;IDate;;2;Service Date;TDate;;", 1),
	   
*/

// For convenience keep track of the highest info ID (keep adding to 
// this as you add filters) because all filter IDs MUST be unique
const long CReportInfo::REPORT_NEXT_INFO_ID = 764;

BEGIN_ADD_REPORTS(CReports::gcs_aryKnownReports)
//	ADD_REPORT(nID, strPrintName, strReportName,   strRecordSource, strCategory, strReportFile, bCreateGroup,        nDetail,         nProvider,      nLocation, nPatient,       nDateRange,   nDateFilter,      bOneDate,   strDateCaption, bExternal,    strReportSpecificName, strListBoxFormat, strListBoxWidths, strListBoxSQL, strFilterField, bExtended,          strExtraText,       strExtraField,       strExtraValue, bUseGroupOption, nExtendedStyle, strExtendedSql ),
//	ADD_REPORT(ID,  Name,         ReportPrintName, Alias,           Category,    ReportPath,    AllowMakeMergeGroup, DetailOrSummary, ProviderFilter, LocationFilter, PatientEnabled, DatesEnabled, DateFilterOption, OneDateBox, DateCaption,    ExternalForm, ReportSpecificName,    ListBoxFormat,    ListBoxWidths,    ListBoxSQL,    FilterField,    ReportSpecificSort, ReportSpecificName, ExtendedFilterField, SearchBy,      GroupOption,     ExtendedStyle,  ExtendedSql, bEditable, nVersion, DateFilters, (Unknown - Fill In If You Know)),
//m.hancock 8/30/05 - To turn off the multiple selections in the extended filter, put a -1, FALSE at the end of the ADD_REPORT command.
     	ADD_REPORT(1, "Surgery List and Prices", -1, "SurgPriceListR", "SurgeryPriceListQ", "AdminP", "SurgPriceListR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Is A Package", "IsAPackage", "", FALSE, 3, "SELECT 0 AS ID, 'Surgeries' AS Name UNION SELECT 1 AS ID, 'Packages' AS Name", TRUE, 2, "", -1, -1, FALSE),
		ADD_REPORT(2, "Product Price List", -1, "ProdPriceListR", "ProdPriceListQ", "InventoryP", "ProdPriceList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "Supplier", "ID|Company", "0|-1", "12SELECT PersonT.ID, PersonT.Company FROM Persont INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", "SupplierID", TRUE, "Category", "CategoryID", "", FALSE, 3, "SELECT ID, Name FROM CategoriesT ORDER BY Name", FALSE, 4, "", -1),
		ADD_REPORT(3, "Physical Inventory Tally Sheet", -1, "PhyITallyR", "PhysTallyQ", "InventoryP", "InvPhysTally", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|CategoryName", "0|-1", "12SELECT ID, Name AS CategoryName FROM CategoriesT", "CategoryID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 4, "", -1),
		//ADD_REPORT(4, "Individual Patient Notes", "PatientNotesR", "PatientNotesQ", "PatientP", "PatientNotes", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "Note Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Note Date;Date;;", -1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(10, "Master Contact List", -1, "ContactListR", "ContactListQ", "OthrContactP", "ContactListR", FALSE, 0, 0, -0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 4, "", -1, -1, FALSE),
		ADD_REPORT(11, "Service Codes", -1, "CPT-CodesR", "CPTCodeListQ", "AdminP", "CPTCodes", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "ServiceID", TRUE, "", "Active", "", FALSE, 3, "SELECT 0 AS ID, 'InActive' AS NAME UNION SELECT 1 AS ID, 'Active' AS NAME ", FALSE, 5, "", -1),
//		ADD_REPORT(13, "Patient Interests", "PtntInterestR", "PatientInterestsQ", "MarketP", "PtNtInterestsR", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "First Contact Date", TRUE, "Interest", "ID|SurgeryList", "0|-1", "12SELECT InterestsT.ID, InterestsT.SurgeryList FROM InterestsT WHERE (((InterestsT.SurgeryList) Is Not Null)) ORDER BY InterestsT.SurgeryList", "InterestID", FALSE, "Interest", "", "", TRUE, 0, "", FALSE, 1),
		ADD_REPORT(14, "Patient List", -1, "PatientMstrLst", "PatientMstrListQ", "PatientP", "PatientList", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "Zipcode|PatCity|PatState", "25|50|-1", "11SELECT PersonT.Zip AS Zipcode, First(PersonT.City) AS PatCity, First(PersonT.State) AS PatState FROM (PatientsT INNER JOIN PersonT ON PatientsT.PersonID = PersonT.ID) GROUP BY PersonT.Zip HAVING ((PersonT.Zip<>'') And (PersonT.Zip Is Not Null))", "", TRUE, "Status", "CurrentStatus", "", TRUE, 3, "SELECT 1, 'Patient' UNION SELECT 2, 'Prospect' UNION SELECT 3, 'Patient/Prospect'", TRUE, 4, "1;First Contact Date;Date;;", 1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability.
		ADD_REPORT(15, "Contact To Do List", -1, "ToDoContactsR", "ContactsToDoQ", "OthrContactP", "ToDoContactsR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Complete By Date", TRUE, "", "AssignID|AssignTo", "0|100", "11SELECT UsersT.PersonID AS AssignID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS AssignTo FROM UsersT INNER JOIN PersonT ON UsersT.PersonID = PersonT.ID AND UsersT.PersonID > 0", "TaskID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT ID, Name from (SELECT 1 AS ID, 'Incomplete' AS Name FROM ToDoList) SubQ GROUP BY ID, Name UNION SELECT ID, Name from (SELECT 2 AS ID, 'Completed' AS Name FROM ToDoList) SubQ GROUP BY ID, Name", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
		ADD_REPORT(16, "Weekly Schedule", -1, "WeeklyScheduleR", "SchDailyApptsQ", "ScheduleP", "WeeklyScheduleR", TRUE, 0, 0, -1, 0, 1, 0, TRUE, "Appt. Date", TRUE, "ShowState", "ShowState|StateText", "0|-1", "12SELECT ID, Name FROM AptShowStateT ORDER BY NAME", "ShowState", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", TRUE, 12, "1;Appt. Date;Date;;", 1, fboAppointment),
     	ADD_REPORT(17, "Daily Schedule", -1, "ResDateR", "SchDailyApptsQ", "ScheduleP", "SchAppts", TRUE, 0, 0, -1, 0, 1, 0, FALSE, "Appt. Date", TRUE, "ShowState", "ShowState|StateText", "0|-1", "12SELECT ID, Name FROM AptShowStateT ORDER BY NAME", "ShowState", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 17, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(18, "Inventory: On Order ; Received", -1, "InventoryOnOrderR", "InvOnOrderQ", "InventoryP", "InventoryOnOrder", FALSE, 0, 0, -1, 0, 1, 0, FALSE, "", TRUE, "Suppliers", "ID|Company", "0|-1", "12SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", "SupplierID", FALSE, "", "", "", FALSE, 0, "", FALSE, 4, "1;Order Date;DateOrdered;;2;Received Date;DateReceived;;", -1),
		ADD_REPORT(19, "Monthly Schedule", -1, "MonthlyScheduleR", "SchDailyApptsQ", "ScheduleP", "MonthlyScheduleR", TRUE, 0, 0, -1, 0, 1, 0, TRUE, "Appt. Date", TRUE, "ShowState", "ShowState|StateText", "0|-1", "12SELECT ID, Name FROM AptShowStateT ORDER BY NAME", "ShowState", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", TRUE, 11, "1;Appt. Date;Date;;", 1, fboAppointment),
	//	ADD_REPORT(22, "Aged Receivables old", "AgedBilling", "", "FinancialP", "", FALSE, 1, -1, 0, -1, 0, TRUE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(23, "Appointments By Type", -1, "", "ApptsByTypeQ", "ScheduleP", "ApptsByType", TRUE, 1, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "ID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 11, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(24, "Referrals (Primary)", -1, "ReferralsR", "ReferralsQ", "MarketP", "ReferralsR", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", TRUE, "Pt. Status", "StatusID", "", TRUE, 3, "SELECT 1, 'Patient' UNION SELECT 2, 'Prospect' UNION SELECT 3, 'Patient Prospect' UNION SELECT 4, 'Inquiry'", FALSE, 4, "1;First Contact Date;Date;;2;First Appt Date;FirstApptDate;;", -1),
		ADD_REPORT(25, "Patient Count By Zip Code", -1, "PatientsByPostalR", "PatientCountByZipCodeQ", "PatientP", "PatientCountByZipCode", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Zip Code", "ZipCode", "-1", "11SELECT CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END AS ZipCode FROM PersonT INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID WHERE PersonT.Zip <> '' GROUP BY CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END", "ZipCode", FALSE, "Zip Code", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(42, "Patients By Appointments", -1, "PatientAppointmentsR", "PatientAppointmentsQ", "PatientP", "PatientAppointmentsR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Appointment Date", FALSE, "Resource", "", "", "", "", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID AS ResourceID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Appointment Date;Date;;", -1),
	//	ADD_REPORT(43, "HCFA Balances", "HCFADetailsR", "", "FinancialP", "", FALSE, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
	//	ADD_REPORT(49, "Prospect List", "ProspectMstrLst", "ProspectsQ", "PatientP", "ProspectMstr", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "First Contact Date", TRUE, "Zip Code", "ZipCode", "-1", "11SELECT CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END AS ZipCode FROM PersonT INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID WHERE PersonT.Zip <> '' GROUP BY CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END", "ZipCode", FALSE, "Zip Code", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(50, "Appointments", -1, "SurgeriesByTimeR", "SurgerySubQ", "ScheduleP", "SurgeriesByTimeR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Purpose", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "ID", TRUE, "Purpose", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 5, "1;Appt. Date;Date;;", -1, fboAppointment),
		// (f.dinatale 2010-09-07) - PLID 38340 - Modified to add extended filtering on whether or not an insurance company is active or inactive.
		ADD_REPORT(57, "Insurance Companies", -1, "InsuranceCoListR", "InsCoListRQ", "AdminP", "InsCoList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", FALSE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 5, "", -1, -1, FALSE),
     	ADD_REPORT(58, "Custom Tab Check Boxes", -1, "CustomTabChecksR", "CustomTabChecksQ", "PatientP", "CustomTabChecksR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1,"1;First Contact Date;Date;;", -1),
		ADD_REPORT(59, "Custom Tab Combo Boxes", -1, "CustomTabCombosR", "CustomTabCombosQ", "PatientP", "CustomTabCombosR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Custom Field", "ID|Name", "0|-1", "12SELECT ID, Name FROM CustomFieldsT WHERE ID IN (21, 22, 23, 24, 25, 26)", "CustomListFieldID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3,"1;First Contact Date;Date;;", -1),
		ADD_REPORT(60, "Custom Tab Text Boxes", -1, "CustomTabTextsR", "CustomTabTextQ", "PatientP", "CustomTabTextsR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1,"1;First Contact Date;Date;;", -1),
		ADD_REPORT(61, "Custom Tab Date Boxes", -1, "CustomTabDatesR", "CustomTabDateQ", "PatientP", "CustomTabDateR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1,"1;First Contact Date;Date;;", -1),
		ADD_REPORT(63, "Scheduled And Not Billed (by Appt. and Bill Date)", -1, "SchedAndNotBilledR", "ScheduledAndNotBilledQ", "ScheduleP", "ScheduledAndNotBilledR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. and Bill Date", TRUE, "Type", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "SetID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Appt. and Bill Date;Date;;", -1, fboAppointment),
	//	ADD_REPORT(66, "Patient Statements (Old)", "PatientStatments", "", "FinancialP", "", FALSE, 1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "", "> 0", FALSE, 1, "", FALSE, 1),
	//	ADD_REPORT(67, "Patients By Insurance Co", "PatientsByInsuranceCoR", "PatientsByInsuranceUnfilteredQ", "PatientP", "PatByInsCo", FALSE, 0, 0, -1, 0, 0, FALSE, "", FALSE, "Insurance Company", "", "", "", "", TRUE, "Insurance Company", "InsCoID", "", FALSE, 3, "SELECT [Insurance Co ID], Name FROM [Insurance Co] ORDER BY Name;", FALSE, 1),
		ADD_REPORT(74, "Patients By Login", -1, "PatientListbyLogin", "PatientsByLoginQ", "PatientP", "PatByLogin", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Input Date", TRUE, "Login Names", "PersonID|UserName", "0|-1", "12SELECT PersonID, UserName FROM UsersT WHERE UsersT.PersonID > 0 ORDER BY UserName", "UserID", TRUE, "Status", "CurrentStatus", "", TRUE, 3, "SELECT 1, 'Patient' UNION SELECT 2, 'Prospect' UNION SELECT 3, 'Patient/Prospect'", FALSE, 3, "1;Input Date;Date;;", 1),
	//	ADD_REPORT(75, "Prospects By Login", "ProspectListbyLogin", "ProspectsByLoginQ", "PatientP", "ProsbyLogin", TRUE, 2, -1, -1, 0, -1, 0, FALSE, "Input Date", TRUE, "Login Names", "PersonID|UserName", "0|-1", "12SELECT PersonID, UserName FROM UsersT ORDER BY UserName", "UserID", FALSE, "Login Names", "", "", TRUE, 0, "", FALSE, 1, "1;Input Date;Date;;", -1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(76, "Referring Physicians List", -1, "RefferringPhysicianListR", "RefPhyListRQ", "OthrContactP", "RefPhyList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "RefPhysID", "ID|Name", "0|-1", "12SELECT ID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY Last, First, Middle", "RefPhysID", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", TRUE, 5, "", -1, -1, FALSE),
		ADD_REPORT(78, "Patient Birth Dates", -1, "PatientBirthDatesR", "PatientBDayQ", "PatientP", "PatientBDay", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Birth Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "1;Birth Date;Date;;", -1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(81, "Doctor / Provider List", -1, "DoctorProviderListR", "DocProvListRQ", "OthrContactP", "DocProvList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 3, "", -1, -1, FALSE),
     	// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(82, "Employee List", -1, "EmployeeListR", "ContactInfo", "OthrContactP", "EmployeeList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 3, "", -1, -1, FALSE),
		ADD_REPORT(86, "Mail Merge Groups", -1, "MailMergeGroupR", "MergeGroupRQ", "AdminP", "MergeGroup", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "", FALSE, "Mail Group", "", "", "", "", TRUE, "Mail Group", "GroupID", "", FALSE, 3, "SELECT ID AS GroupID, Name AS GroupName FROM GroupsT ORDER BY Name;", FALSE, 2, "", -1),
		// (d.lange 2015-10-19 09:25) - PLID 67117 - Renamed from Provider Multiple Fee Schedules to Provider Fee Schedules
		ADD_REPORT(87, "Provider Fee Schedules", -1, "MultFeeMain", "ProviderMultipleFeeQ", "AdminP", "MultiFeeMain", FALSE, 0, -1, -1, 0, 0, 0, FALSE, "", TRUE, "Insurance Company", "InsCoID|Name", "0|-1", "12SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Fee Group", "ID", "", FALSE, 3, "SELECT ID, Name FROM MultiFeeGroupsT ORDER BY Name", TRUE, 3, "", -1),
		ADD_REPORT(88, "Patients By Zip Code", -1, "PatientsByZipCodeR", "PatientsByZipCodeQ", "PatientP", "PatientsByZipCode", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Zip Code", "ZipCode", "-1", "11SELECT CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END AS ZipCode FROM PersonT INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID WHERE PersonT.Zip <> '' GROUP BY CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END", "ZipCode", FALSE, "Zip Code", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(90, "Appointments Without Prepayments", -1, "", "AppWithoutPrePaymentQ", "ScheduleP", "AppWithoutPrePaymentR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "AptTypeID|Name", "0|-1", "12SELECT AptTypeT.ID AS AptTypeID, AptTypeT.Name FROM AptTypeT ORDER BY Name", "AptTypeID", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(93, "No Show Patients By Referral", -1, "NoShowPatsByReferralSourcesR", "NoShowPtByReffSourQ", "ScheduleP", "NoShowPatsByReferralR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "AptType", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(94, "Appointments Requesting a MoveUp", -1, "MoveUpR", "AppointInfoQ", "ScheduleP", "MoveUpR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Appointment Category", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "ID", TRUE, "Appointment Category", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
	//	ADD_REPORT(96, "Patient Balances By Insurance Co", "PatientBalanceInsCo", "", "FinancialP", "", FALSE, 1, -1, 0, -1, 0, TRUE, "Aged Bill Date", TRUE, "Patients with Balances", "Insurance Co ID|Name", "0|-1", "12SELECT [Insurance Co ID], Name FROM [Insurance Co]", "", TRUE, "Patients with Balances", "", "", FALSE, 1, "", FALSE, 1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(99, "Supplier List", -1, "", "SupplierListQ", "OthrContactP", "SupplierList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 3, "", -1, -1, FALSE),
	//	ADD_REPORT(99, "Inventory Cash Value", "InvShelfMoneyR", "InvShelfMoneyQ", "InventoryP", "InventoryCashValue", FALSE, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
	//	ADD_REPORT(101, "Patient Report By Provider", "PatientChargesByProvR", "", "ChargesP", "", FALSE, 0, 0, 0, -1, 0, FALSE, "First Contact Date", TRUE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
	//	ADD_REPORT(102, "Patient Charges By Category", "PatientChargesByCatR", "", "ChargesP", "", FALSE, 0, 0, 0, -1, 0, FALSE, "First Contact Date", TRUE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
	//	ADD_REPORT(104, "Schedule", "", "SchDailyApptsQ", "ScheduleP", "SchAppts", FALSE, 0, 0, 0, -1, 0, FALSE, "Appt. Date", FALSE, "Resource", "", "", "", "", TRUE, "Resource", "ID", "14", FALSE, 3, "SELECT ID, Item FROM MasterItemsT ORDER BY Item;", FALSE, 1),
	//	ADD_REPORT(105, "Patients In Current Filter", "PatientsByFiter", "PatientsInCurrentFilterQ", "PatientP", "PatientsByFilter", FALSE, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
//		ADD_REPORT(106, "Patient Interests By Interest Level", "InterestByInterestLevelR", "PatientInterestsQ", "MarketP", "InterestsByInterestLevelR", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "First Contact Date", TRUE, "Interest", "ID|SurgeryList", "0|-1", "12SELECT InterestsT.ID, InterestsT.SurgeryList FROM InterestsT WHERE (((InterestsT.SurgeryList) Is Not Null)) ORDER BY InterestsT.SurgeryList", "InterestID", FALSE, "Interest", "", "", TRUE, 0, "", FALSE, 1),
//		ADD_REPORT(107, "Patient Interest By Zip Code", "InterestsByZipR", "PatientInterestsQ", "MarketP", "InterestByZipR", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "First Contact Date", TRUE, "Zip Code", "ZipCode", "-1", "11SELECT CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END AS ZipCode FROM PersonT INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID WHERE PersonT.Zip <> '' GROUP BY CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END", "ZipCode", FALSE, "Zip Code", "", "", TRUE, 0, "", FALSE, 1),
     	ADD_REPORT(108, "Scheduled with Pending Balances", -1, "SchedWithBalR", "SchedwithBalQ", "ScheduleP", "SchedWithBal", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "", "ID|Item", "0|-1", "12SELECT ID, Item FROM ResourceT ORDER BY Item", "ResourceID", FALSE, "", "", "", TRUE, 3, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(110, "Patient To Do List", -1, "ToDoPatientsR", "ToDoPatientsQ", "PatientP", "ToDoPatientsR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Complete By Date", TRUE, "", "UserID|AssignTo", "0|100", "11SELECT UsersT.PersonID AS UserID, UsersT.UserName FROM ToDoList INNER JOIN TodoAssignToT ON ToDoList.TaskID = TodoAssignToT.TaskID INNER JOIN UsersT ON TodoAssignToT.AssignTo = UsersT.PersonID GROUP BY TodoAssignToT.AssignTo, UsersT.UserName, UsersT.PersonID HAVING (((TodoAssignToT.AssignTo) Is Not Null))", "TaskID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT 1 AS ID, 'Incomplete' AS Name UNION SELECT 2, 'Completed'", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
	//	ADD_REPORT(117, "Performance", "", "dao", "FinancialP", "Performance", FALSE, 0, -1, 0, -1, 0, FALSE, "Trans Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(118, "Data Issues", -1, "", "IllogicalFinancialQ", "OtherP", "IllogicalFinancial", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
	//	ADD_REPORT(119, "Printed HCFAs", "HCFAPrintedR", "PrintedHCFAQ", "FinancialP", "HCFAPrinted", FALSE, 0, 0, 0, -1, 0, FALSE, "Created On Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(120, "Adjustments", -1, "AdjustmentsR", "AdjustmentsQ", "PaymentsP", "Adjustments", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Adjustment Date", TRUE, "Payment Category", "ID|Name", "0|-1", "11SELECT ID, GroupName FROM PaymentGroupsT ORDER BY GroupName", "GroupID", FALSE, "", "", "", TRUE, 0, "", FALSE, 4, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(121, "Bills By Doctor \\ Provider", -1, "RevByProviderR", "BillsByProviderQ", "ChargesP", "BillsByProviderR", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(122, "Bills By Patient", -1, "RevByPtntR", "BillsByPatientQ", "ChargesP", "BillsByPatientsR", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(123, "Bills By Patient Coordinator", -1, "RevByPtntCoordR", "BillsByPatientCoordinatorQ", "ChargesP", "BillsByPatientCoordinatorR", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonT.ID, Last + ', ' + First + ' ' + Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE PatientCoordinator <> 0 Order By Name", "PatCoord", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(124, "Bills By Referral Source", -1, "RevByReferral", "BillsByReferralSourceQ", "ChargesP", "BillsByReferralSourceR", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Bill Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ReferralSourceT.PersonID AS ID, ReferralSourceT.Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(125, "Charges By Category", -1, "ChargesByCategory", "ChargesByCategoryQ", "ChargesP", "ChargesByCategory", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", TRUE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(126, "Charges By Category (Cross Tab)", -1, "", "ChargesByCategoryCrossTabQ", "ChargesP", "ChargesByCatCrossTab", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", FALSE, 4, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
     	ADD_REPORT(130, "Charges By Doctor \\ Provider", -1, "RevByDrR", "ChargesByProviderQ", "ChargesP", "ChargesByProvider", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(131, "Charges By Doctor \\ Provider (Cross Tab)", -1, "", "ChargesByProviderCrossTabQ", "ChargesP", "ChargesByCPTCrossTab", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(134, "Charges By Place Of Service Designation", -1, "ChargesByPlaceOfServiceR", "ChargesByPlaceOfServiceQ", "ChargesP", "ChargesByPlaceOfServiceDesig", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Place Of Service", "PlaceCodes|PlaceName", "0|-1", "12SELECT PlaceCodes, PlaceName FROM PlaceOfServiceCodesT ORDER BY PlaceName", "PofServiceID", FALSE, "Place Of Service", "", "", TRUE, 0, "", TRUE, 7, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(135, "Charges By Zip Code", -1, "ChargesByZipCodeR", "ChargesByZipCodeQ", "ChargesP", "ChargesByZipCode", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ZipCode", "-1", "11SELECT CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END AS ZipCode FROM PersonT INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID WHERE PersonT.Zip <> '' GROUP BY CASE WHEN Right(PersonT.Zip,1) = '-' THEN Left(PersonT.Zip, Len(PersonT.Zip)-1) ELSE PersonT.Zip END", "Zip", FALSE, "", "", "", TRUE, 0, "", FALSE, 4, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(136, "Deposits Made", -1, "DepositDateRangeR", "DepositsMadeQ", "FinancialP", "DepositsMade", FALSE, 0, -1, -1, -1, 1, 0, FALSE, "Deposit Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Deposit Date;TDate;;", -1),
		ADD_REPORT(137, "Financial Summary", -1, "Financial", "AllFinancialBlahQ", "FinancialP", "FinancialSummary", FALSE, 2, -1, -1, 0, 1, 1, FALSE, "Bill and Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 7, "1;Bill Date/Payment Date;BDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(138, "Payment Receipts", -1, "PaymentsRecbyDate", "PaymentReceiptsQ", "PaymentsP", "PayReceipts", FALSE, 0, 0, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 23, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(139, "Payments (Split By Product/Service)", -1, "PayByPatSplitUpR", "PaymentsSplitQ", "PaymentsP", "PaymentsSplit", TRUE, 2, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(140, "Payments / Refunds", -1, "PaymentsR", "PaymentsRefundsQ", "PaymentsP", "PaymentsRefunds", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "Payment Method", "", "", "", "", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,TRUE,FALSE), FALSE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(141, "Payments By Service Category", -1, "PaymentsByCPTCategory", "PaymentsByCPTCategoryQ", "PaymentsP", "PaymentsByCPTCategory", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", FALSE, 6, "1;Payment Date;TDate;;2;Input Date;IDate;;3;Apply Date;ApplyDate;;4;Charge Service Date;ChargeServiceDate;;5;Charge Input Date;ChargeInputDate;;6;Bill Date;BillDate;;7;Bill Input Date;BillInputDate;;", -1),
     	ADD_REPORT(142, "Payments By Service Code", -1, "PaymentsByCPTCode", "PaymentsByCPTCodeQ", "PaymentsP", "PaymentsByCPTCode", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Payment Method", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "CPTID", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,TRUE,TRUE), TRUE, 6, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ChargeDate;Input;4;Charge Input Date;ChargeInputDate;Input;", -1),
		ADD_REPORT(143, "Payments By Insurance By Service Code", -1, "PaymentsByInsCoByCPT", "PaymentsByInsCoByCPTCodeQ", "PaymentsP", "PaymentsByInsByCPT", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "CPTID", TRUE, "Insurance Co", "InsID", "", TRUE, 3, "SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name;", TRUE, 4, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ServiceDate;Service;", -1),
		ADD_REPORT(144, "Payments By Insurance Co", -1, "PaymentsByInsCoR", "PaymentsByInsCoQ", "PaymentsP", "PaymentsByInsCo", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "[Insurance Co ID]", FALSE, "Insurance Co", "", "", TRUE, 0, "", FALSE, 3, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;3;Service Date;ServiceDate;Service;", -1),
		ADD_REPORT(145, "Payments By Provider", -1, "PaymentsByProvider", "PaymentsByProviderQ", "PaymentsP", "PaymentsByProvider", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1), 
		ADD_REPORT(146, "Pays/Refs/Adjs By Category", -1, "PaymentsByCategory", "PRAByCategoryQ", "PaymentsP", "PRAByCategory", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Payment Category", "ID|Name", "0|-1", "11SELECT ID, GroupName FROM PaymentGroupsT ORDER BY GroupName", "GroupID", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(TRUE,TRUE,FALSE), TRUE, 1, "1;Pay/Ref/Adj Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(147, "PrePayments", -1, "PrePaymentsR", "PrepaymentsQ", "PaymentsP", "Prepayments", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", TRUE, "Show Applied", "ShowApplied", "", TRUE, 3, "SELECT 1, 'Show applied pre-payments'", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
		ADD_REPORT(148, "Tax Totals", -1, "TaxTotalForDateRangeR", "TaxTotalQ", "FinancialP", "TaxTotal", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Charge/Ref/App Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 4, "1;Charge/Ref/App Date;TDate;;", -1),
		ADD_REPORT(149, "Unapplied Credits", -1, "UnAppliedAllR", "UnappliedCreditsQ", "FinancialP", "UnappliedCredits", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Payment Date", FALSE, "", "", "", "", "", TRUE, "Payment Type", "LineItemType", "", TRUE, 3, "SELECT -21 AS ID, 'Payment (Regular)' AS Type UNION SELECT -20 AS ID, 'Payment (PrePayment)' AS Type UNION SELECT 2 AS ID, 'Adjustment' AS Type UNION SELECT 3, 'Refund'", FALSE, 2, "1;Payment Date;TDate;;", -1),
	//	ADD_REPORT(150, "UnPrinted HCFAs", "HCFAUnprintedR", "UnprintedHCFAsQ", "FinancialP", "UnprintedHCFAs", FALSE, 0, 0, 0, -1, 0, FALSE, "Created On Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(151, "Aged Receivables", -1, "AR", "AgedAgerQ", "FinancialP", "AgedR", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Transaction Date", FALSE, "", "", "", "", "", TRUE, "", "TDate", "", TRUE, 5, "", FALSE, 4, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", 0),
		ADD_REPORT(152, "Patient Balances By Provider", -1, "BillsPendingByProvR", "PatBalQ", "FinancialP", "PatBalByProv", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
     	ADD_REPORT(153, "Financial Activity - Daily", -1, "DailyFinancialActivity", "DailyFinancialQ", "FinancialP", "DailyFinancial", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "Login Name", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT WHERE UsersT.PersonID > 0", "InputName", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", TRUE, 10, "1;Bill Date/Payment Date;BDate;;2;Service Date/Payment Date;TDate;;3;Input Date;IDate;;", -1, -1, FALSE),
		//(c.copits 2011-09-20) PLID 43551 - The "use extended" on financial activity monthly and yearly should sort descending instead of ascending.
		// (j.jones 2016-05-10 09:02) - NX-100501 - Monthly & Yearly now pull dates from a fixed table, not based on financial data, and go from 1990 to 12 months from now
		ADD_REPORT(154, "Financial Activity - Monthly", -1, "MonthlyFinancialActivityR", "MonthlyFinancialQ", "FinancialP", "MonthlyFinancial", FALSE, 0, -1, -1, 0, 0, 1, FALSE, "", FALSE, "Month", "", "", "", "TMonth", TRUE, "Month", "MonthYear", "", FALSE, 3, "SELECT MonthKey AS Number, MonthYearText AS Selection FROM DateDimensionT WHERE MonthKey >= 199001 AND[Date] <= DATEADD(month, 12, GetDate()) GROUP BY MonthKey, MonthYearText, YearKey, MonthKey ORDER BY YearKey DESC, MonthKey DESC", TRUE, 6, "1;Bill Date/Payment Date;TDate;Service;2;Input Date;IDate;Input;3;Service Date/Payment Date;Date;ServiceDate;", -1, -1, FALSE),
		ADD_REPORT(155, "Financial Activity - Yearly", -1, "YearlyFinancialActivityR", "YearlyFinancialQ", "FinancialP", "YearlyFinancial", FALSE, 0, -1, -1, 0, 0, 0, FALSE, "", FALSE, "Year", "", "", "", "Tyear", TRUE, "Year", "TYear", "", FALSE, 3, "SELECT YearKey AS Number, Convert(nvarchar, YearKey) AS Selection FROM DateDimensionT WHERE YearKey >= 1990 AND Date <= DATEADD(year, 1, GetDate()) GROUP BY YearKey ORDER BY YearKey DESC", TRUE, 5, "1;Bill Date/Payment Date;TDate;;2;Input Date;IDate;Input;3;Service Date/Payment Date;Date;Service;", -1),
		ADD_REPORT(156, "Performance Graph", -1, "", "PerformanceFilteredQ", "FinancialP", "PerformanceGraph", FALSE, 0, -1, -1, 0, 1, 0, FALSE, "Service Date/Payment Date", FALSE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "CPT", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;Service/Payment Date;TDate;;", -1),
		ADD_REPORT(157, "Performance Analysis", -1, "", "PerformanceAnalysisUnionQ", "FinancialP", "PerformanceAnalysisMain", FALSE, 0, -1, -1, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(158, "Charges By Service Code By Patient", -1, "CPTsWithPatientsR", "ChargesByCPTQ", "ChargesP", "ChargesByCPTByPatient", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "CPTID", FALSE, "Service Code", "", "", TRUE, 0, "", TRUE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(159, "Charges By Service Code By Provider", -1, "RevenueByCPTR", "ChargesByCPTQ", "ChargesP", "ChargesByCPTByProvider", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID", "CPTID", FALSE, "Service Code", "", "", TRUE, 0, "", TRUE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", 1),
		ADD_REPORT(160, "Charges By Service Date", -1, "BillingR", "ChargesByDateQ", "ChargesP", "ChargesByServiceDateR", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 6,"1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(161, "Charges By Insurance Company", -1, "ChargesbyInsuranceR", "ChargesByInsCoQ", "ChargesP", "ChargesByInsuranceCo", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Insurance Companies", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Insurance Companies", "Balance", "", TRUE, 1, "", TRUE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(162, "Charges By Patient By Service Code", -1, "ChargesByPatByCPTR", "ChargesByCPTQ", "ChargesP", "ChargesByPatientByCPT", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
     	ADD_REPORT(163, "Patients By Patient Type", -1, "", "TypeOfPatientQ", "PatientP", "TypeOfPatientR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "", "TypeIndex|GroupName", "0|-1", "12SELECT TypeIndex, GroupName FROM GroupTypes ORDER BY GroupName", "TypeIndex", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(164, "Patient Custom Info (General One)", -1, "", "General1CustomTextQ", "PatientP", "General1CustomText", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(165, "Appointment Types", -1, "", "PurposeSetsTQ", "AdminP", "AppointmentTypesR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(166, "Appointment Purposes", -1, "", "PurposeSetQ", "AdminP", "PurposeSetR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
	//	ADD_REPORT(167, "Charges By Referring Physician", "", "ChargesByRefPhysQ", "ChargesP", "ChargesByRefPhys", FALSE, 0, -1, -1, -1, 0, FALSE, "Service Date", TRUE, "", "RefPhysID|RefPhysName", "0|-1", "12SELECT ReferringPhyST.ID AS RefPhysID, [RefPhys].[Last Name] & "", "" & [RefPhys].[First Name] & "" "" & [RefPhys].[Middle Name] AS RefPhysName FROM (Patients RIGHT JOIN ReferringPhyST ON Patients.DefaultReferringPhyID = ReferringPhyST.ID) LEFT JOIN [Contact Info] AS RefPhys ON ReferringPhyST.ContactID = RefPhys.ID", "RefPhysID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(168, "Payments By Referring Physician", -1, "", "PaymentsByRefPhysQ", "PaymentsP", "PaymentsByRefPhys", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "", "RefPhysID|RefPhysName", "0|-1", "12SELECT PersonT.ID AS RefPhysID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS RefPhysName FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(169, "Patient Statements", -1, "", "PatientStatementsQ", "FinancialP", "Statement", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(170, "Aged Receivables By Insurance Co", -1, "ARInsuranceR", "ARPatBalQ", "FinancialP", "ARByInsurance", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Bill Date", TRUE, "Insurance Company", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Age", "TDate", "", TRUE, 5, "", TRUE, 9, "1;Bill Date/Payment Date;TDate;;2;Assignment Date/Payment Date;ADate;Assign;3;Assign Date/Payment Input Date;ADate;Assign;4;Input Date;IDate;;", 0),
		ADD_REPORT(171, "Refunds By Provider", -1, "", "RefundsByProviderQ", "PaymentsP", "RefundsByProvider", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Refund Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(172, "Adjustments By Insurance Co", -1, "", "AdjustmentsByInsCoQ", "PaymentsP", "AdjustmentsByInsCo", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "[Insurance Co ID]", FALSE, "Insurance Co", "", "", TRUE, 0, "", FALSE, 3, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (f.gelderloos 2013-07-23 15:32) - PLID 57043 Added filters for 173, 215, and 216
		ADD_REPORT(173, "Adjustments By Insurance By Service Code", -1, "", "AdjustmentsByInsCoByCPTCodeQ", "PaymentsP", "AdjustmentsByInsByCPT", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID", "CPTID", TRUE, "Insurance Co", "InsID", "", TRUE, 3, "SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name;", FALSE, 4, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ServiceDate;Service;", -1),
     	ADD_REPORT(174, "Adjustments By Service Code", -1, "", "AdjustmentsByCPTCodeQ", "PaymentsP", "AdjustmentsByCPTCode", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Payment Method", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID", "CPTID", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ChargeDate;Service;", -1),
		ADD_REPORT(175, "Adjustments By Service Category", -1, "", "AdjustmentsByCPTCategoryQ", "PaymentsP", "AdjustmentsByCPTCategory", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", FALSE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(176, "Adjustments (Split By Product/Service)", -1, "", "AdjustmentsSplitQ", "PaymentsP", "AdjustmentsSplit", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Adjustment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(177, "Aged Receivables By Amount", -1, "", "AgedAgerQ", "FinancialP", "ARByAmount", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Transaction Date", FALSE, "", "", "", "", "", TRUE, "", "TDate", "", TRUE, 5, "", FALSE, 4, "1;Bill Date;TDate;;2;Input Date;IDate;;", 0),
//		ADD_REPORT(178, "Patients By Billing", "", "PatientsByBillingQ", "PatientP", "PatientsByBillingR", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1),
		ADD_REPORT(179, "Payments By Date", -1, "", "PaymentsByDateQ", "PaymentsP", "PaymentsByDate", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,FALSE,FALSE), TRUE, 3, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(180, "Inventory Items to be Ordered", -1, "", "InvLowItemsQ", "InventoryP", "InvLowItems", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "", TRUE, "Suppliers", "ID|Company", "0|-1", "12SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", "SupplierID", FALSE, "", "", "", FALSE, 0, "", TRUE, 6, "", -1),
	//	ADD_REPORT(181, "User Privileges", "", "UserPrivilegesQ", "AdminP", "UserPrivileges", FALSE, 0, 0, 0, 0, 0, FALSE, "", TRUE, "", "ID|UserName", "0|-1", "12SELECT ID, UserName FROM UserListT ORDER BY UserName", "UserID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(183, "Patient Notes", -1, "PatientNotesR", "PatientNotesQ", "PatientP", "PatientNotescombined", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Note Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Note Date;Date;;", -1),
		ADD_REPORT(184, "Patient Notes By Category", -1, "PatientNotesR", "PatientNotesQ", "PatientP", "PatNotesByCat", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Note Date", TRUE, "Category", "ID|Description", "0|-1", "12SELECT ID, Description FROM NoteCatsF", "CatID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;Note Date;Date;;", -1),
		ADD_REPORT(185, "Patients By Referring Physician", -1, "", "PatByRefPhysQ", "PatientP", "PatByRefPhysR", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "", "RefPhysID|RefPhysName", "0|-1", "11SELECT ReferringPhyST.PersonID AS RefPhysID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS RefPhysName FROM ReferringPhyST LEFT JOIN PersonT ON ReferringPhyST.PersonID = PersonT.ID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(186, "Patient Balances By Patient Type", -1, "", "PatBalbyTypeQ", "FinancialP", "PatBalbyType", TRUE, 0, 0, -1, -1, 0, 0, FALSE, "", TRUE, "Print Balances", "TypeIndex|GroupName", "0|-1", "12SELECT TypeIndex, GroupName FROM GroupTypes ORDER BY GroupName", "TypeIndex", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
     	ADD_REPORT(187, "Daily Batch Report", -1, "DailyBatchReportR", "DailyBatchQ", "FinancialP", "DailyBatchReportR", FALSE,  0, -1, -1, 0, 1, -1, FALSE, "Input Date", TRUE, "Logins To Print", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", FALSE, "Logins To Print", "", "", FALSE, 0, "", FALSE, 5, "1;Input Date;IDate;;2;Service Date;TDate;;", 1),
		ADD_REPORT(188, "Payments By Referral Source", -1, "", "PaymentsByReferralSourceQ", "PaymentsP", "PaymentsByReferralSource", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "", "PersonID|Name", "0|-1", "12SELECT ReferralSourceT.PersonID, ReferralSourceT.Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
	//	ADD_REPORT(189, "Charges By Referral Source", "", "ChargesByReferralSourceQ", "ChargesP", "ChargesByReferralSourceR", FALSE, 0, -1, -1, -1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT [Referral Source].ID, [Referral Source].Name FROM [Referral Source]", "ReferralID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(190, "Effectiveness", -1, "", "MarketingEffectivenessQ", "MarketP", "MarketingEffectiveness", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "First Contact Date", FALSE, "Referral Source", "", "", "", "", TRUE, "Referral Source", "ReferralID", "", TRUE, 3, "SELECT ReferralSourceT.PersonID AS ReferralID, ReferralSourceT.Name AS ReferralName FROM ReferralSourceT LEFT JOIN ReferralSourceT ReferralSourceT1 ON ReferralSourceT.PersonID = ReferralSourceT1.Parent GROUP BY ReferralSourceT.PersonID, ReferralSourceT1.PersonID, ReferralSourceT.Name HAVING (((ReferralSourceT1.PersonID) Is Null)) ORDER BY ReferralSourceT.Name;", FALSE, 1, "1;First Contact Date;Date;;2;First Appt Date;FirstApptDate;;", -1),
	//	ADD_REPORT(191, "Test Patients By Insurance Co", "", "PatientsByInsCoQ", "PatientP", "PatientsByInsCo", FALSE, 0, 0, -1, 0, 0, FALSE, "", FALSE, "Insurance Company", "", "", "", "", TRUE, "Insurance Company", "InsCoID", "", FALSE, 3, "SELECT [Insurance Co ID], Name FROM [Insurance Co] ORDER BY Name;", FALSE, 1),
		ADD_REPORT(192, "Deleted Patients", -1, "", "PatientsDeletedQ", "PatientP", "DeletedPatients", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Deleted Date;Date;;", -1),
		ADD_REPORT(193, "Appointments Cancelled", -1, "", "AppointmentsCanceledQ", "ScheduleP", "AppointmentsCancelled", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Appointment Types", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "ApptTypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID AS ResourceID, Item FROM ResourceT ORDER BY Item;", FALSE, 3, "1;Appt. Date;Date;;2;Cancelled Date;CancelledDate;;", -1, fboAppointment),
		ADD_REPORT(194, "Deleted Bills", -1, "", "DeletedBills", "ChargesP", "DeletedBills", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Deleted Date;TDate;;", -1),
		ADD_REPORT(195, "Deleted Charges", -1, "", "DeletedCharges", "ChargesP", "DeletedCharges", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Deleted Date;TDate;;", -1),
	//	ADD_REPORT(196, "Capitation - old", "", "CapitationQ", "FinancialP", "Capitation", FALSE, 1, -1, 0, -1, 0, FALSE, "Service Date", FALSE, "Insurance Co", "", "", "", "", TRUE, "Insurance Co", "InsuranceCoID", "", FALSE, 3, "SELECT [Insurance Co ID], Name FROM [Insurance Co] ORDER BY Name;", FALSE, 1),
		ADD_REPORT(197, "Printed Superbills", -1, "", "SuperbillsPrintedQ", "FinancialP", "PrintedSuperbills", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Printed On Date", FALSE, "Resource", "", "", "", "", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Printed on Date;TDate;;", -1),
		ADD_REPORT(199, "New Patients By Appointment Type", -1, "", "NewPatientsByApptTypeQ", "ScheduleP", "NewPatientsByApptType", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Resource", "ApptID|ApptName", "0|-1", "12SELECT AptTypeT.ID AS ApptID, AptTypeT.Name AS ApptName FROM AptTypeT ORDER BY Name", "ApptTypeID", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;First Contact Date;Date;;", -1, fboAppointment),
//		ADD_REPORT(200, "Consult to Appointment", "", "ConsultSubQ", "ScheduleP", "ConsultToAppt", TRUE, 0, 0, -1, -1, -1, 0, FALSE, "Consult Date", TRUE, "Resource", "ApptID|Name", "0|-1", "12SELECT AptTypeT.ID AS ApptID, AptTypeT.Name FROM AptTypeT WHERE (((AptTypeT.Name) Not Like '*Consult*')) ORDER BY Name;", "SetID", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1),
		ADD_REPORT(201, "Patients By Insurance Company", -1, "", "PatientsByInsCoQ", "PatientP", "PatientsByInsCo", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "", "InsCoID|Name", "0|-1", "11SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;First Contact Date;Date;;", -1),
     	ADD_REPORT(202, "Diagnosis Codes By Patient", -1, "", "ICD9CodeByPatientQ", "PatientP", "ICD9CodeByPatient", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Code", "ID|Code|Desc", "0|33|-1", "12SELECT ID, CodeNumber, CodeDesc FROM DiagCodes ORDER BY CodeNumber", "DiagID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(203, "Capitation", -1, "", "CapitationQ", "FinancialP", "Capitation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "Insurance Co", "ID|Code|SubCode", "0|33|-1", "11SELECT CPTCodeT.ID, CPTCodeT.Code, CPTCodeT.SubCode FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID);", "CPTID", TRUE, "Insurance Co", "InsCoID", "", FALSE, 3, "SELECT PersonID AS InsCoID, Name AS InsCo FROM InsuranceCoT ORDER BY InsuranceCoT.Name", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(204, "Check Bill Date", -1, "", "dBillsQ", "OtherP", "dBillsR", FALSE, 0, 0, 0, 0, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(205, "Check Birthday Date", -1, "", "dBirthdaysQ", "OtherP", "dBirthdaysR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Birthday", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Birthday;TDate;;", -1),
		ADD_REPORT(206, "Check Charges Date", -1, "", "dCharges2Q", "OtherP", "dCharges2R", FALSE, 0, 0, 0, 0, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(207, "Check Charges To/From Dates", -1, "", "dChargesQ", "OtherP", "dChargesR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(208, "Check Line Item Date", -1, "", "dLineItemQ", "OtherP", "dLineItemR", FALSE, 0, 0, 0, 0, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(209, "Check Medication Date", -1, "", "dMedicationQ", "OtherP", "dMedicationR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Medication Date;TDate;;", -1),
		ADD_REPORT(210, "Check Notes Date", -1, "", "dNotesQ", "OtherP", "dNotesR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Notes Date;TDate;;", -1),
		ADD_REPORT(211, "Check Payments Date", -1, "", "dPaymentsQ", "OtherP", "dPaymentsR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Deposit Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Deposit Date;TDate;;", -1),
     	ADD_REPORT(212, "Check Reservations Date", -1, "", "dReservationsQ", "OtherP", "dReservationsR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Appt. Date;TDate;;", -1),
		ADD_REPORT(213, "Check To Do List Dates", -1, "", "dTodoQ", "OtherP", "dTodoR", FALSE, 0, 0, 0, 0, 1, 1, FALSE, "Remind by date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Start Reminding Date;TDate;Service;2;Deadline Date;IDate;Input;", -1),
		ADD_REPORT(214, "Check Insured Parties Without Insurance", -1, "", "dInsuredPartyWoInsuranceCoQ", "OtherP", "dInsuredPartyWoInsuranceCo", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(215, "Adjustments By Inventory Item", -1, "", "AdjustmentsByInvItemQ", "PaymentsP", "AdjustmentsByInvItem", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Payment Method", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID", "CPTID", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ServiceDate;Service;", -1),
		ADD_REPORT(216, "Adjustments By Insurance By Inventory Item", -1, "", "AdjustmentsByInsCoByInvItemCodeQ", "PaymentsP", "AdjustmentsByInsByInvItem", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID", "CPTID", TRUE, "Insurance Co", "InsID", "", TRUE, 3, "SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name;", FALSE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ServiceDate;Service;", -1),
		ADD_REPORT(217, "Payments By Inventory Item", -1, "PaymentsByInvItem", "PaymentsByInvItemQ", "PaymentsP", "PaymentsByInvItem", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Payment Method", "ID|Item", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID", "CPTID", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,TRUE,TRUE), FALSE, 6, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;3;Charge Date;ChargeDate;Input;4;Charge Input Date;ChargeInputDate;Input;", -1),
		ADD_REPORT(218, "Charges By Inventory Item By Patient", -1, "", "ChargeByInvByPatQ", "ChargesP", "ChargesByInvItemByPatient", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID", "ServiceID", TRUE, "Service Code", "SupplierID", "", TRUE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(219, "Charges By Inventory Item By Provider", -1, "", "ChargesByInvByProvQ", "ChargesP", "ChargesByInvItemByProvider", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID", "ServiceID", TRUE, "Service Code", "SupplierID", "", TRUE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (v.maida - 2014-03-04 09:18) - PLID 18280 - Added external filter for inventory items
		ADD_REPORT(220, "Charges By Patient By Inventory Item", -1, "", "ChargesByPatByInvQ", "ChargesP", "ChargesByPatientByInvItem", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE,  "Service Code",  "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID", "ServiceID",  FALSE,  "",  "",  "",  TRUE,  0,  "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(221, "Contact Notes (PP)", -1, "", "ContactNotesQ", "", "ContactNotes", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "", "PersonID", "", FALSE, 0, "", FALSE, 1, "1;;Date;;", -1),
     	ADD_REPORT(222, "Patient Appointments (PP)", -1, "", "AppointmentsT", "", "PatientAppR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;;Date;;", -1),
		// (j.dinatale 2010-08-30) - PLID 33266 - Changed version from 2 to 3, reflects the addition of insurance information to the Patients General 1 print preview report
		ADD_REPORT(223, "Patient General (PP)", -1, "", "PatientGeneralQ", "", "PatientGeneral", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 6, "", 1),
		ADD_REPORT(224, "PatInsInfo (PP)", -1, "", "PatInsInfoQ", "", "PatInsInfoR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "", -1),
		ADD_REPORT(225, "Diagnosis Codes By Provider", -1, "", "_DiagCodesByProviderQ", "ChargesP", "DiagCodesByProvider", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Diagnosis Code", "CodeNumber|CodeDesc", "0|-1", "11SELECT CodeNumber, CodeDesc FROM DiagCodes", "DiagCode", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(226, "Billing Dialog (PP)", -1, "", "BillingDialogQ", "", "BillingDialog", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 11, "", -1),
		ADD_REPORT(227, "Quote (PP)", -1, "", "QuoteQ", "", "Quote", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 24, "", -1),
		ADD_REPORT(228, "Paper Claim List (PP)", -1, "", "PaperBatchQ", "", "PaperBatchList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(229, "Deposit Slip (PP)", -1, "", "DepositSlipQ", "", "DepositSlip", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 9, "", -1),
		ADD_REPORT(230, "Ebilling Batch List (PP)", -1, "", "EbillingBatchQ", "", "EbillingBatchList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 4, "", -1),
		ADD_REPORT(231, "Patient Fin History (PP)", -1, "", "PtFinHistoryQ", "", "PatientFinHistory", FALSE, 0, 0, 0, -1, 1, 0, FALSE, "Bill/Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;Bill/Pay Date;TopDate;;", -1),
//DRT 6/2/2004 - PLID 12647 - This report is never used in the program, and doesn't even have a query declaration in reportinfopreview!
//		ADD_REPORT(232, "HCFA Errors (PP)", "", "HCFAErrorsQ", "", "HCFAErrors", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(233, "Audit Trail - Financial", -1, "", "AuditTrailQ", "OtherP", "AuditTrailFinancial", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(234, "Individual Patient Statements", -1, "", "PatientStatementMstrQ", "", "Statement", TRUE, 1, -1, 0, -1, 1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "PatTotResp", "", TRUE, 1, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(235, "Payment Dialog (PP)", -1, "", "PaymentDlgQ", "", "PayReceipts", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 23, "", -1),
//The prod history report shows virtually the same info as this report, except without the "number in stock at that date" feature, which doesn't work correctly all the time anyways.  Until we get this report solid, I think we're better off without it than having it wrong.
//		ADD_REPORT(236, "Inventory Tracking", "", "InvTrackingQ", "InventoryP", "InvTracking", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Transaction Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(237, "Quotes By Patient Coordinator", -1, "", "QuotesByPatientCoordinatorQ", "ChargesP", "QuotesByPatCoord", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(238, "Aged Receivables By Patient", -1, "AR", "AgedAgerQ", "FinancialP", "ARByPat", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Transaction Date", FALSE, "", "", "", "", "", TRUE, "", "TDate", "", TRUE, 5, "", FALSE, 4, "1;Bill Date;TDate;;2;Input Date;IDate;;", 0),
		//ADD_REPORT(239, "Scheduling Reports (PP)", "", "SchReportsApptsQ", "", "SchApptsPP", FALSE, 0, 0, 0, 0, -1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;;Date;;", -1),
		ADD_REPORT(240, "Patient Notes (PP)", -1, "", "PatNotesQ", "", "PatientNotescombined", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(241, "Charges By Place Of Service", -1, "ChargesByPlaceOfService", "ChargesByPlaceOfServiceQ", "ChargesP", "ChargesByPlaceOfService", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "12SELECT ServiceT.ID, CASE WHEN CPTCodeT.ID IS NULL THEN convert(nvarchar, ServiceT.ID) ELSE CPTCodeT.Code + ' ' + CPTCodeT.SubCode END AS Code, Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID", "CPTID", TRUE, "Place Of Service", "ServiceLocation", "", TRUE, 3, "SELECT ID, Name FROM LocationsT WHERE TypeID = 1 ORDER BY Name", FALSE, 7, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
     	ADD_REPORT(242, "Charges By Location", -1, "", "ChargesByLocationQ", "ChargesP", "ChargesByLocation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(243, "Payments By Charge Location", -1, "", "PaymentsByLocationQ", "PaymentsP", "PaymentsByLocation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(244, "Payments By Charge Date", -1, "", "PaymentsByChargeDateQ", "PaymentsP", "PaymentsByChargeDate", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "ItemCode", "ID|Code|Name", "0|33|-1", "12SELECT ServiceT.ID, CASE WHEN CPTCodeT.ID IS NULL THEN convert(nvarchar, ServiceT.ID) ELSE CPTCodeT.Code + ' ' + CPTCodeT.SubCode END AS Code, Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY Code", "CPTID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;3;Bill Date;BDate;Service;", -1),
		ADD_REPORT(245, "Order (PP)", -1, "", "InvoiceQ", "", "Invoice", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 10, "", -1),
		ADD_REPORT(246, "Printed HCFA's", -1, "", "PrintedQ", "ChargesP", "PrintedHCFA", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Sent Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Sent Date;TDate;;", -1),
		ADD_REPORT(247, "Bills Converted from Quotes", -1, "", "QuoteSubQ", "ChargesP", "BillsFromQuotes", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", FALSE, "", "", "", "", "PatCoordID", TRUE, "Patient Coordinator", "PatCoordID", "", TRUE, 3, "SELECT PersonID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE PatientCoordinator = 1 ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", FALSE, 3, "1;Bill Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(248, "Unconverted Quotes", -1, "", "UnconvertedQuotesQ", "ChargesP", "UnconvertedQuotes", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Quote Date", FALSE, "", "", "", "", "CoordID", TRUE, "Patient Coordinator", "CoordID", "", TRUE, 3, "SELECT PersonID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE PatientCoordinator = 1 ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", FALSE, 2, "1;Quote Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(249, "Scheduling Activity", -1, "", "SchedActQ", "ScheduleP", "SchedulingActivity", TRUE, 0, 0, -1, 0, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "AptTypeID", TRUE, "Resource", "ItemID", "", TRUE, 3, "SELECT ID as ItemID, Item FROM ResourceT ORDER BY Item;", FALSE, 4, "1;Appt. Date;Date;;2;Input Date;IDate;;3;Modified Date;MDate;;", -1, fboAppointment),
//		ADD_REPORT(250, "Screening to Appointment", "", "ScreeningSubQ", "ScheduleP", "ScreeningToAppt", TRUE, 0, 0, -1, -1, -1, 0, FALSE, "Consult Date", TRUE, "Resource", "ApptID|Name", "0|-1", "12SELECT AptTypeT.ID AS ApptID, AptTypeT.Name FROM AptTypeT WHERE (((AptTypeT.Name) Not Like '*Screening*')) ORDER BY Name;", "SetID", TRUE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1),
		ADD_REPORT(251, "Procedure List", -1, "", "ProceduresQ", "AdminP", "ProcedureList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(252, "Insurance Procedures", -1, "", "InsProceduresQ", "PaymentsP", "InsuranceProcedures", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 3, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
     	ADD_REPORT(253, "Procedures By Date", -1, "", "ProcedureQ", "ScheduleP", "Procedures", TRUE, 1, 0, 0, -1, 1, 0, FALSE, "Appointment Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Appointment Date;Date;;", -1, fboAppointment),
		ADD_REPORT(254, "EMR Data By Provider", -1, "", "EMRMasterQ", "OtherP", "EMRDataByProvider", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Procedure Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Generated from Template", "TemplateID", "", FALSE, 3, "SELECT ID, Name From EMRTemplateT WHERE Deleted = 0 ORDER BY Name ASC", FALSE, 5, "1;EMR Date;TDate;Service;2;Input Date;IDate;Input;", -1, fboEMN),
		ADD_REPORT(255, "EMR Totals By Age/Gender", -1, "", "EMRMasterQ", "OtherP", "EMRTotalsByAge", FALSE, 1, -1, -1, 0, 1, 1, FALSE, "Procedure Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Generated from Template", "TemplateID", "", FALSE, 3, "SELECT ID, Name From EMRTemplateT WHERE Deleted = 0 ORDER BY Name ASC", FALSE, 4, "1;EMR Date;TDate;Service;2;Input Date;IDate;Input;", -1, fboEMN),
		ADD_REPORT(256, "EMR Data By Patient", -1, "", "EMRMasterQ", "OtherP", "EMRDataByPatient", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Procedure Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Generated from Template", "TemplateID", "", TRUE, 3, "SELECT ID, Name From EMRTemplateT WHERE Deleted = 0 ORDER BY Name ASC", FALSE, 6, "1;EMR Date;TDate;Service;2;Input Date;IDate;Input;", -1, fboEMN),
		ADD_REPORT(257, "EMR / Op Report (PP)", -1, "", "EMRMasterQ", "", "EMRDataByPatientIndiv", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "", -1),
		ADD_REPORT(258, "New Patient Procedures", -1, "", "PatientInterestsQ", "MarketP", "PatientInterests", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "Interest", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
//		ADD_REPORT(259, "Procedure Steps", "", "PatientInterestsQ", "MarketP", "ProcedureSteps", TRUE, 0, 0, 0, 0, -1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1),
		ADD_REPORT(260, "ASAPS Survey", -1, "", "ASAPSQ", "AdminP", "ASAPS", TRUE, 0, -1, 0, -1, 1, 0, FALSE, "Appointment Date", FALSE, "", "", "", "", "", TRUE, "Resource", "ItemID", "", TRUE, 3, "SELECT ID as ItemID, Item FROM ResourceT ORDER BY Item;", FALSE, 6, "1;Appointment Date;TDate;;", -1),
		ADD_REPORT(261, "Audit Trail - Scheduling", -1, "", "AuditTrailQ", "OtherP", "AuditTrailSched", FALSE, 0, 0, 0, -1, 1, 0, FALSE, "Date of Change", TRUE, "UserName", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		// (j.jones 2016-05-10 09:02) - NX-100501 - this now pulls dates from a fixed table, not based on financial data, and goes from 1990 to next year
		ADD_REPORT(262, "ASPS Survey", -1, "", "ASPSQ", "AdminP", "ASPS", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Year", "TYear", "", FALSE, 3, "SELECT YearKey AS Number, Convert(nvarchar, YearKey) AS Selection FROM DateDimensionT WHERE YearKey >= 1990 AND Date <= DATEADD(year, 1, GetDate()) GROUP BY YearKey ORDER BY YearKey DESC", FALSE, 2, "", -1),
     	ADD_REPORT(263, "Procedures Billed By Date", -1, "", "ProcedureQ", "ScheduleP", "ProceduresBilled", TRUE, 1, 0, 0, -1, 1, 0, FALSE, "Appointment Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Appointment Date;Date;;", -1, fboAppointment),
		ADD_REPORT(264, "Scheduling Totals", -1, "", "SchedTotalsQ", "ScheduleP", "SchedulingTotals", TRUE, 2, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "SetID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID as ItemID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(265, "Account Balances By Provider", -1, "", "PatBalQ", "FinancialP", "AcctBalByProv", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(266, "Account Balances By Patient Type", -1, "", "PatBalbyTypeQ", "FinancialP", "AcctBalbyType", TRUE, 0, 0, -1, -1, 0, 0, FALSE, "", TRUE, "Print Balances", "TypeIndex|GroupName", "0|-1", "12SELECT TypeIndex, GroupName FROM GroupTypes ORDER BY GroupName", "TypeIndex", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(267, "Inventory Values", -1, "", "InvValue", "InventoryP", "InvValues", FALSE, 0, 0, -1, 0, 1, 0, TRUE, "Date", TRUE, "", "ID|CategoryName", "0|-1", "12SELECT ID, Name AS CategoryName FROM CategoriesT", "CategoryID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", TRUE, 3, "1;Date;Date;;", 0),
		ADD_REPORT(268, "Inventory Sales", -1, "", "InvSalesQ", "FinancialP", "InvSales", TRUE, 0, 0, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ItemID", TRUE, "Coordinator", "CoordID", "", TRUE, 3, "SELECT PersonID, UserName FROM UsersT WHERE PatientCoordinator = 1 AND UsersT.PersonID > 0 ORDER BY UserName", FALSE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(269, "Inventory Sales By Provider", -1, "", "InvSalesQ", "FinancialP", "InvSalesByProv", TRUE, 0, -1, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ItemID",  TRUE, "Supplier", "SupplierID", "", TRUE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(270, "Inventory Sales By Category", -1, "", "InvSalesQ", "FinancialP", "InvSalesByCategory", TRUE, 0, 0, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ItemID", TRUE, "Category", "CategoryID", "", TRUE, 3, "SELECT ID, Name FROM CategoriesT ORDER BY Name", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (j.jones 2016-05-10 09:02) - NX-100501 - this now pulls dates from a fixed table, not based on financial data, and goes from 1990 to next year
		ADD_REPORT(271, "Inventory Sales Graph", -1, "", "InvSalesQ", "FinancialP", "InvSalesGraph", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ItemID", TRUE, "Year", "TYear", "", FALSE, 3, "SELECT YearKey AS Number, Convert(nvarchar, YearKey) AS Selection FROM DateDimensionT WHERE YearKey >= 1990 AND Date <= DATEADD(year, 1, GetDate()) GROUP BY YearKey ORDER BY YearKey DESC", FALSE, 2, "", -1),
		ADD_REPORT(272, "Patients By Referring Patient", -1, "", "PatbyRefPatQ", "MarketP", "PatByRefPatient", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
     	ADD_REPORT(273, "Consults Without Surgeries", -1, "", "ConsultNoSurgeryQ", "MarketP", "ConsNoSurg", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Consult Date", TRUE, "Purpose", "ID|Name", "0|-1", "12SELECT AptPurposeT.ID, AptPurposeT.Name FROM AptPurposeT ORDER BY Name", "PurposeID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Consult Date;Date;;", -1),
		ADD_REPORT(274, "Product History", -1, "", "ProductProfitQ", "InventoryP", "ProductHistory", FALSE, 1, 0, -1, 0, 1, 0, FALSE, "Order/Sale Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID WHERE ProductT.ID IN (SELECT ProductID FROM ProductLocationInfoT WHERE TrackableStatus = 2) ORDER BY ServiceT.Name", "ProdID", TRUE, "ItemType", "ItemType", "", FALSE, 3, "SELECT 1 AS ID, 'Ordered' AS Name UNION SELECT 2 AS ID, 'Billed' AS Name UNION SELECT 3 AS ID, 'Adjusted' AS Name UNION SELECT 5 AS ID, 'Items Transferred To Location' AS Name UNION SELECT 6 AS ID, 'Items Transferred From Location' AS Name UNION SELECT 7 AS ID, 'Allocations' AS Name UNION SELECT 8 AS ID, 'Transferred to Consignment' AS Name UNION SELECT 9 AS ID, 'Purchased from Consignment' AS Name", TRUE, 6, "1;Order/Sale Date;Date;;", -14),
		ADD_REPORT(275, "Charges By Category By Provider", -1, "ChargesByCategoryByProv", "ChargesByCategoryQ", "ChargesP", "ChargesByCategoryByProv", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", FALSE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(276, "Charges By Diag Code By Service Code", -1, "", "ChargesByDiagCPTQ", "ChargesP", "ChargesbyDiagCodeByCPTCode", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Diagnosis Code", "CodeNumber|CodeDesc", "25|-1", "11SELECT CodeNumber, CodeDesc FROM DiagCodes", "DiagCode", TRUE, "Service Code", "ServiceID", "", TRUE, 3, "SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID ORDER BY ServiceT.Name", TRUE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(277, "Check Invalid Appointments", -1, "", "BadApptsQ", "OtherP", "BadAppts", FALSE, 2, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(278, "Appointments By Purpose", -1, "", "SurgerySubQ", "ScheduleP", "ApptsByPurpose", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Purpose", "ID|Name", "0|-1", "12SELECT AptPurposeT.ID, AptPurposeT.Name FROM AptPurposeT ORDER BY AptPurposeT.Name", "PurposeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(279, "Appointment Types By Purpose", -1, "", "ApptTypesByPurpose", "AdminP", "ApptTypesByPurpose", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
//		ADD_REPORT(280, "Appointment Purposes By Type", "", "ApptPurposesByType", "AdminP", "ApptPurposesByType", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1),
		ADD_REPORT(281, "Consults To Procedures", -1, "", "ConsultsToSurgeryQ", "ScheduleP", "ConsultToSurgery", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", TRUE, "Purpose", "ID|Name", "0|-1", "12SELECT AptPurposeT.ID, AptPurposeT.Name FROM AptPurposeT ORDER BY Name", "PurposeID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Consult Date;Date;;", -1),
		ADD_REPORT(282, "Patients By Procedure", -1, "", "PatByProcQ", "PatientP", "PatientsByProcedure", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 3, "", TRUE, 3, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(283, "Tracking Steps By Procedure", -1, "", "PatByStepQ", "MarketP", "StepsByProc", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures/Procedure Groups", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Step", "PtStepID", "", TRUE, 3, "SELECT QUOTENAME(StepName, '''') AS ID, StepName FROM StepTemplatesT GROUP BY StepName UNION SELECT QUOTENAME('Done', '''') AS ID, 'Done' AS StepName ORDER BY StepName", FALSE, 3, "1;First Interest Date;Date;;", -1),
     	ADD_REPORT(284, "Procedure Correlation By Cause", -1, "", "LegacyQ", "FinancialP", "ProCorCause", FALSE, 0, -1, -1, 0, 1, 0, FALSE, "Charge Date", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "CauseID", FALSE, "", "", "", FALSE, 3, "", FALSE, 1, "1;Charge Date;TDate;;", -1),
		ADD_REPORT(285, "Patients By Coordinator", -1, "", "BadQueryNameQ", "PatientP", "PatByCoord", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Input Date", TRUE, "Coordinators", "PersonID|Name", "0|-1", "12SELECT ID, Last + ', ' + First + ' ' + Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE UsersT.PatientCoordinator <> 0", "UserID", FALSE, "Coordinators", "", "", TRUE, 0, "", FALSE, 3, "1;Input Date;Date;;", -1),
		ADD_REPORT(286, "Charge Totals By Doctor \\ Provider", -1, "", "BadQueryNameQ", "ChargesP", "ChargeTotalsByProv", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;3;Bill Date;BillDate;Service;", -1),
		ADD_REPORT(287, "Appointments By Input Date", -1, "", "SurgerySubQ", "ScheduleP", "ApptsByInputDate", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "SetID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Input Date;Date;;", -1, fboAppointment),	
		ADD_REPORT(288, "Appointments By Patient Coordinator", -1, "", "SurgerySubQ", "ScheduleP", "ApptsByPatCoord", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "ID", TRUE, "Patient Coordinator", "PatCoordID", "", TRUE, 3, "SELECT PersonID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE PatientCoordinator = 1 ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", FALSE, 4, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(289, "Services \\ Items By Category", -1, "", "SomeQueryQ", "AdminP", "ServicesByCat", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "Category", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT", "CatID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		// (m.hancock 2006-10-24 15:34) - PLID 22216 - Enabled group and filter capability and added extended filter for inactive or active contacts.
		ADD_REPORT(290, "Other Contact List", -1, "", "OthrContactQ", "OthrContactP", "OtherContactList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Archived", "Archived", "", TRUE, 3, "SELECT 0 AS Archived, 'Active' AS Name UNION SELECT 1 AS Archived, 'Inactive' AS Name", FALSE, 3, "", -1, -1, FALSE),
		ADD_REPORT(291, "Patients By Tracking Step", -1, "", "PatByStepQ", "MarketP", "PatientsByStep", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures/Procedure Groups", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Step", "PtStepID", "", TRUE, 3, "SELECT QUOTENAME(StepName, '''') AS ID, StepName FROM StepTemplatesT GROUP BY StepName UNION SELECT QUOTENAME('Done', '''') AS ID, 'Done' AS StepName ORDER BY StepName", FALSE, 3, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(292, "Procedures By Tracking Step", -1, "", "ProcsByStepQ", "MarketP", "ProcsByStep", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures/Procedure Groups", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Step", "PtStepID", "", TRUE, 3, "SELECT QUOTENAME(StepName, '''') AS ID, StepName FROM StepTemplatesT GROUP BY StepName UNION SELECT QUOTENAME('Done', '''') AS ID, 'Done' AS StepName ORDER BY StepName", FALSE, 3, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(293, "Patient Tracking By Patient Coordinator", -1, "", "TrackingByCoordQ", "MarketP", "TrackingByCoord", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures", "ID|Name|Type", "0|67|33", "12SELECT ID, Name, 'Procedure' FROM ProcedureT WHERE MasterProcedureID Is Null AND ID IN (SELECT ProcedureID FROM ProcInfoDetailsT) UNION ALL SELECT ID, Name, 'Group' FROM ProcedureGroupsT GROUP BY ID, Name ORDER BY Name", "ProcID", TRUE, "Coordinator", "CoordID", "", TRUE, 3, "SELECT PersonID AS UserID, Last + ', ' + First + ' ' + Middle AS Name FROM UsersT INNER JOIN PersonT ON UsersT.PersonID = PersonT.ID AND UsersT.PersonID > 0 WHERE PatientCoordinator = 1 ORDER BY Last, First, Middle", FALSE, 1, "1;First Interest Date;Date;;", -1),
		//ADD_REPORT(294, "Prescription (PP)", "", "PrescriptionQ", "", "Prescription", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(295, "Active Steps By Age", -1, "", "ActiveStepsAgeQ", "MarketP", "ActiveStepsAged", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", TRUE, "Procedures", "Name|Type", "0|67|33", "12SELECT ID, Name, 'Procedure' FROM ProcedureT WHERE MasterProcedureID Is Null AND ID IN (SELECT ProcedureID FROM ProcInfoDetailsT) UNION ALL SELECT ID, Name, 'Group' FROM ProcedureGroupsT GROUP BY ID, Name ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "", 0),
		ADD_REPORT(296, "Patients with Suppressed Statements", -1, "", "PatsWithSupressedStatementsQ", "AdminP", "PatientsSuppressed", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
    	ADD_REPORT(297, "Financial Activity - Daily (By Charge Code)", -1, "", "DailyFinancialCPTQ", "FinancialP", "DailyFinancialCPT", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "Charge Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID UNION SELECT ServiceT.ID, cast(ServiceT.ID as nvarchar(255)), ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID", "CPTID", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", TRUE, 7, "1;Bill Date/Payment Date;BDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
		ADD_REPORT(298, "Scheduling Count", -1, "", "SchedTotalsQ", "ScheduleP", "SchedulingCount", TRUE, 2, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "SetID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID as ItemID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(299, "Daily Posting Totals", -1, "", "PostingTotalsQ", "FinancialP", "DailyPostingTotals", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "1;Service Date/Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(300, "Procedures By Status", -1, "", "ProcByStatusQ", "MarketP", "ProcsByStatus", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures", "ID|Name", "0|67", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Status", "StatusID", "", TRUE, 3, "SELECT ID, Name FROM LadderStatusT ORDER BY Name", FALSE, 1, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(301, "Patients with Active Procedures", -1, "", "PatsWithActiveProcsQ", "PatientP", "PatsWithProcs", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Statuses", "ID|Name", "0|-1", "12SELECT ID, Name FROM LadderStatusT WHERE ID <> 0 AND ID <> 2", "StatusID", TRUE, "Procedure", "ProcID", "", TRUE, 3, "SELECT ID, Name FROM ProcedureT Name", FALSE, 1, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(302, "Patients with Finished Procedures", -1, "", "PatsWithFinishedProcsQ", "PatientP", "PatsWithDoneProcs", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 1, "", FALSE, 1, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(303, "No Show Patients(By Patient)", -1, "", "NoShowQ", "ScheduleP", "NoShowbyPatient", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Types", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(304, "No Show Patients(By Location)", -1, "", "NoShowQ", "ScheduleP", "NoShowbyLocation", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Types", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(305, "No Show Patients(By Referral Source)", -1, "", "NoShowQ", "ScheduleP", "NoShowbyRefSrc", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Types", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(306, "No Show Patients(By Patient Coordinator)", -1, "", "NoShowQ", "ScheduleP", "NoShowbyCoord", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Types", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(307, "Cnslt To Surgery(By Patient)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByPatient", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 3, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(308, "Cnslt To Surgery(By Location)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByLocation", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 3, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(309, "Cnslt To Surgery(By Referral Source)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByRefSrc", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 3, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(310, "Cnslt To Surgery(By Patient Coordinator)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByCoord", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 3, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(311, "Cnslt To Surgery(By Resource)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByResource", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 3, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(312, "Cnslt Without Surg(By Patient)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyPatient", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(313, "Cnslt Without Surg(By Location)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyLocation", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(314, "Cnslt Without Surg(By Referral Source)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyRefSrc", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(315, "Cnslt Without Surg(By Patient Coordinator)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyCoord", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(316, "Cnslt Without Surg(By Resource)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyResource", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(317, "Cnslt Cancelled, Not Resch(By Patient)", -1, "", "NoShowQ", "ScheduleP", "ConsCancelNoReschedbyPatient", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(318, "Cnslt Cancelled, Not Resch(By Location)", -1, "", "NoShowQ", "ScheduleP", "ConsCancelNoReschedbyLocation", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(319, "Cnslt Cancelled, Not Resch(By Ref. Source)", -1, "", "NoShowQ", "ScheduleP", "ConsCancelNoReschedbyRefSrc", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(320, "Cnslt Cancelled, Not Resch(By Pat. Coordinator)", -1, "", "NoShowQ", "ScheduleP", "ConsCancelNoReschedbyCoord", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(321, "Contact Report", -1, "", "ErrorQ", "PatientP", "ContactReport", TRUE, 0, 0, 0, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE,  22, "", -1),
		ADD_REPORT(322, "Batch Payments", -1, "", "BatchPaymentsQ", "PaymentsP", "BatchPayments", TRUE, 0, -1, -1, 0, 1, 1, FALSE, "Batch Payment Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name AS Name FROM InsuranceCoT ORDER BY Name", "InsuranceID", FALSE, "", "", "", TRUE, 0, "", FALSE, 9, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(323, "Serial Numbered / Expirable Products By Patient", -1, "", "InvReportQ", "InventoryP", "SerializedProductsByPatient", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Charge Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY Name", "ProductID", TRUE, "Supplier", "SupplierID", "", TRUE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 4, "1;Charge Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(324, "Serial Numbered / Expirable Products In Stock", -1, "", "InvReportQ", "InventoryP", "SerializedProductsInStock", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY Name", "ProductID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 1, "", -1),
		ADD_REPORT(325, "Financial Activity - Daily (By Charge Category)", -1, "", "DailyFinancialCPTCatQ", "FinancialP", "DailyFinancialCPTCat", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "", "ID|Name", "0|-1", "12SELECT CategoriesT.ID, CategoriesT.Name FROM CategoriesT", "Category", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", FALSE, 9, "1;Bill Date/Payment Date;BDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
		ADD_REPORT(326, "Inventory Items Given", -1, "", "InvQ", "InventoryP", "InvItemsGiven", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ItemID", TRUE, "Supplier", "SupplierID", "", TRUE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 1, "1;Date;Date;;", -1),
		ADD_REPORT(327, "Cumulative Visual Acuity", -1, "", "CumulativeVAQ", "AdminP", "CumulativeVA", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Procedure Date", TRUE, "", "ID|Type", "0|-1", "12SELECT ID, Type FROM EyeVisitTypesT", "VisitType", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Procedure Date;Date;;", -1),
		//m.hancock PLID 16757 8/29/05 - Filter refractive visits report using test types
		ADD_REPORT(328, "Refractive Outcomes", -1, "", "RefOutcomeQ", "AdminP", "RefOutcomes", FALSE, 0, -1, -1, 0, 1, 0, FALSE, "Procedure Date", FALSE, "", "", "", "", "", TRUE, "Test Name", "TestID", "", FALSE, 3, "SELECT TestID, TestName FROM EyeTestTypesT ORDER BY TestName", FALSE, 1, "1;Procedure Date;Date;;", -1),
		ADD_REPORT(329, "Diagnosis Codes", -1, "DiagCodesR", "DiagCodeListQ", "AdminP", "DiagCodes", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Active", "Active", "", FALSE, 3, "SELECT 1, 'Active' UNION SELECT 0, 'Inactive'", FALSE, 3, "", -1, -1, 1),
		ADD_REPORT(330, "Surgery List w/ Referrals", -1, "", "ScheduleQ", "MarketP", "SurgeryListwReferrals", TRUE, 1, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "", "ID|Referral", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT", "ReferralID", TRUE, "Purpose", "PurposeID", "", TRUE, 3, "SELECT ID, Name FROM AptPurposeT", TRUE, 6, "1;Appt. Date;Date;;", -1),
		ADD_REPORT(331, "Inventory Barcodes", -1, "", "BarCodesQ", "InventoryP", "InvBarCodes", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID ORDER BY Name", "ProductID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM SupplierT INNER JOIN PersonT ON SupplierT.PersonID = PersonT.ID ORDER BY Company", FALSE, 3, "", -1),
		ADD_REPORT(332, "EMR Data By Item", -1, "", "EMRDataByItemQ", "OtherP", "EMRDataByItem", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "EMR Date", TRUE, "", "ID|Name|Data", "0|33|-1", "12SELECT EMRDataT.ID, EMRInfoT.Name, EMRDataT.Data FROM EMRInfoT LEFT JOIN EMRDataT ON EMRInfoT.ID = EMRDataT.EMRInfoID WHERE EMRInfoT.DataType = 2 ORDER BY EMRInfoT.Name", "DataID", TRUE, "Procedure", "ProcedureID", "", TRUE, 3, "SELECT ID, Name FROM ProcedureT", FALSE, 2, "1;EMR Date;TDate;;", -1, fboEMN),
		ADD_REPORT(333, "Applied Prepayments", -1, "", "AppliedPrepaysQ", "FinancialP", "AppliedPrepays", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Apply Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Apply Date;ApplyDate;;2;Service Date/Payment Date;TDate;;", -1),
		ADD_REPORT(334, "Total Patient Revenue", -1, "", "RevenueQ", "MarketP", "TotalPatientRevenue", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Payment Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", TRUE, "IsPatPay", "IsPatPay", "", TRUE, 3, "SELECT 0 AS ID, 'Insurance Payments Only' AS Name UNION SELECT 1, 'Patient Payments Only'", FALSE, 2, "1;Payment Date;Date;;", 1),
		ADD_REPORT(335, "Outstanding Insurance Balances", -1, "", "OustandQ", "FinancialP", "OutstandingInsBalances", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Insurance Company", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Aged Period", "AgedDaysFilter", "", TRUE, 3, "SELECT 1 AS ID, 'Charge Dates > 30 Days' UNION SELECT 2, 'Charge Dates > 60 Days' UNION SELECT 3, 'Charge Dates > 90 Days' UNION SELECT 4, 'Charge Dates > 120 Days' UNION SELECT 5, 'Charge Dates Between 0 and 30 Days' UNION SELECT 6, 'Charge Dates Between 31 and 60 Days' UNION SELECT 7, 'Charge Dates Between 61 and 90 Days' UNION SELECT 8, 'Charge Dates Between 91 and 120 Days'", FALSE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
//gone	//ADD_REPORT(336, "Paper UB92 List (PP)", "", "PaperUB92Q", "", "PaperUB92List", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(337, "Patient Statements By Location", -1, "", "PatStatementsByLocQ", "FinancialP", "StatementLoc", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 6, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(338, "Individual Patient Statements By Location", -1, "", "PatientStatementMstrQ", "", "StatementLoc", TRUE, 1, -1, 0, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "PatTotResp", "", TRUE, 1, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(339, "Patient Notes By User", -1, "", "PatientNotesQ", "PatientP", "PatientNotesByUser", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Note Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonID AS ID, UserName FROM UsersT WHERE UsersT.PersonID > 0 ORDER BY UserName", "UserID", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Note Date;Date;;", -1),
		ADD_REPORT(340, "Aged Payment Activity", -1, "", "AgedPayActivityQ", "FinancialP", "AgedPayActivity", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Service Date;TDate;;", 0),
		ADD_REPORT(341, "Case History", -1, "", "AliasQ", "ASCP", "CaseHistory", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", ""/*Due to special code in Externalform.cpp, this is unused*/, TRUE, "Completed", "CompletedVal", "", TRUE, 3, "SELECT 0 AS ID, 'Incomplete' AS Name UNION SELECT 1 AS ID, 'Complete' AS Name", FALSE, 3, "1;Surgery Date;SurgDate;;", -1),
		// (j.jones 2010-02-04 11:59) - PLID 37113 - supported the NY Medicaid form
		// (d.singleton 2011-10-04 11:22) - PLID 42719 - added claim total  ---  r.wilson pl 40712 added 'Manually Marked Sent Without Export' to the extended filter
		ADD_REPORT(342, "Claim History", -1, "", "ClaimHistoryQ", "FinancialP", "ClaimHistory", TRUE, 1, 0, -1, -1, 1, 0, FALSE, "Claim Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM InsuranceCoT", "InsCoID", TRUE, "SendStyle", "SendType", "", TRUE, 3, "SELECT 0, 'Electronic' UNION SELECT 1, 'HCFA Form' UNION SELECT 2, 'UB Form' UNION SELECT 3, 'ADA Form' UNION SELECT 4, 'IDPA Form' UNION SELECT 5, 'NYWC Form' UNION SELECT 6, 'MICR Form' UNION SELECT 7, 'NY Medicaid Form' UNION SELECT 8, 'Marked Sent Without Exporting'", TRUE, 3, "1;Claim Date;TDate;;", -1),
		ADD_REPORT(343, "Audit Trail - Inventory", -1, "", "AuditTrailQ", "OtherP", "AuditTrailInventory", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(344, "Audit Trail - Patients", -1, "", "AuditTrailQ", "OtherP", "AuditTrailPatients", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(345, "Audit Trail - Contacts", -1, "", "AuditTrailQ", "OtherP", "AuditTrailContacts", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(346, "Audit Trail - Insurance", -1, "", "AuditTrailQ", "OtherP", "AuditTrailInsurance", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(347, "Audit Trail - Palm", -1, "", "AuditTrailQ", "OtherP", "AuditTrailPalm", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(348, "Audit Trail - Miscellaneous", -1, "", "AuditTrailQ", "OtherP", "AuditTrailMisc", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(349, "Patients By Original Referral Source", -1, "", "RefPatRefSourceQ", "MarketP", "PatByOrigRefSource", TRUE, 1, 0, 0, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(350, "Patients By Original Referring Physician", -1, "", "RefPatRefPhysQ", "MarketP", "PatByOrigRefPhys", TRUE, 1, 0, 0, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referring Physician", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Last + ', ' + First + ' ' + Middle AS Name FROM ReferringPhysT INNER JOIN PersonT ON ReferringPhysT.PersonID = PersonT.ID ORDER BY Last + ', ' + First + ' ' + Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(351, "Referred Patients By Referral Source", -1, "", "RefPatRefSourceQ", "MarketP", "RefPatByRefSource", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(352, "Referred Patients By Referring Physician", -1, "", "RefPatRefPhysQ", "MarketP", "RefPatByRefPhys", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referring Physician", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Last + ', ' + First + ' ' + Middle AS Name FROM ReferringPhysT INNER JOIN PersonT ON ReferringPhysT.PersonID = PersonT.ID ORDER BY Last + ', ' + First + ' ' + Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(353, "Patient Statements 7.0", -1, "", "PatientStatementsQ", "", "Statement70", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(354, "Individual Patient Statements 7.0", -1, "", "PatientStatementMstrQ", "", "Statement70", TRUE, 1, -1, 0, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "PatTotResp", "", TRUE, 1, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(355, "Patient Statements By Location 7.0", -1, "", "PatStatementsByLocQ", "", "StatementLoc70", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 6, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(356, "Individual Patient Statements By Location 7.0", -1, "", "PatientStatementMstrQ", "", "StatementLoc70", TRUE, 1, -1, 0, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "PatTotResp", "", TRUE, 1, "", TRUE, 22, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(357, "Projected Surgery Income", -1, "", "ProjectedSurgeryIncomeQ", "MarketP", "ProjectedSurgeryIncome", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Surgery Date", TRUE, "Procedures", "ProcedureID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "ID", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 4, "1;Surgery Date;Date;;2;Surgery Input Date;ScheduledDate;;", 0),
		ADD_REPORT(358, "Actual Surgery Income", -1, "", "ActualSurgeryIncomeQ", "MarketP", "ActualSurgeryIncome", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Surgery Date", TRUE, "Procedures", "ProcedureID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "ID", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 4, "1;Surgery Date;Date;;", 0),
		ADD_REPORT(359, "Referring Patients", -1, "", "RefPatsQ", "MarketP", "ReferringPatients", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(360, "Discount Analysis", -1, "", "DiscountAnalysisQ", "FinancialP", "DiscountAnalysis", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ID|Code|Name", "0|33|-1", "12SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID ORDER BY Name", "ServiceID", FALSE, "", "", "", TRUE, 0, "", FALSE, 7, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(361, "Time Log", -1, "", "TimeLogQ", "AdminP", "TimeLog", FALSE, 1, 0, -1, 0, 1, 0, FALSE, "CheckIn Date", TRUE, "User", "PersonID|UserName", "0|-1", "12SELECT PersonID, UserName FROM UsersT WHERE UsersT.PersonID > 0 ORDER BY UserName", "UserID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;CheckIn Date;Date;;", -1),
		ADD_REPORT(362, "Payments By Credit Card", -1, "", "PaymentsByCCQ", "PaymentsP", "PaymentsByCreditCard", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Credit Card", "Name", "-1", "11SELECT CardName AS Name FROM CreditCardNamesT ORDER BY CardName", "CreditCard", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (j.jones 2016-05-06 10:35) - NX-100501 - changed the extended filter to all users
		ADD_REPORT(363, "Charges By Input Date", -1, "", "ChargesByDateQ", "ChargesP", "ChargesByInputDateR", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", TRUE, "InputName", "InputName", "", TRUE, 3, "SELECT QUOTENAME(UserName, ''''), UserName AS InputName FROM UsersT WHERE PersonID > 0 ORDER BY UserName", FALSE, 6, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(364, "Payments By Insurance By Inv Item", -1, "", "PaymentsByInsCoByInvQ", "PaymentsP", "PaymentsByInsByInvItem", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "ID|Name", "0|-1", "11SELECT ServiceT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID", "ServiceID", TRUE, "Insurance Co", "InsID", "", TRUE, 3, "SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name;", FALSE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(365, "Billing Followup (PP)", -1, "", "BillingFUQ", "", "BillingFU", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 8, "", 3),
		ADD_REPORT(366, "Payments Under Allowed Amount (By Insurance Co. Fee Schedule)", -1, "", "AllowablesQ", "PaymentsP", "Allowables", TRUE, 1, 0, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Insurance Co", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsuranceCoID", FALSE, "Insurance Co", "", "", TRUE, 0, "", FALSE, 9, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(367, "Patients with Procedures On Hold", -1, "", "PatsWithOnHoldProcsQ", "PatientP", "PatsWithOnHoldProcs", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Interest Date", TRUE, "Procedures", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 1, "", FALSE, 1, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(368, "Inventory Barcodes Avery 8167 Labels", -1, "", "BarCodesQ", "InventoryP", "InvAvery8167Labels", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID ORDER BY Name", "ProductID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", TRUE, 3, "", -1),
     	ADD_REPORT(369, "Financial Activity By Superbill ID", -1, "DailyFinancialActivity", "DailyFinancialQ", "FinancialP", "FinancialbySuperbillMain", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Date Range", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "1;Print Date;PrintDate;;2;Appointment Date;ApptDate;;", -1),
		// (j.jones 2010-02-04 15:43) - PLID 36500 - changed aliased query name to fix filtering assertions
		ADD_REPORT(370, "Scheduling Productivity By User", -1, "SchedulingProductivity", "SchedulingProductivityQ", "ScheduleP", "SchedulingProductivity", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "Consult Date", TRUE, "Login", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Appt. Date;Date;;2;Input Date;IDate;;", -1),
		ADD_REPORT(371, "Inventory Barcodes By Category", -1, "", "BarCodesQ", "InventoryP", "InvBarCodes", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM SupplierT INNER JOIN PersonT ON SupplierT.PersonID = PersonT.ID ORDER BY Company", FALSE, 3, "", -1),
		ADD_REPORT(372, "Patient To Do List By Assign To", -1, "", "ToDoPatientsQ", "PatientP", "ToDoPatientsByAssignTo", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Complete By Date", TRUE, "", "UserID|AssignTo", "0|100", "11SELECT UsersT.PersonID AS UserID, UsersT.UserName FROM ToDoList INNER JOIN TodoAssignToT ON ToDoList.TaskID = TodoAssignToT.TaskID INNER JOIN UsersT ON TodoAssignToT.AssignTo = UsersT.PersonID GROUP BY TodoAssignToT.AssignTo, UsersT.UserName, UsersT.PersonID HAVING (((TodoAssignToT.AssignTo) Is Not Null))", "AssignID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT 1 AS ID, 'Incomplete' AS Name UNION SELECT 2, 'Completed'", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
		ADD_REPORT(373, "Patients By PCP", -1, "", "PatByPCPQ", "PatientP", "PatByPCP", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ReferringPhyST.PersonID AS ID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM ReferringPhyST LEFT JOIN PersonT ON ReferringPhyST.PersonID = PersonT.ID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "PCPID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(374, "Deleted Payments", -1, "", "DeletedPaymentsQ", "PaymentsP", "DeletedPayments", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Deleted Date;TDate;;", -1),
		// (j.jones 2012-10-19 10:24) - PLID 51551 - now display 'No Contact Name' in the filter when the name is blank
		ADD_REPORT(375, "Patients By Ins Co By Ins Contact", -1, "", "PatByInsContactQ", "PatientP", "PatientsByInsContact", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", TRUE, "", "PersonID|ContactName", "0|-1", "11SELECT InsuranceContactsT.PersonID, InsuranceCoT.Name + ' - ' + CASE WHEN Coalesce(PersonT.Last, '') = '' AND Coalesce(PersonT.First, '') = '' THEN 'No Contact Name' ELSE PersonT.Last + CASE WHEN Coalesce(PersonT.Last, '') <> '' AND Coalesce(PersonT.First, '') <> '' THEN ', ' ELSE '' END + PersonT.First END AS ContactName FROM InsuranceContactsT LEFT JOIN InsuranceCoT ON InsuranceContactsT.InsuranceCoID = InsuranceCoT.PersonID LEFT JOIN PersonT ON InsuranceContactsT.PersonID = PersonT.ID", "ContactID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(376, "Payments By Patient Coordinator", -1, "", "PaysByPatientCoordinatorQ", "PaymentsP", "PaymentsByPatientCoord", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN UsersT ON PersonT.ID = UsersT.PersonID AND UsersT.PersonID > 0 WHERE PatientCoordinator = 1", "CoordID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Payment Date;TDate;Service;2;Payment Input Date;IDate;Input;3;Charge Date;ChargeDate;Service;4;Charge Input Date;ChargeInputDate;Input;5;Apply Date;ApplyDate;Service;", -1),
		ADD_REPORT(377, "Appointments By Status", -1, "", "ApptByStatusQ", "ScheduleP", "ApptsByStatus", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "ShowState", "ID|ShowState", "0|-1", "11SELECT ID, Name AS ShowState FROM AptShowStateT ORDER BY NAME ", "StateID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(378, "Referrals (Primary and Non-Primary)", -1, "", "ReferralsQ", "MarketP", "ReferralsAll", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", TRUE, "Pt. Status", "StatusID", "", TRUE, 3, "SELECT 1, 'Patient' UNION SELECT 2, 'Prospect' UNION SELECT 3, 'Patient Prospect' UNION SELECT 4, 'Inquiry'", TRUE, 2, "1;Referral Date;Date;;2;First Appt Date;FirstApptDate;;", -1),
		ADD_REPORT(379, "Products with Reserved Quantities", -1, "", "ReservedQ", "InventoryP", "ProductsReserved", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|CategoryName", "0|-1", "12SELECT ID, Name AS CategoryName FROM CategoriesT", "CategoryID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 4, "", -1),
		ADD_REPORT(380, "Daily Schedule Report (PP)", -1, "", "SchDailyApptsQ", "", "SchAppts", FALSE, 0, 0, 0, 0, -1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 17, "1;;Date;;", 1),
		ADD_REPORT(381, "No Show Patients(By Type)", -1, "", "NoShowQ", "ScheduleP", "NoShowbyType", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Appt Type", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT", "TypeID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(382, "Cnslt To Surgery(By Type)", -1, "", "NoShowQ", "ScheduleP", "ConsToSurgByType", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 4, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 1, "1;Consult Date;Date;;2;Surgery Date;SurgTime;;", -1),
		ADD_REPORT(383, "Cnslt Without Surg(By Type)", -1, "", "NoShowQ", "ScheduleP", "ConsWoSurgbyType", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(384, "Cnslt Cancelled, Not Resch(By Type)", -1, "", "NoShowQ", "ScheduleP", "ConsCancelNoReschedbyType", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(385, "Aged Receivables By Insurance Co Office", -1, "", "ARInsuranceQ", "FinancialP", "ARByInsuranceOffice", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Bill Date", TRUE, "Insurance Company", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Age", "TDate", "", TRUE, 5, "", TRUE, 9, "1;Bill Date/Payment Date;TDate;;2;Assignment Date/Payment Date;ADate;Assign;3;Assign Date/Payment Input Date;ADate;Assign;4;Input Date;IDate;;", 0),
		ADD_REPORT(386, "Printed Statements", -1, "", "PrintedStatementQ", "FinancialP", "PrintedStatements", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Sent Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Sent Date;TDate;;", -1),
		// (j.jones 2010-02-04 15:43) - PLID 36500 - changed aliased query name to fix filtering assertions
		ADD_REPORT(387, "Individual Case Histories", -1, "", "IndivCaseHistoryQ", "ASCP", "CaseHistoryIndiv", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", ""/*Due to special code in Externalform.cpp, this is unused*/, TRUE, "Completed", "CompletedVal", "", TRUE, 3, "SELECT 0 AS ID, 'Incomplete' AS Name UNION SELECT 1 AS ID, 'Complete' AS Name", TRUE, 8, "1;Surgery Date;SurgDate;;", -1),
		ADD_REPORT(388, "Aged Receivables By Patient Responsibility", -1, "", "ARPatBalQ", "FinancialP", "ARByPatResp", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Bill Date", FALSE, "", "", "", "", "", TRUE, "Age", "TDate", "", TRUE, 5, "", FALSE, 5, "1;Bill Date/Payment Date;TDate;;2;Assignment Date/Payment Date;ADate;Assign;3;Assign Date/Payment Input Date;ADate;Assign;4;Input Date;IDate;;", 0),
		ADD_REPORT(389, "Charge Totals By Diag Code", -1, "", "ChargesByDiagQ", "ChargesP", "ChargesbyDiagCode", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Diagnosis Code", "CodeNumber|CodeDesc", "25|-1", "11SELECT CodeNumber, CodeDesc FROM DiagCodes", "DiagCode", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Service Date;TDate;;", -1),
		ADD_REPORT(390, "Aged Receivables By Insurance Co By Claim Date", -1, "", "ARInsuranceQ", "FinancialP", "ARByInsuranceClaimDate", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Claim Date", TRUE, "Insurance Company", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Age", "", "", TRUE, 5, "", TRUE, 6, "1;Claim Date;ClaimDate;;", 0),
		ADD_REPORT(391, "Aged Receivables Split By Responsibility", -1, "", "ARPatBalQ", "FinancialP", "ARSplitByResp", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Bill Date", FALSE, "", "", "", "", "", TRUE, "Age", "TDate", "", TRUE, 5, "", FALSE, 8, "1;Bill Date/Payment Date;TDate;;2;Assign Date/Payment Date;ADate;Assign;3;Assign Date/Payment Input Date;ADate;Assign;4;Input Date;IDate;;", 0),
		ADD_REPORT(392, "Ladders", -1, "", "LaddersQ", "AdminP", "Ladders", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Ladder", "LadderTemplateID", "", FALSE, 3, "SELECT ID, Name FROM LadderTemplatesT", FALSE, 1, "", 0),
		ADD_REPORT(393, "Weekly Schedule (PP)", -1, "WeeklyScheduleR", "SchDailyApptsQ", "", "WeeklyScheduleR", TRUE, 0, -1, -1, -1, -1, 0, FALSE, "Appt. Date", TRUE, "", "", "", "'", "PurposeID", TRUE, "Resource", "SetID", "", TRUE, 3, "SELECT ID, Name FROM AptTypeT ORDER BY Name;", TRUE, 12, "1;Appt. Date;Date;;", 2),
		ADD_REPORT(394, "Monthly Schedule (PP)", -1, "MonthlyScheduleR", "SchDailyApptsQ", "", "MonthlyScheduleR", TRUE, 0, 0, -1, 0, -1, 0, TRUE, "Appt. Date", TRUE, "ShowState", "ShowState|StateText", "0|-1", "12SELECT ID, Name FROM AptShowStateT ORDER BY NAME", "ShowState", TRUE, "Type", "SetID", "", TRUE, 3, "SELECT ID, Name FROM AptTypeT ORDER BY Name;", TRUE, 11, "1;Appt. Date;Date;;", 2),
		ADD_REPORT(395, "Unapplied Superbill IDs", -1, "", "UnAppQ", "ScheduleP", "UnappliedSuperbills", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ResourceID|ResourceName", "0|-1", "12SELECT ID, Item FROM ResourceT", "ResourceID", TRUE, "VoidType", "VoidType", "", TRUE, 3, "SELECT 1 AS ID, 'Only Void' AS Name UNION SELECT 0, 'Only Unvoid'", FALSE, 1, "1;Appt. Date;ApptDate;;2;Printed On;PrintDate;;", 1, fboAppointment),
		ADD_REPORT(396, "PIC Report", -1, "", "PICQ", "MarketP", "PICReport", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Ladder Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcInfoID", TRUE, "LadderStatus", "LadderStatus", "", TRUE, 3, "SELECT ID, Name FROM LadderStatusT", TRUE, 4, "1;Ladder Date;LadderDate;;2;First Contact Date;FirstContactDate;;3;Bill Date;BillDate;;4;Consult Date;CnsltDate;;5;Surgery Date;SurgDate;;", 1),
		ADD_REPORT(397, "Patients By Resp Type", -1, "", "PtByRespQ", "PatientP", "PatientsByRespType", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "InsCo", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "RespTypeID", "RespTypeID", "", TRUE, 3, "SELECT ID, TypeName FROM RespTypeT", TRUE, 2, "1;First Contact Date;FCDate;;", 1),
		ADD_REPORT(398, "Surgery List", -1, "SurgListR", "SurgeryListQ", "AdminP", "SurgListR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Is A Package", "IsAPackage", "", FALSE, 3, "SELECT 0 AS ID, 'Surgeries' AS Name UNION SELECT 1 AS ID, 'Packages' AS Name", TRUE, 2, "", -1, -1, FALSE),
		// (c.haag 2007-02-12 16:59) - PLID 24561 - We now store medication names in EmrDataT.Data rather than DrugList.Name 
		ADD_REPORT(399, "Medication List", -1, "MedicationListR", "MedicationListQ", "AdminP", "MedicationListR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "", -1),
		ADD_REPORT(400, "Inactive Inventory Items", -1, "", "InactiveItemsQ", "InventoryP", "InactiveInvItems", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "Category", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY NAME", "CatID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company",FALSE, 2, "", -1),
		ADD_REPORT(401, "Patient Warnings", -1, "", "WarningsQ", "PatientP", "PatientWarnings", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(402, "Marketing Costs", -1, "", "CostsQ", "MarketP", "MarketingCosts", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date Paid", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "RefSrcID", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;DatePaid;DatePaid;;", -1),
		// (j.jones 2016-05-06 10:35) - NX-100501 - changed the external filter to all users, extended filter to a fixed list
		ADD_REPORT(403, "Pays/Refs/Adjs By Input Name", -1, "", "PRAByUserQ", "PaymentsP", "PRAByInputName", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Input Name", "Name", "-1", "12SELECT UserName AS InputName FROM UsersT WHERE PersonID > 0 ORDER BY UserName", "IName", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(TRUE,TRUE,FALSE), FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (j.jones 2016-05-06 10:35) - NX-100501 - changed the external filter to all users
		ADD_REPORT(404, "Charges By Input Name", -1, "", "ChargesByUserQ", "ChargesP", "ChargesByInputName", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", TRUE, "IName", "IName", "", TRUE, 3, "SELECT QUOTENAME(UserName, ''''), UserName AS InputName FROM UsersT WHERE PersonID > 0 ORDER BY UserName", FALSE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(405, "Deleted Adjustments", -1, "", "DeletedPaymentsQ", "PaymentsP", "DeletedAdjustments", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Deleted Date;TDate;;", -1),
		ADD_REPORT(406, "Deleted Refunds", -1, "", "DeletedPaymentsQ", "PaymentsP", "DeletedRefunds", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Deleted Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Deleted Date;TDate;;", -1),
		// (j.jones 2010-04-28 12:09) - PLID 35591 - moved from being a preview-only report to being in the patients tab
     	ADD_REPORT(407, "Patient History", -1, "", "HistoryTabQ", "PatientP", "HistoryTab", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 3, "1;Service Date;TDate;;2;Attach Date;IDate;;", 1),
		ADD_REPORT(408, "Patient To Do List By Entered By", -1, "", "ToDoPatientsQ", "PatientP", "ToDoPatientsByEnteredBy", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Completed By Date", TRUE, "", "UserID|EnteredBy", "0|-1", "11SELECT UsersT.PersonID AS UserID, UsersT.UserName FROM UsersT INNER JOIN PersonT ON UsersT.PersonID = PersonT.ID AND UsersT.PersonID > 0 WHERE Archived = 0", "EnteredByID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT 1 AS ID, 'Incomplete' AS Name UNION SELECT 2, 'Completed'", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
		ADD_REPORT(409, "Charges By Referring Physician", -1, "", "ChargesByDateQ", "ChargesP", "ChargesByRefPhys", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Ref Phys", "ID|Name", "0|-1", "12SELECT ID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY Last, First, Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(410, "Charges By Referral Source", -1, "", "ChargesByDateQ", "ChargesP", "ChargesByRefSrc", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Ref Source", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "RefSrcID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(411, "Charges By Referring Patient", -1, "", "ChargesByRefPatQ", "ChargesP", "ChargesByRefPat", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Ref Pat", "ID|Name", "0|-1", "12SELECT ID, PersonT.Last + ', ' + PersonT.First + ' ' + Persont.Middle AS Name FROM PersonT WHERE ID IN (SELECT ReferringPatientID FROM PatientsT) ORDER BY Last, First, Middle", "RefPatID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(412, "Payments By Referring Patient", -1, "", "PaymentsByDateQ", "PaymentsP", "PaymentsByRefPat", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Ref Pat", "ID|Name", "0|-1", "12SELECT ID, PersonT.Last + ', ' + PersonT.First + ' ' + Persont.Middle AS Name FROM PersonT WHERE ID IN (SELECT ReferringPatientID FROM PatientsT) ORDER BY Last, First, Middle", "RefPatID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1),
		// (c.haag 2007-02-02 17:13) - PLID 24561 - We now store medication names in EmrDataT.Data rather than DrugList.Name
		ADD_REPORT(413, "Patient Medications", -1, "", "MedsQ", "PatientP", "PatientMeds", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Medication", "ID|Name", "0|-1", "12SELECT DrugList.ID, EMRDataT.Data AS Name FROM DrugList LEFT JOIN EMRDataT ON DrugList.EMRDataID = EMRDataT.ID ORDER BY Data", "MedID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;First Contact Date;Date;;", -1),
		// (c.haag 2007-02-02 17:13) - PLID 24561 - We now store medication names in EmrDataT.Data rather than DrugList.Name
		ADD_REPORT(414, "Patient Prescriptions", -1, "", "PrescriptionsQ", "PatientP", "PatientPrescriptions", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Medication", "ID|Name", "0|-1", "12SELECT DrugList.ID, EMRDataT.Data AS Name FROM DrugList LEFT JOIN EMRDataT ON DrugList.EMRDataID = EMRDataT.ID ORDER BY Data", "MedID", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;First Contact Date;Date;;3;Prescription Date;PDate;;", -1),
		ADD_REPORT(415, "Referral Source List", -1, "ReferralListR", "ReferralListQ", "AdminP", "ReferralListR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(416, "Resource Schedule Report (PP)", -1, "", "SchDailyApptsQ", "", "ResourceScheduleR", FALSE, 0, 0, 0, 0, -1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 7, "1;;Date;;", 1),
		ADD_REPORT(417, "Payments By Description", -1, "", "PaymentsByDescriptionQ", "PaymentsP", "PaymentsByDescription", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(418, "Appointments By Place of Service", -1, "ApptsByPOS", "ApptsByPOSQ", "ScheduleP", "ApptsByPOS", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "ID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(419, "Patient To Do List By Category", -1, "ToDoPatientsByCatR", "ToDoPatientsByCatQ", "PatientP", "ToDoPatientsByCatR", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Complete By Date", TRUE, "", "UserID|AssignTo", "0|100", "11SELECT UsersT.PersonID AS UserID, UsersT.UserName FROM ToDoList INNER JOIN TodoAssignToT ON ToDoList.TaskID = TodoAssignToT.TaskID INNER JOIN UsersT ON TodoAssignToT.AssignTo = UsersT.PersonID GROUP BY TodoAssignToT.AssignTo, UsersT.UserName, UsersT.PersonID HAVING (((TodoAssignToT.AssignTo) Is Not Null))", "TaskID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT 1 AS ID, 'Incomplete' AS Name UNION SELECT 2, 'Completed'", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
		ADD_REPORT(420, "Referred Patients", -1, "", "RefPatQ", "MarketP", "RefPats", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(421, "Charges By Category By Patient Coordinator", -1, "ChargesByCategoryByPatCoord", "ChargesByCategoryByPatCoordQ", "ChargesP", "ChargesByCategoryByPatCoord", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", FALSE, 4, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(422, "Service Code Barcodes", -1, "", "CPTBarCodesQ", "AdminP", "CPTBarCodes", FALSE, 0, 0, 0,  0, 0, 0, FALSE, "", TRUE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(423, "Service Code Barcodes Avery 8167 Labels", -1, "", "CPTBarCodesQ", "AdminP", "CPTAvery8167Labels", FALSE, 0, 0, 0,  0, 0, 0, FALSE, "", TRUE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(424, "Service Code Barcodes By Category", -1, "", "CPTBarCodesQ", "AdminP", "CPTBarCodes", FALSE, 0, 0, 0,  0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatID", FALSE, "", "", "", FALSE, 1, "", FALSE, 1, "", -1),		
		ADD_REPORT(425, "Patient Payments", -1, "", "PatientPaymentsQ", "PaymentsP", "PatientPayments", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(426, "Inventory Sales Profit", -1, "", "InvProfitQ", "FinancialP", "InvSalesProfit", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ServiceID", TRUE, "Coordinator", "CoordID", "", TRUE, 3, "SELECT PersonID, UserName FROM UsersT WHERE PatientCoordinator = 1 AND UsersT.PersonID > 0 ORDER BY UserName", TRUE, 4, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(427, "Appointments By Template", -1, "ApptsByTemplate", "ApptsByTemplate", "ScheduleP", "ApptsByTemplate", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Resource", "ID|Name", "0|-1", "12SELECT ID, Name FROM TemplateT ORDER BY TemplateT.Priority DESC", "TemplateID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(428, "Past Deposit Slips", -1, "", "DepositSlipQ", "PaymentsP", "DepositSlipBatch", FALSE, 0, 0, 0, -1, 1, 0, FALSE, "Deposit Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Deposit Date;TDate;;", -1),
     	ADD_REPORT(429, "Template Listing", -1, "", "TemplateListQ", "AdminP", "TemplateListing", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "", TRUE, "Template Name", "ID|Name", "0|-1", "12SELECT ID, Name FROM TemplateT ORDER BY Name", "TemplateID", TRUE, "Resource", "ResourceID", "", FALSE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 4, "1;Start Date;StartDate;;", -1),																																																										
		// (c.haag 2007-02-02 17:13) - PLID 24561 - We now store medication names in EmrDataT.Data rather than DrugList.Name
		ADD_REPORT(430, "Deleted Prescriptions", -1, "", "PrescriptionsQ", "AdminP", "PatientPrescriptionsDeleted", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Medication", "ID|Name", "0|-1", "12SELECT DrugList.ID, EMRDataT.Data AS Name FROM DrugList LEFT JOIN EMRDataT ON DrugList.EMRDataID = EMRDataT.ID ORDER BY Data", "MedID", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "2;Prescription Date;PDate;;", -1),
		ADD_REPORT(431, "Charges By Bill Date", -1, "", "ChargesByDateQ", "ChargesP", "ChargesByBillDate", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 7, "1;Bill Date;BDate;;2;Service Date;TDate;;3;Input Date;IDate;;", -1),
		ADD_REPORT(432, "Appts Cancelled, Not Resch", -1, "", "NoShowQ", "ScheduleP", "ApptCancelNoResched", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Appointment Types", "ID|Name", "0|-1", "12SELECT ID,Name FROM AptTypeT ", "AptTypeID", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(433, "Payments By Pay Category", -1, "", "PaymentsByCatQ", "PaymentsP", "PaymentsByPayCat", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Category", "ID|Name", "0|-1", "12SELECT ID, GroupName AS Name FROM PaymentGroupsT ORDER BY GroupName", "PayCatID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(434, "Patient Statements By Last Sent", -1, "", "PatientStatementsQ", "FinancialP", "Statement", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Not Sent Since", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 22, "1;Not Sent Since;LastSentDate;;", -1),
		ADD_REPORT(435, "Patient Statements By Location By Last Sent", -1, "", "PatStatementsByLocQ", "FinancialP", "StatementLoc", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Not Sent Since", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 6, "", TRUE, 22, "1;Not Sent Since;LastSentDate;;", -1),
		ADD_REPORT(436, "Patient Statements By Last Sent 7.0", -1, "", "PatientStatementsQ", "", "Statement70", TRUE, 1, -1, -1, -1, -1, 1, TRUE, "Not Sent Since", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 22, "1;Not Sent Since;LastSentDate;;", -1),
		ADD_REPORT(437, "Patient Statements By Location By Last Sent 7.0", -1, "", "PatStatementsByLocQ", "", "StatementLoc70", TRUE, 1, -1, -1, -1, -1, 1, TRUE, "Not Sent Since", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 6, "", TRUE, 22, "1;Not Sent Since;LastSentDate;;", -1),
		ADD_REPORT(438, "Outside Fees Quoted By Charge Code", -1, "", "QuotesByPatientCoordinatorQ", "ChargesP", "OutsideFeesByCode", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Bill Date", TRUE, "Charge Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID UNION SELECT ServiceT.ID, cast(ServiceT.ID as nvarchar(255)), ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID", "CPTID", TRUE, "Converted", "Converted", "", TRUE, 3, "SELECT 0 AS ID, 'Unconverted' AS Name UNION SELECT 1, 'Converted'", FALSE, 1, "1;Quote Date;TDate;Service;2;Input Date;IDate;Input;", -1),	
		ADD_REPORT(439, "Inventory Sales By Supplier", -1, "", "InvSalesQ", "FinancialP", "InvSalesBySupplier", TRUE, 0, 0, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Supplier", "ID|Company", "0|-1", "12SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY PersonT.Company", "SupplierID", TRUE, "Coordinator", "CoordID", "", TRUE, 3, "SELECT PersonID, UserName FROM UsersT WHERE PatientCoordinator = 1 AND UsersT.PersonID > 0 ORDER BY UserName", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		// (z.manning, 02/22/2007) - PLID 23201 - Added a use extended filter for resources.
		// (j.jones 2010-02-04 15:43) - PLID 36500 - changed aliased query name to fix filtering assertions
		ADD_REPORT(440, "Appointments By Patient", -1, "", "ApptsByPatQ", "ScheduleP", "ApptsByPat", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Appointment Date", FALSE, "", "", "", "", "", TRUE, "", "", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Appointment Date;Date;;", -1, fboAppointment),
		ADD_REPORT(441, "Discounted Bills", -1, "", "DiscountedBillsQ", "ChargesP", "DiscountedBills", TRUE, 0, 0, -1, -1, 1, 1, FALSE, "Bill Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Bill Date;BDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(442, "Appointments By Referring Physician", -1, "", "ApptsByPhysQ", "ScheduleP", "ApptsByRefPhys", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Physician", "ID|Name", "0|-1", "12SELECT ID, Last + ', ' + First + ' ' + Middle AS Name FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY Last + ', ' + First + ' ' + Middle", "RefPhysID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 4, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(443, "Billing Followup List (PP)", -1, "", "BillingFUListQ", "", "BillingFUList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "", -1),
		// (c.haag 2007-02-12 16:59) - PLID 24561 - We now store medication names in EmrDataT.Data rather than DrugList.Name 
		ADD_REPORT(444, "Medications Tab (PP)", -1, "", "MedicationsTabQ", "", "MedicationsTab", FALSE, 0, 0, 0, 1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "", -1),
		ADD_REPORT(445, "PracYakker Messages By Sender", -1, "", "PracYaksBySenderQ", "AdminP", "PracYaksBySender", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Sent On", TRUE, "UserNames", "PersonID|UserName", "0|-1", "12SELECT PersonID, UserName FROM UsersT WHERE UsersT.PersonID > 0 ORDER BY UserName", "UserID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;Sent On;Date;;", 1),
		ADD_REPORT(446, "Patient Financial History", -1, "", "PtFinHistoryQ", "FinancialP", "PatientFinHistory", FALSE, 0, 0, 0, -1, 1, 0, FALSE, "Bill/Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Bill/Pay Date;TopDate;;", -1),
		ADD_REPORT(447, "Historical Deposit Slip", -1, "", "HistoricalDepositSlipQ", "FinancialP", "HistoricalDepositSlip", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 6, "1;Deposit Date;TDate;;", -1),
		ADD_REPORT(448, "Contacts General - Providers (PP)", -1, "", "ContactsGeneralQ", "", "ContactsPreviewProvider", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 3, "", 1),
		ADD_REPORT(449, "Contacts General - Users (PP)", -1, "", "ContactsGeneralQ", "", "ContactsPreviewUser", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 3, "", 1),
		ADD_REPORT(450, "Contacts General - Suppliers (PP)", -1, "", "ContactsGeneralQ", "", "ContactsPreviewSupplier", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 3, "", 1),
		ADD_REPORT(451, "Contacts General - Other Contacts (PP)", -1, "", "ContactsGeneralQ", "", "ContactsPreviewOther", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 3, "", 1),
		ADD_REPORT(452, "Contacts General - Ref Phys (PP)", -1, "", "ContactsGeneralQ", "", "ContactsPreviewRefPhys", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", 1),
		ADD_REPORT(453, "To-Do Alarm Preview (PP)", -1, "", "ToDoPreviewQ", "", "ToDoPreview", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Completed By Date", TRUE, "", "UserID|EnteredBy", "0|-1", "11SELECT UsersT.PersonID AS UserID, UsersT.UserName FROM UsersT INNER JOIN PersonT ON UsersT.PersonID = PersonT.ID AND UsersT.PersonID > 0 WHERE Archived = 0", "EnteredByID", TRUE, "State", "StateID", "", TRUE, 3, "SELECT 1 AS ID, 'Incomplete' AS Name UNION SELECT 2, 'Completed'", FALSE, 3, "1;Deadline Date;Date;;2;Start Reminding Date;RemindDate;;3;Completed Date;Done;;", -1),
		ADD_REPORT(454, "Payer Mix By Charges", -1, "", "PayerMixChargeQ", "FinancialP", "PayerMixByCharges", FALSE, 0, -1, -1, 0, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;3;Bill Date;BillDate;;", 1),
		ADD_REPORT(455, "Payer Mix By Payments", -1, "", "PayerMixPaysQ", "FinancialP", "PayerMixByPayments", FALSE, 0, -1, -1, 0, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;Payment Date;TDate;;2;Input Date;IDate;;", 1),
		ADD_REPORT(456, "Payer Mix By Patient", -1, "", "PayerMixPatQ", "FinancialP", "PayerMixByPatient", FALSE, 0, -1, -1, 0, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;First Contact Date;FCDate;;", 1),
		ADD_REPORT(457, "TOPS Summary", -1, "", "TOPSQ", "AdminP", "TOPSSummary", TRUE, 0, -1, -1, -1, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Appt Date;ApptDate;;2;Appt Input Date;ApptInputDate;;3;Bill Date;BillDate;;4;Bill Input Date;BillInputDate;;", -1),
		ADD_REPORT(458, "Account Balances By Provider (w/PrePays)", -1, "", "PatBalQ", "FinancialP", "AcctBalByProvPrePay", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(459, "Account Balances By Patient Type (w/PrePays)", -1, "", "PatBalbyTypeQ", "FinancialP", "AcctBalbyTypePrePay", TRUE, 0, 0, -1, -1, 0, 0, FALSE, "", TRUE, "Print Balances", "TypeIndex|GroupName", "0|-1", "12SELECT TypeIndex, GroupName FROM GroupTypes ORDER BY GroupName", "TypeIndex", TRUE, "Print Balances", "AccountBal", "", TRUE, 1, "", FALSE, 1, "", -1),
		ADD_REPORT(460, "Payments Refunded/Adjusted Off", -1, "", "PaysRefundedAdjustedQ", "FinancialP", "PaysRefundedAdjusted", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Payment Date;Date;;2;Input Date;IDate;;", -1),
		ADD_REPORT(461, "Inventory Adjustments", -1, "", "InvAdjQ", "InventoryP", "InvAdjustments", FALSE, 0, 0, -1, 0, 1, 0, FALSE, "Date", TRUE, "", "ID|CategoryName", "0|-1", "12SELECT ID, Name AS CategoryName FROM CategoriesT", "CategoryID", TRUE, "Adjustment Category", "AdjCategoryID", "", FALSE, 3, "SELECT ID, Name FROM ProductAdjustmentCategoriesT UNION SELECT -1, '<Manually Entered>' ", TRUE, 3, "1;Adjustment Date;Date;;", 0),
		ADD_REPORT(462, "Collection Rate By Service Category", -1, "CollectByCat", "CollectbyCat", "FinancialP", "CollectRateByCat", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CategoryID", FALSE, "Categories", "", "", FALSE, 0, "", FALSE, 3, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(463, "Collection Rate By Service Code", -1, "CollectByCat", "CollectByCat", "FinancialP", "CollectRateByCPT", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "CPTID", FALSE, "Service Code", "", "", FALSE, 0, "", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(464, "Collection Rate By Insurance Company", -1, "CollectByIns", "CollectByIns", "FinancialP", "CollectRateByInsCo", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Service Date", TRUE, "Insurance Companies", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", FALSE, "", "", "", FALSE, 1, "", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(465, "Payments By Resp YTD", -1, "PaymentsByRespYTD", "PaymentsByRespYTD", "PaymentsP", "PaymentsByRespYTD", FALSE, 0, -1, -1, 0, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(466, "Payments By Service Code YTD", -1, "PaymentsByCPTYTD", "PaymentsByCPTYTD", "PaymentsP", "PaymentsByCPTYTD", FALSE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "CPTID", TRUE, "Payment Method", "PayMethod", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,TRUE,TRUE), TRUE, 3, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(467, "Payments By Service Category YTD", -1, "PaymentsByCPTCategoryYTD", "PaymentsByCPTCategoryYTD", "PaymentsP", "PaymentsByCPTCategoryYTD", FALSE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", FALSE, 0, "", FALSE, 3, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(468, "Financial Activity - Daily (By Ins Co)", -1, "", "DailyFinancialInsCoQ", "FinancialP", "DailyFinancialInsCo", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "Insurance Company", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", FALSE, 6, "1;Bill Date/Payment Date;BDate;;2;Input Date;IDate;;", -1, -1, FALSE),
		ADD_REPORT(469, "Payment Categories", -1, "PayCatsR", "PatCats", "AdminP", "PayCats", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "Active", "", FALSE, 3, " ", FALSE, 1, "", -1),
		ADD_REPORT(470, "Charges By Service Modifier", -1, "ChargesByCPTMods", "ChargesByCPTQ", "ChargesP", "ChargesByCPTMods", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Modifier", "Modifier|Name", "33|-1", "11SELECT NUmber as Modifier, Note AS Name  FROM CPTModifierT ", "ModID", FALSE, "Modifier", "", "", TRUE, 0, "", TRUE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(471, "Payments By Payment Location", -1, "", "PaymentsByPayLocationQ", "PaymentsP", "PaymentsByPayLocation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(472, "Patients By Responsible Party", -1, "", "PatByRespPartyQ", "PatientP", "PatByRespPartyR", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "", "RespPartyID|RespPartyName", "0|-1", "11SELECT PersonID, Last + ', ' + First + ' ' + Middle FROM ResponsiblePartyT INNER JOIN PersonT ON ResponsiblePartyT.PersonID = PersonT.ID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "RespPartyID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(473, "Service Codes by Billed Amount", -1, "CptCodesByAmount", "CptCodesByAmountQ", "FinancialP", "CptCodesByAmount", FALSE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", FALSE, 0, "", FALSE, 1, "1;Bill Date;BillsT.Date;;2;Service Date;LineItemT.Date;;3;Input Date;LineItemT.InputDate;;", -1),
		ADD_REPORT(474, "Billing Notes", -1, "BillingNotes", "BillingNotesQ", "FinancialP", "BillingNotes", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Note Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Description FROM NoteCatsF", "NoteCatID", TRUE, "Type of Item", "TypeID", "", TRUE, 3, "SELECT 0, 'Bill' UNION SELECT 10, 'Charge' UNION SELECT 1, 'Payment' UNION SELECT 2, 'Adjustment' UNION SELECT 3, 'Refund'", TRUE, 1, "1;Note Date;Date;;2;Date of Financial Item;TDate;;",-1),
		ADD_REPORT(475, "Mismatched Apply Locations", -1, "", "MismatchQ", "FinancialP", "MismatchedApplyLocs", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Applied Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", TRUE, 1, "1;Applied From Date;AppliedDate;;2;Applied To Date;ApplyToDate;;3;Applied From Input Date;AppliedIDate;;4;Applied To Input Date;ApplyToIDate;;5;Date of Apply;DateOfApply;;",-1),
		// (d.lange 2011-01-14 10:04) - PLID 40557 - Incremented the version because the CCAuthNo size was increased
		ADD_REPORT(476, "Payments/Refunds with Check and Credit Card Numbers", -1, "", "PaymentsQ", "PaymentsP", "PaymentsWithCheckNums", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1), 
		ADD_REPORT(477, "Completed Steps By Age", -1, "", "CompletedStepsAgeQ", "MarketP", "CompletedStepsAged", TRUE, 1, -1, -1, -1, 0, 0, FALSE, "", TRUE, "Procedures", "Name|Type", "0|67|33", "12SELECT ID, Name, 'Procedure' FROM ProcedureT WHERE MasterProcedureID Is Null AND ID IN (SELECT ProcedureID FROM ProcInfoDetailsT) UNION ALL SELECT ID, Name, 'Group' FROM ProcedureGroupsT GROUP BY ID, Name ORDER BY Name", "ProcID", FALSE, "", "", "", TRUE, 1, "", FALSE, 1, "", 0),
		// (j.jones 2010-04-28 08:46) - PLID 36860 - moved the POS filter to the extended filter, not external
		ADD_REPORT(478, "Payments By Place of Service", -1, "", "PaymentsByPOSQ", "PaymentsP", "PaymentsByPOS", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", TRUE, "Place Of Service", "POSCode", "", TRUE, 3, "SELECT ID, Name FROM LocationsT WHERE TypeID = 1 ORDER BY Name", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(479, "Charges By Insurance By Service Code/Inventory Item", -1, "ChargesByInsCoByCPT", "ChargesByInsCoByCPTCodeQ", "ChargesP", "ChargesByInsByCPT", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "Insurance Co", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code + ' ' + CPTCodeT.SubCode END AS Code, ServiceT.Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID WHERE CPTCodeT.ID IS NOT NULL OR ProductT.ID IS NOT NULL ", "CPTID", TRUE, "Insurance Co", "InsID", "", TRUE, 3, "SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name;", TRUE, 6, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(480, "Conversion Rate By Referral Source", -1, "", "ConvRateByRefQ", "MarketP", "ConvRateByRefSour", FALSE, 0, 0, 0, 0, 1, 1, FALSE, "First Contact Date", TRUE, "", "PersonID|Name", "0|-1", "12SELECT ReferralSourceT.PersonID, ReferralSourceT.Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Contact Date;FirstContactDate;;", -1),
		// (d.lange 2015-10-14 11:02) - PLID 67117 - Changed from Multi Fee Preview to New Fee Preview
		ADD_REPORT(481, "New Fee Preview (PP)", -1, "", "MultiFeePreviewQ", "", "MultiFeePreview", FALSE, 0, 0, 0, 0, -1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "", "PersonID", "", FALSE, 0, "", FALSE, 3, "1;;Date;;", -1),
		ADD_REPORT(482, "Mismatched Apply Providers", -1, "", "MismatchQ", "FinancialP", "MismatchedApplyProvs", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Applied Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", TRUE, 1, "1;Applied From Date;AppliedDate;;2;Applied To Date;ApplyToDate;;3;Applied From Input Date;AppliedIDate;;4;Applied To Input Date;ApplyToIDate;;5;Date of Apply;DateOfApply;;",-1),
		ADD_REPORT(483, "Patient Statements By Provider", -1, "", "PatStatementsByProvQ", "FinancialP", "StatementProv", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 16, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(484, "Individual Patient Statements By Provider", -1, "", "PatStatementsByProvQ", "", "StatementProv", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 15, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(485, "Patient Statements 7.0 By Provider", -1, "", "PatStatements70ByProvQ", "", "StatementProv70", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 16, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		ADD_REPORT(486, "Individual Patient Statements 7.0 By Provider", -1, "", "PatStatements70ByProvQ", "", "StatementProv70", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "Bill Date", FALSE, "Print Balances", "", "", "", "", TRUE, "Print Balances", "{", "", TRUE, 4, "", TRUE, 15, "1;Service Date;TDate;;2;Bill Date/Payment Date;BillDate;;", -1),
		// (a.walling 2008-08-07 18:01) - PLID 30996 - This was broken due to the option number being removed. Added the 2 back in and we are good.
		ADD_REPORT(487, "Discounted Quotes", -1, "", "DiscountedQuotesQ", "ChargesP", "DiscountedQuotes", TRUE, 0, 0, -1, -1, 1, 1, FALSE, "Quote Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 4, "1;Quote Date;QuoteDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(488, "Applies Across Date", -1, "", "AppliesAcrossDateQ", "FinancialP", "AppliesAcrossDate", TRUE, 0, 0, 0, -1, 1, 1, TRUE, "Service Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", TRUE, 1, "1;Service Date;Date;;2;Input Date;InputDate;;",-1),
		ADD_REPORT(489, "Payment Tips by Provider", -1, "", "PaymentTipsQ", "PaymentsP", "PaymentTipsByProvider", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment / Refund Date", FALSE, "", "", "", "", "", TRUE, "Payment Method", "PayMethodID", "", TRUE, 3, GetPaymentsExtendedSqlString(FALSE,FALSE,TRUE), TRUE, 2, "1;Payment / Refund Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(490, "PracYakker Message (PP)", -1, "", "YakMessageQ", "", "YakMessageIndiv", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(491, "Provider Commissions (Payments)", -1, "", "CommissionQ", "FinancialP", "ProviderCommissionsPayments", TRUE, 2, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 9, "1;Apply Date;ApplyDate;;2;Payment Date;PayDate;;3;Payment Input Date;PayInputDate;;4;Charge Date;ChargeDate;;5;Charge Input Date;ChargeInputDate;;", -1),
		ADD_REPORT(492, "Patient Flow", -1, "", "PatientFlowQ", "ASCP", "PatientFlow", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Surgery Date", FALSE, "", "", "", "", "", TRUE, "Completed", "Completed", "", TRUE, 3, "SELECT 0, 'Incomplete' UNION SELECT 1, 'Completed'", TRUE, 1, "1;Surgery Date;TDate;;", -1),
		ADD_REPORT(493, "Surgeries Scheduled Without A Case History", -1, "", "SurgeryNoCaseQ", "ASCP", "SurgeryNoCase", TRUE, 0, 0, -1, -1, 1, 1, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Appt. Date;TDate;;", -1),
		ADD_REPORT(494, "Service Codes Credentialed By Provider", -1, "", "CredentialedCPTQ", "ASCP", "CredentialedCPTCodes", FALSE, 0, -1, 0, 0, 1, 1, FALSE, "Charge Date", TRUE, "", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM (CPTCodeT INNER JOIN ServiceT ON CPTCodeT.ID = ServiceT.ID)", "CPTID", TRUE, "Credentialed", "Credentialed", "", FALSE, 3, "SELECT 0, 'Not Credentialed' UNION SELECT 1, 'Credentialed'", TRUE, 1, "1;Charge Date;TDate;;", -1),
		ADD_REPORT(495, "Supplies Below Minimum By Case History", -1, "", "LowSuppliesCaseQ", "ASCP", "SuppliesBelowMinByCase", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Surgery Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ServiceT.ID, ServiceT.Name FROM (ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID)", "ProductID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;Surgery Date;TDate;;", -1),
		ADD_REPORT(496, "Supplies Below Minimum By Product", -1, "", "LowSuppliesProductQ", "ASCP", "SuppliesBelowMinByProduct", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Surgery Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ServiceT.ID, ServiceT.Name FROM (ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID)", "ProductID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;Surgery Date;TDate;;", -1),
		ADD_REPORT(497, "Gift Certificate (PP)", -1, "", "GiftQ", "", "GiftCertificate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 2, "", -1),
//DRT 4/15/2004 - I made this for Kevin to show to a prospect, but he's not doing it right now , and this report isn't right for anything else.  Commented out till fixed.
//		ADD_REPORT(498, "Bill Totals", "", "TotalsQ", "ChargesP", "BillTotals", FALSE, 0, -1, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(499, "Outstanding Gift Certificate Balances", -1, "", "GiftQ", "FinancialP", "OutstandingGiftCertificates", TRUE, 0, 0, -1, -1, 1, -1, FALSE, "", TRUE, "", "ID|Name", "0|-1", "11SELECT ServiceID, Name FROM GCTypesT INNER JOIN ServiceT ON ServiceID = ServiceT.ID ORDER BY Name", "ServiceID", TRUE, "", "", "", TRUE, 3, "SELECT 1, 'Include expired certificates'", TRUE, 3, "1;Purchased Date;PurchDate;;2;Expiration Date;ExpDate;;", -1, -1, FALSE),
		ADD_REPORT(500, "Scheduling Productivity By Resource", -1, "SchedulingProductivityResource", "SchedProdQ", "ScheduleP", "SchedulingProductivityResource", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "Consult Date", FALSE, "Resource", "ID|Name", "0|-1", "11SELECT ResourceT.ID, ResourceT.Name FROM ResourceT", "ResourceID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Appointment Date;Date;;2;Input Date;IDate;;", -1),
		ADD_REPORT(501, "Closed Cash Drawers", -1, "", "DrawerQ", "FinancialP", "ClosedCashDrawers", TRUE, 1, -1, -1, -1, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Closed Date;DateClosed;;2;Open Date;DateOpen;;", -1),
		ADD_REPORT(502, "Revenue By Referral Source (PP)", -1, "", "RevByRefSourQ", "", "RevByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(503, "Open Cash Drawers", -1, "", "DrawerQ", "FinancialP", "OpenCashDrawers", TRUE, 1, -1, -1, -1, 1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 5, "1;Open Date;DateOpen;;", -1),
		//(e.lally 2009-09-24) PLID 35053 - Depreciated and recreated as 680
		//ADD_REPORT(504, "Conversion Rate By Referral Source (PP)", -1, "", "ConvRateByRefSourQ", "", "ConvByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(505, "Patients By Referral Source (PP)", -1, "", "PatsByRefSourQ", "", "PatsByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "", -1),
		ADD_REPORT(506, "Cancellations and No Shows By Referral Source (PP)", -1, "", "NoShowCancelByRefSourQ", "", "NoShowCancelByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(507, "Inquiries To Consults By Referral Source (PP)", -1, "", "InqToConsByRefSourQ", "", "InqToConsByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(508, "Prospects To Consults By Referral Source (PP)", -1, "", "ProsToConsByRefSourQ", "", "ProsToConsByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(509, "Procedures Closed Vs. Performed By Referral Source (PP)", -1, "", "CloseVPerfByRefSourQ", "", "CloseVPerfByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(510, "Revenue By Procedure (PP)", -1, "", "RevByProcQ", "", "RevByProc", FALSE, 0, 0, 0, 0, 0, 0,FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		//(e.lally 2009-08-27) PLID 35330 - Depreciated and recreated as 673
		//ADD_REPORT(511, "Conversion Rate By Procedure (PP)", -1, "", "ConvRateByProcQ", "", "ConvByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(512, "Patients By Procedure (PP)", -1, "", "PatsByProcQ", "", "PatsByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(513, "Cancellations and No Shows Procedure (PP)", -1, "", "NoShowCancelByProcQ", "", "NoShowCancelByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(514, "Inquiries To Consults By Procedure (PP)", -1, "", "InqToConsByProcQ", "", "InqToConsByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(515, "Prospects To Consults By Procedure (PP)", -1, "", "ProsToConsByProcQ", "", "ProsToConsByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(516, "Procedures Closed Vs. Performed By Procedure (PP)", -1, "", "CloseVPerfByProcQ", "", "CloseVPerfByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(517, "Revenue By Category (PP)", -1, "", "RevByCategoryQ", "", "RevByCategory", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(518, "Revenue By Patient Coordinator (PP)", -1, "", "RevByPatCoordQ", "", "RevByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		//(e.lally 2009-08-28) PLID 35331 - Depreciated and recreated as 676
		//ADD_REPORT(519, "Conversion Rate By Patient Coordinator (PP)", -1, "", "ConvRateByPatCoordQ", "", "ConvByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(520, "Patients By Patient Coordinator (PP)", -1, "", "PatsByPatCoordQ", "", "PatsByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(521, "Cancellations and No Shows By Patient Coordinator (PP)", -1, "", "NoShowCancelByPatCoordQ", "", "NoShowCancelByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(522, "Inquiries To Consults By Staff (PP)", -1, "", "InqToConsByStaffQ", "", "InqToConsByStaff", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(523, "Prospects To Consults By Patient Coordinator (PP)", -1, "", "ProsToConsByPatCoordQ", "", "ProsToConsByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(524, "Procedures Closed Vs. Performed By Patient Coordinator (PP)", -1, "", "CloseVPerfByPatCoordQ", "", "CloseVPerfByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(525, "Revenue By Date (PP)", -1, "", "RevByDateQ", "", "RevByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		//(e.lally 2009-09-08) PLID 35332 - Depreciated and recreated as 677
		//ADD_REPORT(526, "Conversion Rate By Date (PP)", -1, "", "ConvRateByDateQ", "", "ConvByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "", -1),
		ADD_REPORT(527, "Patients By Date (PP)", -1, "", "PatsByDateQ", "", "PatsByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(528, "Cancellations and No Shows By Date (PP)", -1, "", "NoShowCancelByDateQ", "", "NoShowCancelByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(529, "Inquiries To Consults By Date (PP)", -1, "", "InqToConsByDateQ", "", "InqToConsByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(530, "Prospects To Consults By Date (PP)", -1, "", "ProsToConsByDateQ", "", "ProsToConsByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(531, "Procedures Closed Vs. Performed By Date (PP)", -1, "", "CloseVPerfByDateQ", "", "CloseVPerfByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(532, "Cancellations By Reason (PP)", -1, "", "CancelByReasonQ", "", "CancelByReason", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(533, "No Shows By Reason (PP)", -1, "", "NoShowByReasonQ", "", "NoShowByReason", FALSE, 0, 0, 0, 0, 0, 0,  FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),		
		ADD_REPORT(534, "Performance Indices (PP)", -1, "", "PerfIndexQ", "", "PerfIndices", FALSE, 0, -1, -1, -1, -1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(535, "Retained Patients (PP)", -1, "", "RetainedPatsQ", "", "RetainedPats", TRUE, 0, -1, -1, -1, -1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "", -1),		
		ADD_REPORT(536, "Unretained Patients (PP)", -1, "", "UnretainedPatsQ", "", "UnretainedPats", TRUE, 0, -1, -1, -1, -1, -1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(537, "Electronic Remittance", -1, "", "EOBQ", "FinancialP", "EOB", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Insurance Companies", "PersonID|Name", "0|-1", "12SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", FALSE, "", "", "", TRUE, 0, "", TRUE, 6, "1;Posting Date;TDate;;", -1),
		ADD_REPORT(538, "Consult To Surgery Counts By Resource", -1, "", "ConsToSurgCountByResourceQ", "MarketP", "ConsToSurgCountByResource", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Consult Date", FALSE, "", "", "", "", "", FALSE, "Resource", "ID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Consult Date;ConsDate;;2;First Contact Date;Date;;", -1),
		ADD_REPORT(539, "Case History Cost / Profit Analysis By Provider", -1, "", "CaseHistCostQ", "ASCP", "CaseHistoryCostAnalysisByProvider", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Completed", "CompletedVal", "", TRUE, 3, "SELECT 0 AS ID, 'Incomplete' AS Name UNION SELECT 1 AS ID, 'Complete' AS Name", FALSE, 4, "1;Surgery Date;TDate;;", -1),
		ADD_REPORT(540, "Conversion Rate by Procedure", -1, "", "ConversionRateByProcQ", "MarketP", "ConversionRateByProc", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "Date of Consult", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL", "ProcID", TRUE, "Resource", "ResourceID", "", FALSE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 2, "1;Date of Consult;Date;;",-1),
		ADD_REPORT(541, "EOB Preview (PP)", -1, "", "EOBPreviewQ", "", "EOBPreview", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(542, "Charges By Category Split by Service/Product", -1, "", "ChargesByCategoryQ", "ChargesP", "ChargesByCategorySplit", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", TRUE, 4, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(543, "Time Scheduled Productivity By Office Hours", -1, "", "TimeScheduledProductivityByOfficeHoursQ", "ScheduleP", "TimeScheduledProductivityByOfficeHours", FALSE, 1, 0, 0, 0, 1, -1, FALSE, "Appt. Date", TRUE, "Appointment Types", "ID|Name", "0|-1", "12SELECT ID, NAME FROM AptTypeT WHERE Inactive = 0 ORDER BY NAME", "AppointmentTypeID", TRUE, "Patients", "PatID", "", FALSE, 3, "SELECT -25, 'Exclude Non-Patient Appointments'", FALSE, 4, "1;Appt Date;Date;;", -1, -1, FALSE),
		ADD_REPORT(544, "Provider Commissions (Charges)", -1, "", "CommissionQ", "FinancialP", "ProviderCommissionsCharges", TRUE, 2, -1, -1, -1, 1, 1, FALSE, "Charge Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 8, "1;Charge Date;ChargeDate;;2;Charge Input Date;ChargeInputDate;;", -1),
		ADD_REPORT(545, "Gift Certificates Redeemed", -1, "", "GCPaysQ", "PaymentsP", "GiftCertificatesRedeemed", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ServiceID, Name FROM GCTypesT INNER JOIN ServiceT ON ServiceID = ServiceT.ID ORDER BY Name", "ServiceID", TRUE, "", "", "", TRUE, 3, "SELECT 1, 'Hide expired certificates'", TRUE, 9, "1;Payment Date;PayDate;;2;Payment Input Date;PayInputDate;;3;Purchase Date;DatePurchased;;", -1, -1, FALSE),
		//68231 upped version
		ADD_REPORT(546, "Gift Certificates Sold", -1, "", "GCSoldQ", "ChargesP", "GiftCertificatesSold", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ServiceID, Name FROM GCTypesT INNER JOIN ServiceT ON ServiceID = ServiceT.ID ORDER BY Name", "ServiceID", TRUE, "", "", "", TRUE, 3, "SELECT 1, 'Hide expired certificates'", TRUE, 6, "1;Purchase Date;PurchDate;;2;Input Date;InputDate;;", -1, -1, FALSE),
		ADD_REPORT(547, "Audit Trail - EMR", -1, "", "AuditTrailQ", "OtherP", "AuditTrailEMR", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(548, "NexWeb Import Information (PP)", -1, "", "NexWebImportInfo", "", "NexWebImportInfoR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(549, "Appointment Duration By Type", -1, "", "ApptDurationByType", "ScheduleP", "ApptDurationByType", TRUE, 1, 0, -1, -1, 1, -1, FALSE, "Appt. Date", TRUE, "", "ID|Name", "0|-1", "11SELECT ID, Name FROM AptTypeT", "TypeID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;Appt. Date;ApptDate;;", -1),
		ADD_REPORT(550, "Discount Analysis By Procedure", -1, "", "DiscountAnalysisByProcQ", "FinancialP", "DiscountAnalysisByProcedure", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ProcedureT.ID, ProcedureT.Name FROM ProcedureT", "ProcID", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(551, "Consult Resource Productivity", -1, "", "CnsltResourceProductivityQ", "ScheduleP", "CnsltResourceProductivity", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Appointment Date", FALSE, "", "ID|Name", "0|-1", "11SELECT ResourceT.ID, ResourceT.Name FROM ResourceT", "ResourceID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Consult Date;ConsultAptDate;Consult;2;Surgery Date;SxAptDate;Surgery;", -1),
		ADD_REPORT(552, "Adjustments By Adjustment Location", -1, "", "AdjustmentsByAdjLocationQ", "PaymentsP", "AdjustmentsByAdjLocation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Adjustment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 3, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(553, "Refunds By Refund Location", -1, "", "RefundsByRefLocationQ", "PaymentsP", "RefundsByRefLocation", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Refund Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Refund Date;TDate;Service;2;Input Date;IDate;Input;", -1),		
		ADD_REPORT(554, "Insurance Vs. Self-Pay Percentages By Provider", -1, "", "InsVSelfByProv", "FinancialP", "InsVSelfByProv", FALSE, 0, -1, 0, 0, 1, 1, FALSE, "Charge Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),		
		ADD_REPORT(555, "User Permissions By Username", -1, "", "PermsByUsername", "AdminP", "PermsByUsername", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "", "PersonID|UserName", "0|-1", "11SELECT PersonID, UserName FROM UsersT WHERE PersonID > 0 UNION SELECT PersonID, Name FROM UserGroupsT", "PersonID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),		
		ADD_REPORT(556, "Preference Cards", -1, "", "SurgeryASCListQ", "ASCP", "SurgeryASCList", FALSE, 0, -1, 0, 0, 0, 0, FALSE, "", TRUE, "", "ID|Name", "0|-1", "11SELECT PreferenceCardsQ.ID,  CASE WHEN ProvNames Is Null OR ProvNames = '' THEN PreferenceCardsQ.Name ELSE PreferenceCardsQ.Name + ' (' + ProvNames + ')' END AS Name FROM (SELECT PreferenceCardsT.*, dbo.GetPreferenceCardProviderString(ID) AS ProvNames FROM PreferenceCardsT) AS PreferenceCardsQ", "PreferenceCardID", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "", -1),
		ADD_REPORT(557, "Charges With Applies Split by Resp", -1, "", "ChargeWithApps", "FinancialP", "ChargesWithApps", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT LEFT JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID ", "ServiceID", TRUE, "Modifier", "", "", TRUE, 4, "SELECT CPTModifierT.Number, CPTModifierT.Number + ' - ' + CPTModifierT.Note FROM CPTModifierT", FALSE, 6, "1;Charge Service Date;ChargeDate;;2;Payment Date;PayDate;;3;Charge Input Date;ChargeIDate;;4;Payment Input Date;PayIDate;;", -1),		
		ADD_REPORT(558, "Charges Breakdown by Provider", -1, "", "ChargeBreakByProv", "FinancialP", "ChargeBreakByProv", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Charge Date", TRUE, "", "CatID|Category", "0|-1", "11SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatID", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "1;Charge Service Date;TDate;;2;Charge Input Date;IDate;;", -1),		
		// (j.jones 2007-03-30 11:55) - PLID 25428 - changed the FinanceCharges alias to FinanceChargesQ
		// (j.jones 2009-06-10 14:01) - PLID 34583 - upped version
		ADD_REPORT(559, "Finance Charges", -1, "", "FinanceChargesQ", "ChargesP", "FinanceCharges", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Finance Charge Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(560, "Returned Products", -1, "", "InvalidQ", "FinancialP", "ReturnedProducts", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Returned Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Return Date;DateReturned;;2;Charge Date;ChargeDate;;3;Charge Input Date;ChargeIDate;;", -1),
		// (j.jones 2009-11-20 16:39) - PLID 36386 - renamed to call it a Basic commission summary
		ADD_REPORT(561, "Returned Product Basic Commission Summary", -1, "", "ReturnProdCommQ", "FinancialP", "ReturnedProductCommission", TRUE, 1, -1, -1, 0, 1, 1, FALSE, "Returned Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Return Date;DateReturned;;2;Charge Date;ChargeDate;;3;Charge Input Date;ChargeIDate;;", -1),
		// (j.jones 2010-02-04 16:05) - PLID 36500 - changed query name to fix filtering issues
		ADD_REPORT(562, "Payment Analysis By Primary Ins Co By Service Code", -1, "PaybyInsService", "PayAnalysisByInsServiceQ", "FinancialP", "PayerByInsService", FALSE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "", "ID|Name", "0|-1", "11SELECT PersonID AS ID, Name FROM InsuranceCoT", "InsuranceCoID", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Charge Date;TDate;;2;Charge Input Date;IDate;;", -1),																																																															//Note: There are formulas in this report that depends on the display names of the date filters.
		ADD_REPORT(563, "Adjustments To Prior Receivables", -1, "", "NetCreditsTransferredQ", "FinancialP", "NetCreditsTransferred", FALSE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 3, "", FALSE, 1, "1;Adjustment Date (Bill/Payment);TDate;;2;Adjustment Date (Input);IDate;;", -1),
		ADD_REPORT(564, "Appointments Requesting a MoveUp (PP)", 94, "MoveUpR", "AppointInfoQ", "", "MoveUpR", TRUE, 0, 0, -1, -1, -1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", FALSE, 1, "", -1, fboAppointment, -1),
		ADD_REPORT(565, "Adjustments By Referring Physician", 120, "", "AdjsByRefPhysQ", "PaymentsP", "AdjsByRefPhys", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Adjustment Date", TRUE, "", "RefPhysID|RefPhysName", "0|-1", "12SELECT PersonT.ID AS RefPhysID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS RefPhysName FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 5, "1;Adjustment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(566, "Refunds By Referring Physician", 171, "", "RefsByRefPhysQ", "PaymentsP", "RefsByRefPhys", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Refund Date", TRUE, "", "RefPhysID|RefPhysName", "0|-1", "12SELECT PersonT.ID AS RefPhysID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS RefPhysName FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID ORDER BY PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle", "RefPhysID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Refund Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(567, "Lab Results Form", 223, "", "LabReportQ", "", "LabReport", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 36, "", -1),
		ADD_REPORT(568, "Labs By Patient", 223, "", "LabsByPatientQ", "OtherP", "LabsByPatient", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Input Date", TRUE, "Result Flag", "ID|Flag", "0|-1", "12SELECT ID, Name AS Flag FROM LabResultFlagsT", "FlagID", FALSE, "", "", "", TRUE, 0, "", TRUE, 13, "1;Lab Date;BiopsyDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(569, "Procedure Cheat Sheet Information", 251, "", "ProcCheatSheetQ", "AdminP", "ProcCheatSheetInfo", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "", "ProcID|ProcName", "0|-1", "12SELECT ProcedureT.ID AS ProcID, Name as ProcName FROM ProcedureT", "ProcID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(570, "Procedure Content", 251, "", "ProcedureContentQ", "AdminP", "ProcedureContent", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "", "ProcID|ProcName", "0|-1", "12SELECT ProcedureT.ID AS ProcID, Name as ProcName FROM ProcedureT", "ProcID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(571, "Patient Outcomes", 223, "Patient Outcomes", "EyeProceduresT", "PatientP", "PatOutcomes", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 3, "", TRUE, 1, "1;Visit Date;VisitDate;;", -1),
		ADD_REPORT(572, "Unbatched Claims", 342, "Unbatched Claims", "UnbatchedClaimsQ", "FinancialP", "UnbatchedClaims", TRUE, 0, 0, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Insurance Company", "InsCoID|Name", "0|-1", "12SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "HasBeenSent", "HasBeenSent", "", TRUE, 3, "SELECT 1, 'Only Show Unsent Claims' UNION SELECT 2, 'Only Show Sent Claims'", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
		ADD_REPORT(573, "Effectiveness (PP)", 190, "Marketing Effectiveness (PP)", "MarketEffectQ", "", "MarketingEffectivenessPP", FALSE, 0, -1, -1, -1, -1, -1, FALSE, "First Contact Date", FALSE, "Referral Source", "", "", "", "", FALSE, "", "", "", TRUE, 3, "", FALSE, 1, "", -1, -1, TRUE),
		ADD_REPORT(574, "Quote List (PP)", 227, "Quote List (PP)", "QuoteQ", "", "QuoteList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 0, "", -1),
		ADD_REPORT(575, "Quoted Packages", 227, "Quoted Packages", "QuotedPackagesQ", "ChargesP", "QuotedPackages", TRUE, 0, 0, -1, -1, 1, 1, FALSE,  "", FALSE, "", "", "", "", "", TRUE, "PackageStatus", "PackageStatus", "", TRUE, 3, "SELECT 1 AS PackageStatus, 'Unstarted' AS StatusName UNION SELECT 3 AS PackageStatus, 'Partially Complete' AS StatusName UNION SELECT 2 AS PackageStatus, 'Complete' AS StatusName", TRUE, 5, "1;Quote Date;QuoteDate;;2;PrePayment Date;PrePayDate;;", FALSE, -1, FALSE), 
		ADD_REPORT(576, "EMR Summary (PP)", 256, "EMR Summary", "EMRSummaryQ", "", "NexEMRSummary", FALSE, 1, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "", 0, -1, FALSE),
		ADD_REPORT(577, "EMNs by Procedure", 255, "EMNs by Procedure", "EMRMasterQ", "OtherP", "EMNByProcedure", TRUE, 0, -1, -1, -1, 1, -1, FALSE, "EMN Date", TRUE, "EMNByProcedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "1;EMN Date;EMNDate;;2;Input Date;EMNInputDate;;3;Modified Date;EMNLastModifiedDate;;", -1, fboEMN),
		// (j.jones 2010-02-04 14:44) - PLID 36500 - corrected the record source for proper filtering
		ADD_REPORT(578, "Patients By Family", 14, "Patients by Family", "PatientsByFamilyQ", "PatientP", "PatientsByFamily", FALSE, 0, -1, -1, 0, 1, -1, FALSE, "First Contact Date",  FALSE, "PatientsByFamily", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Contact Date;FirstContactDate;;", -1),
		ADD_REPORT(579, "Payments Under Allowed Amount (PP)", 366, "Payments Under Allowed Amount (PP)", "AllowedQ", "", "AllowablePreview", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "", 3),
		ADD_REPORT(580, "Daily Sales (By Charge Category)", 325, "Daily Sales (By Charge Category)", "DailyFinancialCPTCatQ", "FinancialP", "DailySalesByCPTCategory", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "", "ID|Name", "0|-1", "12SELECT CategoriesT.ID, CategoriesT.Name FROM CategoriesT", "Category",  TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", FALSE, 6, "1;Bill Date/Payment Date;BDate;;2;Service Date/Payment Date;TDate;;3;Input Date;IDate;;", -1, -1, FALSE),
		ADD_REPORT(581, "EMR Search (PP)", 256, "EMR Search", "EMRSearchQ", "", "EMRSearchR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 5, "", 3, -1, FALSE),
		ADD_REPORT(582, "AAFPRS Survey", 260, "AAFPRS Survey", "AAFPRSSurveyQ", "AdminP", "AAFPRSSurvey", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Year", "TYear", "", FALSE, 3, "SELECT Year(Date) AS Number, Str(Year(Date)) AS Selection FROM AppointmentsT WHERE ID IN (SELECT AppointmentID FROM AppointmentPurposeT) AND AppointmentsT.ShowState <> 3 AND AppointmentsT.Status <> 4 AND AppointmentsT.AptTypeID IN (SELECT ID FROM AptTypeT WHERE Category IN (3,4,6)) GROUP BY Year(Date), Str(Year(Date)), Year(Date) ORDER BY Year(Date)", FALSE, 1, "", 1, -1, FALSE),
		ADD_REPORT(583, "Time Scheduled Productivity By Time Logs", 543, "", "TimeScheduledProductivityByTimeLogsQ", "ScheduleP", "TimeScheduledProductivityByTimeLogs", FALSE, 0, 0, 0, 0, 1, -1, FALSE, "Appt. Date", TRUE, "Appointment Types", "ID|Name", "0|-1", "12SELECT ID, NAME FROM AptTypeT WHERE Inactive = 0 ORDER BY NAME", "AppointmentTypeID", TRUE, "Patients", "PatID", "", FALSE, 3, "SELECT -25, 'Exclude Non-Patient Appointments'", FALSE, 3, "1;Appt Date;Date;;", 1, -1, FALSE),
		// (c.haag 2007-04-10 16:02) - PLID 25482 - Upped version because the Allergy name is now a memo field
		// (j.jones 2008-07-02 10:52) - PLID 30580 - removed patient filter and upped version
		ADD_REPORT(584, "EMR Summary Screen Report (PP)", 256, "EMR Summary Screen", "EMRSummaryQ", "", "EMRSumScreenR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 3, "", 1, -1, FALSE),
		// (a.walling 2008-12-11 09:35) - PLID 32410 - added BillID to sales receipt
		ADD_REPORT(585, "Sales Receipt (PP)", 235, "", "SalesReceiptQ", "", "SalesReceipt", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 19, "", -1),
		ADD_REPORT(586, "Bills With Applies Split by Resp", 557, "", "BillsWithApps", "FinancialP", "BillsWithApps", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Charge Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Charge Service Date;ChargeDate;;2;Payment Date;PayDate;;3;Charge Input Date;ChargeIDate;;4;Payment Input Date;PayIDate;;5;Bill Date;BillDate;;", -1),		
		// (j.gruber 2007-05-09 12:54) - PLID 9802 - we used the POS drivers for this instead, leaving it in in case we decide to put it in in the future
		//ADD_REPORT(587, "Sales Receipt Receipt Printer Format(PP)", 235, "", "SalesReceiptQ", "", "SalesReceiptRPFormat", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(588, "Discount Categories", 166, "", "DiscCatQ", "AdminP", "DiscountCategoriesR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(589, "Sales", 166, "", "SalesQ", "AdminP", "SalesR", FALSE, 0, 0, 0, 0, 1, -1, FALSE, "EndDate", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;End Date;EndDate;;", -1),
		ADD_REPORT(590, "Coupons", 166, "", "CouponsQ", "AdminP", "CouponsR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(591, "Suggested Sales", 166, "", "SuggestedSalesQ", "AdminP", "SuggestedSalesR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "", -1),
		ADD_REPORT(592, "Advanced Commissions", 166, "", "AdvancedCommissionsQ", "AdminP", "AdvancedCommissionsR", FALSE, 0, -1, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(593, "Commission Rules", 166, "", "CommissionRulesQ", "AdminP", "CommissionRulesR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(594, "Patient Reward History", 446, "Patient Reward History", "RewardHistoryQ", "FinancialP", "PatientRewardHistory", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Date;Date;;", 1),
		// (a.walling 2007-09-25 17:10) - PLID 25976 - Moved to Financial from Patients
		ADD_REPORT(595, "Patient Reward Points by Location and Provider", 446, "Patient Reward Points by Location and Provider", "RewardPointsQ", "FinancialP", "PatientRewardPoints", TRUE, 0, -1, -1, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", 1),
		ADD_REPORT(596, "Sales Forecast / Pipeline", 321, "", "SalesForecastQ", "OtherP", "SalesForecast", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Est Close Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Est Close Date;EstCloseDate;;", -1),
		ADD_REPORT(597, "High Sales Opportunities", 321, "", "HighSalesQ", "OtherP", "HighSalesOpportunities", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Est Close Date", FALSE, "", "", "", "", "", TRUE, "Category", "CategoryID", "", TRUE, 3, "SELECT ID, Name FROM OpportunityCategoriesT", FALSE, 1, "1;Est Close Date;EstCloseDate;;", -1),
		ADD_REPORT(598, "Sales Revenue Charts", 321, "", "SalesRevenueQ", "OtherP", "SalesRevenueCharts", TRUE, 0, 0, 0, -1, 1, 1, FALSE, "Closed Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Closed Date;CloseDate;;", -1),
		ADD_REPORT(599, "Sales Quarterly Targets", 321, "", "SalesTargetQ", "OtherP", "SalesQuarterTargets", TRUE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "", "QtrID", "", FALSE, 3, "SELECT ID AS ID, Qtr AS Qtr FROM (SELECT convert(int, convert(nvarchar, Year(DateActive)) + convert(nvarchar, datepart(qq, DateActive))) AS ID, 'Q' + convert(nvarchar, datepart(qq, DateActive)) + ' ' + convert(nvarchar, Year(DateActive)) AS Qtr FROM OpportunityStageHistoryT) SubQ GROUP BY ID, Qtr", FALSE, 1, "", -1),
		ADD_REPORT(600, "Sales Yearly Summary", 321, "", "SalesYearSummaryQ", "OtherP", "SalesYearSummary", TRUE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "", "Year", "", FALSE, 3, "SELECT ID AS ID, Yr AS Yr FROM (SELECT Year(DateActive) AS ID, convert(nvarchar, Year(DateActive)) AS Yr FROM OpportunityStageHistoryT) SubQ GROUP BY ID, Yr", FALSE, 1, "", -1),
		ADD_REPORT(601, "Waiting List", 94, "", "WaitingListQ", "ScheduleP", "WaitingList", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Appointment Category", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "ApptTypeID", TRUE, "Appointment Category", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Requested Date;;;2;Created Date;CreatedDate;;", -1, fboAppointment),
		ADD_REPORT(602, "Product Transfers", 274, "", "ProductTransfersQ", "InventoryP", "ProductTransfers", FALSE, 0, 0, -1, 0, 1, 0, FALSE, "Transfer Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID WHERE ProductT.ID IN (SELECT ProductID FROM ProductLocationInfoT WHERE TrackableStatus = 2) ORDER BY ServiceT.Name", "ProductID", TRUE, "Category", "CategoryID", "", FALSE, 3, "SELECT DISTINCT CategoriesT.ID AS CatID, CategoriesT.Name FROM CategoriesT INNER JOIN ServiceT ON CategoriesT.ID = ServiceT.Category INNER JOIN ProductT ON ServiceT.ID = ProductT.ID INNER JOIN ProductLocationInfoT ON ProductT.ID = ProductLocationInfoT.ProductID WHERE ProductLocationInfoT.TrackableStatus = 2 ORDER BY CategoriesT.Name", TRUE, 2, "1;Transfer Date;Date;;", -1),
		// (j.jones 2008-04-18 10:02) - PLID 29706 - this uses the DailyFinancialQ query, and needs to reference it accordingly
		ADD_REPORT(603, "Financial Activity - Today's Service Date", 153, "", "DailyFinancialQ", "FinancialP", "FinancialActivityTodaysDate", TRUE, 1, -1, -1, -1, 0, 0, FALSE, "", TRUE, "Login Name", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT WHERE UsersT.PersonID > 0", "InputName", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", TRUE, 8, "", -1, -1, FALSE),
		ADD_REPORT(604, "Credit Card Customer Copy", 235, "", "CCCustomerCopyQ", "", "CCCustomerCopyR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(605, "Credit Card Merchant Copy", 235, "", "CCMerchantCopyQ", "", "CCMerchantCopyR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(606, "Credit Card Batch Processing", 151, "", "CCBatchProcessingQ", "", "CCBatchProcessingR", FALSE, 0, 0, 0, 0, -1, 1, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 2, "1;Batch Close Date;BatchCloseDate;;", -1),
		ADD_REPORT(607, "Prepayments Applied to Quotes", 147, "PrepaymentsAppliedToQuotesR", "PrepaymentsAppliedToQuotesQ", "PaymentsP", "PrepaymentsAppliedToQuotes", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Date of Payment", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Payment Date;TDate;;", -1),
		ADD_REPORT(608, "Package Quote (PP)", 227, "", "PackageQuoteQ", "", "PackageQuote", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(609, "Revenue By Procedure By Referral Source", 510, "", "RevByProcByRefQ", "MarketP", "RevByProcByRef", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "", TRUE, "Procedure", "ID|Name", "0|-1", "11SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL Order by Name ", "ProcID", TRUE, "Referral Source", "ReferralID", "", TRUE, 3, "SELECT PersonID, Name FROM ReferralSourceT", TRUE, 2, "1;Charge Service Date;ChargeTDate;;2;Charge Input Date;ChargeIDate;;3;Payment Service Date;PayTDate;;4;Payment Input Date;PayIDate;;", -1),
		ADD_REPORT(610, "Tracking Conversion Summary", 357, "", "TrackConversionQ", "MarketP", "TrackConversionsR", FALSE, 0, -1, 0, 0, 1, 0, FALSE, "Date", TRUE, "Procedures", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "LadderTemplateID", "LadderTemplateID", "", FALSE, 3, "SELECT ID, Name FROM LadderTemplatesT ", FALSE, 3, "1;First Interest Date;Date;;", 0),
		ADD_REPORT(611, "Charges Billed Below Standard Fee", 360, "", "ChargesBilledBelowStandardFeeQ", "FinancialP", "ChargesBilledBelowStandardFee", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ID|Code|Name", "0|33|-1", "12SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID ORDER BY Name", "ServiceID", FALSE, "", "", "", TRUE, 0, "", FALSE, 2, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(612, "Charges Billed Below Standard Fee By Procedure", 550, "", "ChargesBilledBelowStandardFeeByProcedureQ", "FinancialP", "ChargesBilledBelowStandardFeeByProcedure", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ProcedureT.ID, ProcedureT.Name FROM ProcedureT", "ProcID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(613, "Discount Analysis By Category", 550, "", "DiscountAnalysisByCategoryQ", "FinancialP", "DiscountAnalysisByCategory", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Description FROM DiscountCategoriesT WHERE Active = 1 UNION SELECT -1*ID AS ID, Description FROM CouponsT", "DiscountCategoryID", FALSE, "", "", "", TRUE, 0, "", FALSE, 4, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(614, "Marketing Review", 190, "", "MarketReview", "MarketP", "MarketReviewR", FALSE, 0, -1, -1, 0, 1, 0, FALSE, "Appt.Date/Payment/First Contact Date", FALSE, "", "", "", "", "", TRUE, "Resource", "ResourceID", "", FALSE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 3, "1;Date;Date;;", -1, 0),
		ADD_REPORT(615, "Clients By EMR Specialist", 321, "", "EMRSpecialistQ", "AdminP", "ClientsByEMRSpecialist", TRUE, 0, 0, 0, 0, 1, 0, FALSE, "", TRUE, "", "ID|StatusName", "0|-1", "12SELECT ID, StatusName FROM EMRStatusT", "EMRStatusID", TRUE, "EMR Specialist", "EMRSpecialistID", "", TRUE, 3, "SELECT UserID, UsersT.UserName FROM EMRSpecialistT INNER JOIN UsersT ON EMRSpecialistT.UserID = UsersT.PersonID", FALSE, 3, "1;First Contact Date;FCDDate;;", -1),
        ADD_REPORT(616, "Supplier Returns", 18, "", "SupplierReturnsQ", "InventoryP", "SupplierReturns", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "Return Date", TRUE, "Product", "ID|Product", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID ORDER BY ServiceT.Name", "ProductID", TRUE, "Status", "Completed", "", FALSE, 3, "SELECT 0, 'Active' UNION SELECT 1, 'Completed'", TRUE, 5, "1;Return Date;ReturnDate;;2;Completed Date;DateCompleted;CompletedDate;", -1),
		// (c.haag 2008-03-07 12:11) - PLID 29170 - This report has been depreciated by the generic supplier return report
		//ADD_REPORT(617, "Allergan Product Transfer Summary Sheet", 18, "", "ProductTransferQ", "InventoryP", "AllerganProductTransferSummarySheet", FALSE, 0, 0, -1, 0, -1, 0, FALSE, "Return Date", FALSE, "", "", "", "", "", FALSE, "", "ReturnGroupID", "", FALSE, 0, "", TRUE, 2, "1;Return Date;ReturnDate;;", -1),
		ADD_REPORT(618, "Inventory Overview", 18, "", "InvOverviewQ", "InventoryP", "InvOverview", FALSE, 0, -1, -1, -1, 1, 0, FALSE, "Status Date", TRUE, "Product", "ID|Product", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID WHERE ServiceT.ID IN (SELECT ProductID FROM ProductItemsT) ORDER BY ServiceT.Name", "ProductID", TRUE, "Status", "StatusType", "", FALSE, 3, "SELECT 0, 'Available' UNION SELECT 4, 'On Hand' UNION SELECT 1, 'Allocated' UNION SELECT 2, 'Used' UNION SELECT 3, 'Adjusted/Returned'", FALSE, 6, "1;Status Date;DateUsed;;2;Date Received;DateReceived;;3;Date Ordered;DateOrdered;;", -1),
		ADD_REPORT(619, "Allocation List", 18, "", "AllocationListQ", "InventoryP", "AllocationList", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Input Date", FALSE, "", "", "", "", "", TRUE, "Status", "StatusType", "", FALSE, 3, "SELECT 0, 'Active' UNION SELECT 1, 'Completed & Billed' UNION SELECT 2, 'Completed & Not Billed'", TRUE, 3, "1;Input Date;Date;;2;Status Date;AllocationStatusDate;StatusDate;3;Appointment Date;StartTime;ApptDate;", -1),
		ADD_REPORT(620, "Consignment List", 18, "AND ProductItemsT.Status = " + AsString((long)InvUtils::pisConsignment), "ConsignmentListQ", "InventoryP", "ConsignmentList", FALSE, 0, -1, -1, -1, 1, 0, FALSE, "Status Date", TRUE, "Product", "ID|Product", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID WHERE ServiceT.ID IN (SELECT ProductID FROM ProductItemsT) ORDER BY ServiceT.Name", "ProductID", TRUE, "Status", "StatusType", "", TRUE, 3, "SELECT 0, 'Available' UNION SELECT 4, 'On Hand' UNION SELECT 1, 'Allocated' UNION SELECT 2, 'Used' UNION SELECT 3, 'Adjusted/Returned'", FALSE, 5, "1;Status Date;DateUsed;;", -1),
		ADD_REPORT(621, "Consignment History By Date", 18, "", "ConsignmentHistoryByDateQ", "InventoryP", "ConsignmentHistoryByDate", FALSE, 0, 0, -1, 0, 1, 0, FALSE, "Status Date", TRUE, "Product", "ID|Product",										   "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID WHERE ServiceT.ID IN (SELECT ProductID FROM ProductItemsT) ORDER BY ServiceT.Name", "ProductID", FALSE, "", "", "", FALSE, 1, "", FALSE, 4, "1;Status Date;Date;;", -1),
		ADD_REPORT(622, "Tracking Conversion Summary By Patient Coordinator", 357, "", "TrackConversionByPatCoordQ", "MarketP", "TrackConversionsByPatCoordR", FALSE, 0, -1, 0, 0, 1, 0, FALSE, "Date", TRUE, "Procedures", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "LadderTemplateID", "LadderTemplateID", "", FALSE, 3, "SELECT ID, Name FROM LadderTemplatesT ", FALSE, 2, "1;First Interest Date;Date;;", 0),
		ADD_REPORT(623, "Physical Inventory - Serialized - Tally Sheet", 3, "", "SerialTallyQ", "InventoryP", "InvPhysTallySerial", FALSE, 0, 0, -1,  0, 0, 0, FALSE, "", TRUE, "", "ID|CategoryName", "0|-1", "12SELECT ID, Name AS CategoryName FROM CategoriesT", "CategoryID", TRUE, "Supplier", "SupplierID", "", FALSE, 3, "SELECT ID, Company FROM PersonT INNER JOIN SupplierT ON PersonT.ID = SupplierT.PersonID ORDER BY Company", FALSE, 8, "", -1),
		ADD_REPORT(624, "Daily User Activity", 153, "", "DailyUserActQ", "FinancialP", "DailyUserActivity", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "Login Name", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT WHERE UsersT.PersonID > 0", "InputName", FALSE, "", "", "", TRUE, 3, "", TRUE, 12, "1;Bill Date/Payment Date;BDate;;2;Service Date/Payment Date;TDate;;3;Input Date;IDate;;", -1, -1, FALSE),
		ADD_REPORT(625, "EMR Clients By Name ", 321, "", "EMRSpecialistQ", "AdminP", "EMRClientsByName", TRUE, 1, 0, 0, 0, 1, 0, FALSE, "", TRUE, "", "ID|StatusName", "0|-1", "12SELECT ID, StatusName FROM EMRStatusT", "EMRStatusID", TRUE, "EMR Specialist", "EMRSpecialistID", "", TRUE, 3, "SELECT UserID, UsersT.UserName FROM EMRSpecialistT INNER JOIN UsersT ON EMRSpecialistT.UserID = UsersT.PersonID", FALSE, 3, "1;First Contact Date;FCDDate;;", -1),
		ADD_REPORT(626, "Clients By EMR Status", 321, "", "EMRStatusQ", "AdminP", "ClientsByEMRStatus", TRUE, 0, 0, 0, 0, 1, 0, FALSE, "", TRUE, "", "ID|StatusName", "0|-1", "12SELECT ID, StatusName FROM EMRStatusT", "EMRStatusID", TRUE, "EMR Specialist", "EMRSpecialistID", "", TRUE, 3, "SELECT UserID, UsersT.UserName FROM EMRSpecialistT INNER JOIN UsersT ON EMRSpecialistT.UserID = UsersT.PersonID", FALSE, 4, "1;First Contact Date;FCDDate;;", -1),
		ADD_REPORT(627, "Inquiry List (PP)", 14, "InquiryList", "InquiryListQ", "", "InquiryList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 2, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(628, "Appointments Without Allocations", 619, "", "ApptsWoAllocsQ", "ScheduleP", "ApptsWithoutAllocs", TRUE, 0, 0, -1, -1, 0, 0, FALSE, "Appt. Date", FALSE, "", "", "", "", "", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", FALSE, 1, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(629, "Inquiry List", 14, "InquiryList", "InquiryListQ", "PatientP", "InquiryList", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "First Contact Date", TRUE, "", "ID|ProcName", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE ID IN (SELECT ProcedureID FROM ProcedureLadderTemplateT) OR ProcedureGroupID IN (SELECT ID FROM ProcedureGroupsT WHERE LadderTemplateID Is NOT NULL) GROUP BY ID, Name", "ProcID", TRUE, "Input Name:", "InputEmpID", "", FALSE, 3, "SELECT PersonID, UsersT.UserName FROM UsersT WHERE PersonID > 0", FALSE, 2, "1;InputDate;InputDate;;", -1),
		ADD_REPORT(630, "Time Scheduled Productivity By Time Logs By Location", 583, "", "TimeScheduledProductivityByTimeLogsByLocQ", "ScheduleP", "TimeScheduledProductivityByTimeLogsByLoc", FALSE, 0, 0, -1, 0, 1, -1, FALSE, "Appt. Date", TRUE, "Appointment Types", "ID|Name", "0|-1", "12SELECT ID, NAME FROM AptTypeT WHERE Inactive = 0 ORDER BY NAME", "AppointmentTypeID", TRUE, "Patients", "PatID", "", FALSE, 3, "SELECT -25, 'Exclude Non-Patient Appointments'", FALSE, 2, "1;Appt Date;Date;;", 1, -1, FALSE),
		ADD_REPORT(631, "EMNs With Charges", 254, "", "EMNsWithChargesQ", "FinancialP", "EMNsWithCharges", TRUE, 0, -1, -1, -1, 1, -1, FALSE, "EMN Date", TRUE, "", "ID|Procedure", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcedureID", TRUE, "Has EMN Been Billed", "HasEMNBeenBilled", "", TRUE, 3, "SELECT 0, 'Has Not Been Billed' UNION SELECT 1, 'Has Been Billed'", TRUE, 4, "1;EMN Date;Date;;", -1, fboEMN, FALSE),
		ADD_REPORT(632, "Audit Trail - AR Issues", 233, "", "AuditTrailQ", "OtherP", "AuditTrailARIssues", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Date of Change", TRUE, "", "UserName|UserName", "0|-1", "11SELECT UsersT.UserName, UsersT.UserName FROM UsersT WHERE UsersT.PersonID > 0", "UserName", TRUE, "Priority", "Priority", "", FALSE, 3, "SELECT 1, 'High' UNION SELECT 2, 'Medium' UNION SELECT 3, 'Low'", FALSE, 4, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(633, "Number of Charges By Provider - Monthly", 156, "", "NumChargesByProvMonthQ", "PracAnalP", "NumChargesByProvMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(634, "Number of Charges By Provider - Quarterly", 156, "", "NumChargesByProvQuarterQ", "PracAnalP", "NumChargesByProvQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(635, "Number of Charges By Category Segment - Monthly", 156, "", "NumChargesByCatSegMonthQ", "PracAnalP", "NumChargesByCatSegMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(636, "Number of Charges By Category Segment - Quarterly", 156, "", "NumChargesByCatSegQuarterQ", "PracAnalP", "NumChargesByCatSegQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(637, "Sum of Charges By Provider - Monthly", 156, "", "SumChargesByProvMonthQ", "PracAnalP", "SumChargesByProvMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(638, "Sum of Charges By Provider - Quarterly", 156, "", "SumChargesByProvQuarterQ", "PracAnalP", "SumChargesByProvQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(639, "Sum of Charges By Category Segment - Monthly", 156, "", "SumChargesByCatSegMonthQ", "PracAnalP", "SumChargesByCatSegMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(640, "Sum of Charges By Category Segment - Quarterly", 156, "", "SumChargesByCatSegQuarterQ", "PracAnalP", "SumChargesByCatSegQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(641, "Responsibility Percentage by Provider - Monthly", 156, "", "RespPercentageByProvMonthQ", "PracAnalP", "RespPercentageByProvMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(642, "Responsibility Percentage by Provider - Quarterly", 156, "", "RespPercentageByProvQuarterQ", "PracAnalP", "RespPercentageByProvQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", "SegCategoryID", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(643, "Responsibility Percentage by Category Segment - Monthly", 156, "", "RespPercentageByCatSegMonthQ", "PracAnalP", "RespPercentageByCatSegMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(644, "Responsibility Percentage by Category Segment - Quarterly", 156, "", "RespPercentageByCatSegQuarterQ", "PracAnalP", "RespPercentageByCatSegQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "11SELECT ServiceT.ID, CPTCodeT.Code + ' ' + CPTCodeT.SubCode AS Code, ServiceT.Name FROM ServiceT INNER JOIN CPTCodeT ON CPTCodeT.ID = ServiceT.ID", "ServiceID",  FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(645, "Top 10 Service Codes/Inv. Items Billed By Count - Monthly", 156, "", "TopServiceCodesBilledMonthQ", "PracAnalP", "TopServiceCodesBilledMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "",  TRUE, "Category Segment", "SegCategoryID", "", FALSE, 3, "SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(646, "Top 10 Service Codes/Inv. Items Billed By Count - Quarterly", 156, "", "TopServiceCodesBilledQuarterQ", "PracAnalP", "TopServiceCodesBilledQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "",  TRUE, "Category Segment", "SegCategoryID", "", FALSE, 3, "SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(647, "Top 10 Service Codes/Inv. Items Billed By Amount - Monthly", 156, "", "TopServiceCodesBilledByAmountMonthQ", "PracAnalP", "TopServiceCodesBilledByAmountMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "",  TRUE, "Category Segment", "SegCategoryID", "", FALSE, 3, "SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(648, "Top 10 Service Codes/Inv. Items Billed By Amount - Quarterly", 156, "", "TopServiceCodesBilledByAmountQuarterQ", "PracAnalP", "TopServiceCodesBilledByAmountQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", FALSE, "", "", "", "", "",  TRUE, "Category Segment", "SegCategoryID", "", FALSE, 3, "SELECT ID, Name FROM ReportSegmentsT WHERE TypeID = 1", FALSE, 3, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(649, "Case Volume By Master Procedure - Monthly", 156, "", "CaseVolumeByMastProcMonthQ", "PracAnalP", "CaseVolumeByMastProcMonthR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL", "ProcID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;", -1),
		ADD_REPORT(650, "Case Volume By Master Procedure - Quarter", 156, "", "CaseVolumeByMastProcQuarterQ", "PracAnalP", "CaseVolumeByMastProcQuarterR", FALSE, 2, -1, -1, 0, 1, 0, FALSE, "Service Date", TRUE, "", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL", "ProcID", FALSE, "", "", "", FALSE, 3, "", FALSE, 3, "1;Service Date;TDate;;", -1),
		ADD_REPORT(651, "Problem List by Patient", 584, "", "ProblemListByPatientQ", "OtherP", "ProblemListByPatient", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "", FALSE, "", "ID|Name", "0|-1", "", "", TRUE, "", "", "", TRUE, 3, "SELECT ID, Name FROM EmrProblemStatusT UNION SELECT -4 AS ID, '< Resolved >' AS Name UNION SELECT -5 AS ID, '< Unresolved >' AS Name ORDER BY Name", FALSE, 4, "1;Modified Date;ModifiedDate;;2;Entered Date;EnteredDate;;3;Onset Date;OnsetDate;;", 1, -1, TRUE),
		ADD_REPORT(652, "Problem List (PP)", 584, "", "ProblemListQ", "", "ProblemList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", FALSE, 2, "", 0, -1, FALSE),
		ADD_REPORT(653, "Patient Barcode Sheet", 14, "", "PatientBarcodeSheetQ", "PatientP", "PatientBarcodeSheet", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", TRUE, "Status", "CurrentStatus", "", TRUE, 3, "SELECT 1, 'Patient' UNION SELECT 2, 'Prospect' UNION SELECT 3, 'Patient/Prospect'", TRUE, 6, "1;First Contact Date;FirstContactDate;;", 1, -1, TRUE),
		ADD_REPORT(654, "Lab Specimen Labels", 568, "", "LabsQ", "", "LabSpecimenLabels", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", FALSE, REPORTVERSION_LABSPECIMENLABELS, "", 0),
		ADD_REPORT(655, "Consignment Turn Rate by Month", 621, "", "ConsignmentTurnQ", "InventoryP", "ConsignmentTurnRateByMonth", FALSE, 0, 0, -1, 0, 1, 0, FALSE, "Status Date", TRUE, "Product", "ID|Product", "0|-1", "12SELECT ProductT.ID, ServiceT.Name FROM ProductT INNER JOIN ServiceT ON ProductT.ID = ServiceT.ID WHERE ServiceT.ID IN (SELECT ProductID FROM ProductItemsT) ORDER BY ServiceT.Name", "ProductID", TRUE, "Category", "CategoryID", "", FALSE, 3, "SELECT ID, Name FROM CategoriesT ORDER BY Name", FALSE, 3, "1;Status Date;StatusDate;;", -1),
		ADD_REPORT(656, "Advertising Cost Analysis", 190, "", "AdvCostAnalysisQ", "MarketP", "AdvCostAnalysis", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "First Interest Date", TRUE, "", "PersonID|Name", "0|-1", "12SELECT ReferralSourceT.PersonID, ReferralSourceT.Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Interest Date;Date;;",-1),
		ADD_REPORT(657, "Media Cost Analysis", 190, "", "MediaCostAnalysisQ", "MarketP", "MediaCostAnalysis", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL ORDER BY Name", "ProcID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;First Interest Date;Date;;",-1),
		ADD_REPORT(658, "Lab Request Form", 223, "", "LabReportQ", "", "LabRequest", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, REPORTVERSION_LABREQUEST, "", -1),
		ADD_REPORT(659, "Aged Receivables By Financial Class", 170, "ARFinClassR", "ARPatBalQ", "FinancialP", "ARByFinClass", TRUE, 1, -1, -1, -1, 1, 0, TRUE, "Bill Date", TRUE, "Financial Class", "ID|Name", "0|-1", "12SELECT ID, Name FROM FinancialClassT ORDER BY Name", "FinClassID", TRUE, "Age", "TDate", "", TRUE, 5, "", TRUE, 8, "1;Bill Date/Payment Date;TDate;;2;Assignment Date/Payment Date;ADate;Assign;3;Assign Date/Payment Input Date;ADate;Assign;4;Input Date;IDate;;", 0),
		ADD_REPORT(660, "Daily User Activity - Detailed", 624, "", "DailyUserActQ", "FinancialP", "DailyUserActivityDetailed", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Date Range", TRUE, "Login Name", "UserName|DupName", "-1|0", "12SELECT UserName, UserName AS DupName FROM UsersT WHERE UsersT.PersonID > 0", "InputName", FALSE, "", "", "", TRUE, 3, "", TRUE, 8, "1;Bill Date/Payment Date;BDate;;2;Service Date/Payment Date;TDate;;3;Input Date;IDate;;", -1, -1, FALSE),
		ADD_REPORT(661, "Graphical Lab Results By Patient (PP)", 223, "", "GraphLabResultsQ", "", "GraphLabResults", FALSE, 0, 0, 0, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(662, "Referral Orders (PP)", 14, "", "ReferralOrdersQ", "", "ReferralOrders", FALSE, 0, 0, 0, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(663, "Patient Graph Data (PP)", 14, "", "PatientGraphDataQ", "", "PatientGraphData", FALSE, 0, 0, 0, -1, -1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(664, "Immunization Record (PP)", 14, "", "ImmunizationQ", "", "ImmunizationRecord", FALSE, 0, 0, 0, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "", -1),
		ADD_REPORT(665, "Patient Wellness Guidelines (PP)", 14, "PatientWellnessGuidelines", "PatWellGuideQ", "", "PatWellGuideR", FALSE, 0, 0, -1, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		ADD_REPORT(666, "Patient Wellness Reference (PP)", 14, "PatientWellnessReference", "PatWellReferenceQ", "", "PatWellReferenceR", FALSE, 0, 0, -1, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "", -1),
		//ADD_REPORT(667, " by Modifier", 557, "", "ChargeWithApps", "FinancialP", "ChargesWithApps", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Charge Date", TRUE, "Modifier", "Number|Note", "20|80", "11SELECT CPTModifierT.Number, CPTModifierT.Note FROM CPTModifierT", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Charge Service Date;ChargeDate;;2;Payment Date;PayDate;;3;Charge Input Date;ChargeIDate;;4;Payment Input Date;PayIDate;;", -1),		
		ADD_REPORT(668, "Historical Demographic Information", 223, "", "AuditTrailQ", "PatientP", "HistoricalDemographics", FALSE, 0, 0, 0, -1, 1, 0, FALSE, "Date of Change", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;Date of Change;TDate;;", -1),
		ADD_REPORT(669, "Credit Card Processing Reconciliation", 362, "", "PaymentsByCCQ", "PaymentsP", "CreditCardProcessingReconcile", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", TRUE, "Credit Card", "Name", "-1", "11SELECT CardName AS Name FROM CreditCardNamesT ORDER BY CardName", "CreditCard", TRUE, "Account", "AccountID", "", TRUE, 3, "/*See reports.cpp for override*/", TRUE, 2, "1;Payment Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(670, "Time Scheduled Productivity By Scheduler Templates", 543, "", "TimeSchedProdTemplateQ", "ScheduleP", "TimeSchedProdTemplate", FALSE, 1, 0, 0, 0, 1, -1, FALSE, "Appt. Date", TRUE, "Scheduler Templates", "ID|Name", "0|-1", "12SELECT ID, Name FROM TemplateT ORDER BY Name", "TemplateID", TRUE, "Patients", "PatID", "", FALSE, 3, "SELECT -25, 'Exclude Non-Patient Appointments'", FALSE, 1, "1;Appt Date;Date;;", -1, -1, FALSE),
		ADD_REPORT(671, "Inventory Reconciliation: Adjustments Needed (PP)", 3, "", "InvRecAdjustmentsQ", "", "InvRecAdjustments", FALSE, 0, 0, 0, -1, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(672, "Room History", 50, "RoomHistory", "RoomHistoryQ", "ScheduleP", "RoomHistory", TRUE, 0, 0, -1, -1, 1,-1, FALSE, "Appt. Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, -1, "", FALSE, 2, "1;Appt. Date;Date;;", -1),
		ADD_REPORT(673, "Conversion Rate By Procedure (PP)", 273, "", "ConvRateByProcQ", "", "ConvByProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "", -1),
		ADD_REPORT(674, "Interest to Consult to Procedure By Referral Source", 540, "", "InsToCnsToProcQ", "MarketP", "InterestToConsToProcByRefSrc", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL ORDER BY Name", "ProcedureID", TRUE, "Ladder", "LadderTemplateID", "", TRUE, 3, "SELECT ID, Name FROM LadderTemplatesT ORDER BY Name", TRUE, 1, "1;First Interest Date;FirstInterestDate;;", -1),
		ADD_REPORT(675, "Interest to Consult to Procedure By Patient Coordinator", 540, "", "InsToCnsToProcQ", "MarketP", "InterestToConsToProcByPatCoord", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL ORDER BY Name", "ProcedureID", TRUE, "Ladder", "LadderTemplateID", "", TRUE, 3, "SELECT ID, Name FROM LadderTemplatesT ORDER BY Name", TRUE, 1, "1;First Interest Date;FirstInterestDate;;", -1),
		ADD_REPORT(676, "Conversion Rate By Patient Coordinator (PP)", 273, "", "ConvRateByPatCoordQ", "", "ConvByPatCoord", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "", -1),
		ADD_REPORT(677, "Conversion Rate By Date (PP)", 273, "", "ConvRateByDateQ", "", "ConvByDate", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(678, "Case History Cost / Profit Analysis By Procedure", 539, "", "CaseHistCostQ", "ASCP", "CaseHistoryCostAnalysisByProcedure", TRUE, 1, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Procedures", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT ORDER BY Name", "ProcID", TRUE, "Completed", "CompletedVal", "", TRUE, 3, "SELECT 0 AS ID, 'Incomplete' AS Name UNION SELECT 1 AS ID, 'Complete' AS Name", FALSE, 1, "1;Surgery Date;TDate;;", -1),
		ADD_REPORT(679, "Room Manager (PP)", 50, "RoomManager", "RoomManagerQ", "", "RoomManager", FALSE, 0, 0, -1, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(680, "Conversion Rate By Referral Source (PP)", 273, "", "ConvRateByRefSourQ", "", "ConvByRefSour", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(681, "Referral To Consult To Procedure (PP)", 273, "", "ReferralToConsToProcQ", "", "ReferralToConsToProc", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		ADD_REPORT(682, "Unapplied PrePayments", 149, "UnappliedPrePayments", "UnappliedPrePaymentsQ", "FinancialP", "UnappliedPrepayments", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1, -1, FALSE),
		ADD_REPORT(683, "Room Manager History By Type/Purpose", 50, "RoomManagerHistoryByPurpose", "RoomManagerHistoryByPurposeQ", "ScheduleP", "RoomManagerHistoryByPurpose", TRUE, 0, 0, -1, -1, 1,-1, FALSE, "Appt. Date", TRUE, "Purpose", "ID|Name", "0|-1", "12SELECT AptPurposeT.ID, AptPurposeT.Name FROM AptPurposeT ORDER BY AptPurposeT.Name", "PurposeID", TRUE, "Appointment Type", "AptTypeID", "", TRUE, 3, "SELECT ID, Name FROM AptTypeT ORDER BY Name", FALSE, 2, "1;Appt. Date;Date;;", -1, fboAppointment),
		ADD_REPORT(684, "Claim Submission Percentages By Responsibility", 342, "ClaimPercentagesByResp", "ClaimPercentagesByRespQ", "FinancialP", "ClaimPercentagesByResp", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Bill Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name FROM InsuranceCoT", "InsCoID", TRUE, "Responsibility", "RespTypeID", "", TRUE, 3, "SELECT ID, TypeName FROM RespTypeT", TRUE, 1, "1;Bill Date;TDate;;2;Bill Input Date;IDate;;3;Last Sent Date;LastSentDate;;", -1),
		ADD_REPORT(685, "Nexweb Patient Percentage", 548, "NexwebPatientPercentage", "NexwebPatientPercentage", "AdminP", "NexwebPatientPercentage", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 3, "", TRUE, 1, "1;First Contact Date;Date;;", 0),
		ADD_REPORT(686, "Patients By Media By Primary Insurance Financial Class", 24, "PatientsByMediaByInsuranceFinClass", "PatientsByMediaByInsuranceFinClass", "MarketP", "PatientsByMediaByInsuranceFinClass", FALSE, 2, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Referral Source", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;First Contact Date;Date;;2;First Appt Date;FirstApptDate;;", -1),
		ADD_REPORT(687, "Weekly Advertising Analysis", 657, "", "WeeklyAnalysisQ", "MarketP", "WeeklyAdvertisingAnalysis", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT ORDER BY Name", "ReferralID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;First Interest Date;FilterDate;;", -1),
		// (j.jones 2010-01-15 13:57) - PLID 36898 - this report was removed from Practice
		//ADD_REPORT(688, "Patient Encounter Percentages With Eligibility Confirmed", 342, "PatEncWithEligibilityConf", "PatEncWithEligibilityConf", "AdminP", "PatEncWithEligibilityConf", FALSE, 0, 0, -1, -1, -1, 0, FALSE, "Appt. Date", TRUE, "AptType", "ID|Name", "0|-1", "12SELECT ID, Name FROM AptTypeT ORDER BY Name", "AptTypeID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Appt. Date;Date;;", -1),
		ADD_REPORT(689, "EMN Charges and Diagnosis Codes By EMN", 256, "", "EMNServiceICDQByPatQ", "OtherP", "EMNServiceICDQByEMN", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "EMN Date", FALSE, "", "", "", "", "", TRUE, "Suppress Images", "", "", TRUE, 3, "SELECT 1, 'Suppress Images' ", FALSE, 15, "1;EMN Date;Date;;2;Input Date;IDate;;", -1, fboEMN, 0),
		// (j.gruber 2010-01-18 10:12) - PLID 36929 - removed report6
		//ADD_REPORT(690, "Patient EMN Percentages By EMR Data Code", 254, "PatientEMNPercentByDataCode", "PatientEMNPercentByDataCode", "AdminP", "PatientEMNPercentByDataCode", FALSE, 0, -1, -1, 0, -1, 0, FALSE, "EMN Date", TRUE, "EMRDataCodeID", "ID|Name|Description", "0|20|-1", "12SELECT ID, Code, Description FROM EMRDataCodesT WHERE Code IN ('REPORT_Transitions', 'REPORT_ClinicalSummary', 'REPORT_EdResources') ORDER BY Code", "EmrDataCodeID", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;EMN Date;Date;;", -1),
		// (j.jones 2010-01-15 13:57) - PLID 36898 - this report was removed from Practice
		//ADD_REPORT(691, "Patient Lab Result Percentages With Details", 568, "PatientLabResultPercentages", "PatientLabResultPercentages", "AdminP", "PatientLabResultPercentages", FALSE, 0, 0, -1, -1, -1, 0, FALSE, "Lab Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Lab Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(692, "Patient Allergies", 14, "", "AllergyQ", "PatientP", "PatientAllergies", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "First Contact Date", TRUE, "Allergy", "ID|Name", "0|-1", "12SELECT AllergyT.ID, EMRDataT.Data AS Name FROM AllergyT LEFT JOIN EMRDataT ON AllergyT.EMRDataID = EMRDataT.ID ORDER BY Data", "AllergyID", FALSE, "", "", "", TRUE, 0, "", TRUE, 3, "1;First Contact Date;Date;;2;Allergy Entered Date;AllergyEnteredDate;;", -1),
		ADD_REPORT(693, "Patient Graph By Age (PP)", 663, "", "PatientGraphByAgeQ", "", "PatientGraphByAge", FALSE, 0, 0, 0, -1, -1, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "", -1),
		ADD_REPORT(694, "Appointment Reminders", 50, "", "CellTrustApptRemindersQ", "ScheduleP", "CellTrustApptReminders", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "Reminder Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 2, "1;Reminder Date;Date;;", -1),
		ADD_REPORT(695, "Collection Percentages By Place Of Service", 241, "ColPerByPlaceOfService", "ColPerByPlaceOfServiceQ", "FinancialP", "ColPerByPlaceOfService", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Service Code", "ID|Code|Name", "0|33|-1", "12SELECT ServiceT.ID, CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code + ' ' + CPTCodeT.SubCode END AS Code, Name FROM ServiceT LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID", "CPTID", TRUE, "Place Of Service", "ServiceLocation", "", TRUE, 3, "SELECT ID, Name FROM LocationsT WHERE TypeID = 1 ORDER BY Name", FALSE, 5, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(696, "HL7 Integration Information by Client", 321, "", "HL7IntegInfoByClientQ", "OtherP", "HL7IntByClient", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "Reminder Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 2, "1;Start Date;StartDate;;", -1),
		ADD_REPORT(697, "HL7 Integration Information by Company", 321, "", "HL7IntegInfoByCompanyQ", "OtherP", "HL7IntByCompany", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "Reminder Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 2, "1;Start Date;StartDate;;", -1),
		// (b.spivey, November 22, 2011) - PLID 46072 - UPDATE (ID 717) "Inventory Barcodes Frames Labels" VERSION VALUE TOO! 
		ADD_REPORT(698, "Inventory Barcodes Avery 8167 Labels", 368, "", "InvAvery8167LabelsQ", "", "InvAvery8167LabelsEx", FALSE, 0, -1, -1, -1, 0, 0, FALSE, "", TRUE, "", "", "", "", "", TRUE, "", "", "", FALSE, 3, "", TRUE, 3, "", -1),
		ADD_REPORT(699, "Scheduled And Not Billed (by Billed Appointments)", 63, "SchedAndNotBilledApptR", "ScheduledAndNotBilledApptQ", "ScheduleP", "ScheduledAndNotBilledApptR", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Appt. Date", TRUE, "Type", "ID|Name", "0|-1", "12SELECT AptTypeT.ID, AptTypeT.Name FROM AptTypeT ORDER BY AptTypeT.Name", "SetID", TRUE, "Resource", "ResourceID", "", TRUE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item;", FALSE, 1, "1;Appointment Date;Date;;", -1, fboAppointment),
		ADD_REPORT(700, "Patient Messaging", 183, "PatientMessagingR", "PatientMessagingQ", "PatientP", "PatientMessaging", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Note Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 4, "1;Note Date;Date;;", -1),
		ADD_REPORT(701, "NexReminder Client Usage", 321, "", "NexReminderUsageQ", "AdminP", "NexReminderClientUsage", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Billing Cycle", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 1, "1;Billing Cycle;Billing Cycle;;", -1),
		ADD_REPORT(702, "Data Conversion", 321, "", "DataConversionQ", "OtherP", "DataConversion", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "Finished Date", FALSE, "", "", "", "", "", TRUE, "IssueCategory", "IssueCategoryID", "", TRUE, 3, "SELECT IssueCategoryT.ID AS ID, IssueCategoryT.Description AS SourceSystem FROM IssueCategoryT WHERE ParentID = 29 ORDER BY IssueCategoryT.Description", FALSE, 1, "1;Finished Date;FinishedDate;;2;Entered Date;EnteredDate;;", -1),
		ADD_REPORT(703, "Fully Adjusted Insurance Responsibilities", 120, "", "FullyAdjustedInsRespsQ", "FinancialP", "FullyAdjustedInsResps", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Date Range", TRUE, "Insurance Company", "InsCoID|Name", "0|-1", "12SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "RespTypeID", "RespTypeID", "", TRUE, 3, "SELECT ID, TypeName FROM RespTypeT ORDER BY Priority", TRUE, 1, "1;Charge Service Date;TDate;Service;2;Charge Input Date;IDate;Input;", -1, -1, TRUE),
		ADD_REPORT(704, "Glasses Order", 245, "", "GlassesOrderQ", "", "GlassesOrder", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 13, "", -1),
		ADD_REPORT(705, "Reward Point Redemption List", 594, "", "RewardPointRedemptionListQ", "AdminP", "RewardPointRedemptionList", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatID", TRUE, "Service Type", "TypeID", "", FALSE, 3, "SELECT 0 AS TypeID, 'Service Codes' AS Type UNION SELECT 1 AS TypeID, 'Inventory Items' AS Type", FALSE, 1, "", -1, -1, 0),
		// (r.wilson 7/10/2012) PLID 51423 - This report will no longer be used. It was replaced by report 737
		//ADD_REPORT(706, "Glasses Rx", 245, "", "GlassesRxQ", "", "GlassesRx", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 8, "", -1),
		ADD_REPORT(707, "Appointment To Charge Conversion Rate(PP)", 273, "", "ConvRateByDateQ", "", "ApptToChargeConvRateByDateR", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 2, "", -1),
		//(b.savon 2011-06-27) - PLID 44179 - Support Escalation Requests
		ADD_REPORT(708, "Support Incident Escalation Requests", 321, "", "SupportEscalationRequestsQ", "OtherP", "SupportEscalationRequest", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Requested Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Request Date;RequestDate;;", -1, 0, FALSE),
		// (j.dinatale 2012-05-11 09:58) - PLID 49078 - now optical orders
		// (j.dinatale 2012-05-23 14:02) - PLID 47400 - this is the old version of the cost/profit analysis report which was based on charge totals and the amount of payments on those charges. 
		//ADD_REPORT(709, "Optical Order Cost/Profit Analysis By Provider", 245, "", "GlassesOrderProfitAnalysisByProvQ", "OpticalP", "GlassesOrderProfitAnalysisByProv", TRUE, 1, -1, -1, -1, -1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Order Type", "OrderType", "", TRUE, 3, "SELECT 1 AS ID, 'Glasses Order' AS Name UNION SELECT 3 AS ID, 'Contact Lens Order' AS Name", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		//(c.copits 2011-07-12) PLID 17459 - Have a report where an administrator can view the deleted pracyakker messages
		ADD_REPORT(710, "PracYakker Messages (Deleted) By Sender", 445, "", "PracYaksDeletedBySenderQ", "AdminP", "PracYaksDeletedBySender", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Sent On", TRUE, "UserNames", "PersonID|UserName", "0|-1", "12SELECT PersonID, UserName FROM UsersT WHERE UsersT.PersonID > 0 ORDER BY UserName", "UserID", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;Sent On;Date;;", 1),
		ADD_REPORT(711, "Charges Fully Adjusted By E-Remittance", 120, "", "ChargesFullyAdjustedByERemitQ", "FinancialP", "ChargesFullyAdjustedByERemit", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "Date Range", TRUE, "Insurance Company", "InsCoID|Name", "0|-1", "12SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;EOB Service Date;TDate;Service;2;EOB Input Date;IDate;Input;", -1, -1, TRUE),
		//(b.savon 2011-07-19) - PLID 44523 - Escalation Requests - Support ratings of developers
		ADD_REPORT(712, "Support Rating Developers on Escalation Requests", 321, "", "SupportRatingDeveloperEscalationRequestsQ", "OtherP", "SupportRatingDevelopersEscalationRequests", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Requested Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Request Date;RequestDate;;", -1, 0, FALSE),
		// (j.dinatale 2011-07-11 12:20) - PLID 44807 - Financial Corrections report
		ADD_REPORT(713, "Financial Corrections", 156, "", "FinancialCorrectionsQ", "FinancialP", "FinancialCorrections", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Line Item Type", "OrigLineItemType", "", TRUE, 3, "SELECT 1 AS ID, 'Payment' AS TypeName UNION SELECT 2, 'Adjustment' UNION SELECT 3, 'Refund' UNION SELECT 10, 'Charge'", TRUE, 1, "1;Input Date;IDate;Input;2;Service Date;TDate;Service;", -1),
		ADD_REPORT(714, "Affiliate Physicians", 153, "", "AffiliatePhysiciansQ", "ChargesP", "AffiliatePhysicians", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Affiliate Physicians", "PersonID|Name", "0|-1", "12SELECT PersonID, [Last] + ', ' + [First] + ' ' + [Middle] + ' ' + [Title] AS Name FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID WHERE ReferringPhysT.AffiliatePhysician = 1 ORDER BY Name", "AffiliatePhysID", TRUE, "Affiliate Status", "StatusID", "", TRUE, 3, "SELECT ID, Name FROM BillAffiliateStatusT", TRUE, 2, "1;Affiliate Status Date;AffiliatePhysStatusDate;;2;Bill Date;BillDate;;3;Bill Input Date;BillIDate;;", 1),
		ADD_REPORT(715, "Aged Receivables by Category", 151, "ARByCat", "AgedAgerQ", "FinancialP", "ARByCat", TRUE, 1, -1, -1, -1, 1, 1, TRUE, "Transaction Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CategoryID", TRUE, "", "TDate", "", TRUE, 5, "", FALSE, 1, "1;Bill Date;TDate;;2;Input Date;IDate;;", 0),
		ADD_REPORT(716, "Affiliate Physicians Payments", 714, "", "AffiliatePhysiciansQ", "FinancialP", "AffiliatePhysPays", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", TRUE, "Affiliate Physicians", "PersonID|Name", "0|-1", "12SELECT PersonID, [Last] + ', ' + [First] + ' ' + [Middle] + ' ' + [Title] AS Name FROM PersonT INNER JOIN ReferringPhysT ON PersonT.ID = ReferringPhysT.PersonID WHERE ReferringPhysT.AffiliatePhysician = 1 ORDER BY Name", "AffiliatePhysID", TRUE, "Affiliate Status", "StatusID", "", TRUE, 3, "SELECT ID, Name FROM BillAffiliateStatusT", TRUE, 2, "1;Payment Date;PayDate;;2;Payment Input Date;PayIDate;;3;Apply Date;ApplyDate;;4;Charge Date;ChargeDate;;6;Charge Input Date;ChargeIDate;;6;Bill Date;BillDate;;", 1),
		// (b.spivey, October 21, 2011) - PLID 46072 - A report that is the "Frames version" of the existing label report in the order tab. 
		// (b.spivey, November 22, 2011) - PLID 46072 - UPDATE (ID 698) "Inventory Barcodes Avery 8167 Labels" VERSION VALUE TOO! 
		ADD_REPORT(717, "Inventory Barcodes Frames Labels", 368, "", "InvAvery8167LabelsQ", "", "InvFramesLabelsEx", FALSE, 0, -1, -1, -1, 0, 0, FALSE, "", TRUE, "", "", "", "", "", TRUE, "", "", "", FALSE, 3, "", TRUE, 2, "", -1),
		ADD_REPORT(718, "Meaningful Use Dialog (PP)", 254, "", "AllMeaningfulUse", "", "MeaningfulUseDialog", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(719, "Financial Activity - Daily For Logged On User", 153, "DailyFinancialActivity", "DailyFinancialQ", "FinancialP", "DailyFinancialForLoggedUser", FALSE, 1, -1, -1, -1, 1, 1, FALSE, "Date Range", FALSE, "", "", "", "", "InputName", TRUE, "Amount", "SUPPRESS", "", TRUE, 3, "SELECT 1, 'Suppress patients with no financial information'", TRUE, 5, "1;Bill Date/Payment Date;BDate;;2;Service Date/Payment Date;TDate;;3;Input Date;IDate;;", -1, -1, FALSE),
		ADD_REPORT(720, "Meaningful Use Measure (PP)", 254, "", "MeaningfulUseMeasure", "", "MeaningfulUseMeasure", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "First Contact Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 2, "1;First Contact Date;Date;;", -1),
		ADD_REPORT(721, "Inventory Sales Profit - Ins. Vs. Self Pay", 426, "", "InvProfitQ", "FinancialP", "InvSalesProfitInsVsSelfPay", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Item", "ID|Name", "0|-1", "12SELECT ServiceT.ID, ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID ORDER BY ServiceT.Name", "ServiceID", TRUE, "Insurance Company", "InsCoID", "", TRUE, 3, "SELECT -1 AS PersonID, ' <Self Pay> ' AS Name UNION SELECT PersonID, Name FROM InsuranceCoT ORDER BY Name", TRUE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		ADD_REPORT(722, "Pays/Adjs By Service Code/Inv Item By Ins Co", 479, "PaymentsByInvByInsCoQ", "PaymentsByInvByInsCoQ", "PaymentsP", "PaymentsByInvByInsCo", TRUE, 0, -1, -1,/*Patient*/  -1, 1, -1,/*15. bOneDate*/ FALSE, "Payment Date", TRUE, "", "ID|Code|Name", "0|-1|-1", "12SELECT ServiceT.ID,NULL AS Code,ServiceT.Name FROM ServiceT INNER JOIN ProductT ON ServiceT.ID = ProductT.ID UNION SELECT ServiceT.ID, Code,ServiceT.Name from ServiceT INNER JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID", "ServiceID", TRUE, "Payment Type", "PaymentTypeID", "", TRUE, 3, "SELECT 1,'Payments' Union Select 2,'Adjustments';", TRUE, 2, "1;Pay/Adj Date;TDate;;2;Input Date;IDate;;3;Service Date;ServiceDate;;4;Bill Date;BillDate;;", -1, -1, FALSE),
		ADD_REPORT(723, "E-Eligibility Requests", 322, "", "EEligibilityRequestQ", "FinancialP", "EEligibilityRequests", TRUE, 0, -1, 0, -1, 1, -1, FALSE, "Request Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Sent Date;LastSentDate;;2;Created Date;CreatedDate;;3;Received Date;DateReceived;;", -1),
		// (j.luckoski 2012/03/28) - PLID 48809 - Adding report to see clients with remaining training hours > 0 
		ADD_REPORT(724, "Clients With Training Hours Remaining", 321, "", "ClientsWithRemainingHoursQ", "OtherP", "ClientsWithRemainingHours", TRUE, 0, 0, 0, -1, 1, 0, FALSE, "Date", FALSE, "", "", "", "", "", FALSE, "", "", "", TRUE, 0, "", FALSE, 1, "1;Input Date;LastPurchaseDate;;", -1 - 1, FALSE),
		ADD_REPORT(725, "Media Cost Analysis By Top Level Referral", 190, "", "MediaCostAnalysisByTopLevelReferralQ", "MarketP", "MediaCostAnalysisByTopLevelReferral", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT ID, Name FROM ProcedureT WHERE MasterProcedureID IS NULL ORDER BY Name", "ProcID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;First Interest Date;Date;;", -1),
		ADD_REPORT(726, "Frame Sold - By Manufacturer", 245, "", "OpticaFramesSoldByManufacturerQ", "OpticalP", "OpticaFramesSoldByManufacturer", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Manufacturer Name", "Manufacturer|Manufacturer Name", "0|-1", "12Select  distinct  ISNULL(ManufacturerName,'<None>')  AS Manufacturer , ISNULL(ManufacturerName,' <None>')  AS ManufacturerName from FramesDataT", "ManufacturerName", TRUE, "Optician", "OpticianID", "", TRUE, 3, "SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)", TRUE, 2, "1;Glasses Order Date;OrderDate;;", -1),
		// (j.fouts 2012-05-16 11:22) - PLID 50211 - Added new internal reports for inventory managment
		ADD_REPORT(727, "Internal Inventory Management - By Person", 267, "", "InternalInvMgmtByPersonQ", "InventoryP", "InternalInventoryManagementByPerson", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Last Request Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Out Since;OutSince;;2;Due Back By;DueBackBy;;", -1, 0, FALSE),
		ADD_REPORT(728, "Internal Inventory Management - By Category", 267, "", "InternalInvMgmtByCategoryQ", "InventoryP", "InternalInventoryManagementByCategory", FALSE, 0, 0, 0, 0, 1, 0, FALSE, "Last Request Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Out Since;OutSince;;2;Due Back By;DueBackBy;;", -1, 0, FALSE),
		ADD_REPORT(729, "Contact Lens Order", 245, "", "ContactLensOrderQ", "", "ContactLensOrder", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 4, "", -1),
		//ADD_REPORT(730, "Optical Orders - By Optician", 245, "OpticalOrdersByOptician", "OpticalOrdersByOpticianQ", "OpticalP", "OpticalOrdersByOptician", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Order Date", TRUE, "Optician", "PersonID|Optician Name", "0|-1", "12SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)" , "OpticianID", TRUE,  "Order Type", "GlassesOrderType","", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;",-1),
		//ADD_REPORT(731, "Optical Orders - By Supplier-Lab", 245, "OpticalOrdersSaleBySupplier", "OpticalOrdersSaleBySupplierQ", "OpticalP", "OpticalOrdersSaleBySupplier", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Order Date", TRUE, "Supplier-Lab", "ID|Supplier-Lab Name", "0|-1", "12Select  -1 AS ID, ' <None>' AS Company UNION Select  PersonT.ID,  PersonT.Company FROM SupplierT INNER JOIN PersonT ON SupplierT.PersonID = PersonT.ID WHERE SupplierT.PersonID IN (SELECT GlassesSupplierCatalogDesignsT.SupplierID  FROM GlassesSupplierCatalogDesignsT  )UNION Select PersonT.ID, PersonT.Company FROM (SELECT DISTINCT SupplierID FROM MultiSupplierT INNER JOIN (SELECT ID FROM ProductT	WHERE IsContactLens = 1) ProdSubQ ON MultiSupplierT.ProductID = ProdSubQ.ID) SupplierSubQ LEFT JOIN PersonT ON SupplierSubQ.SupplierID = PersonT.ID" , "SupplierID", TRUE,  "Order Type", "GlassesOrderType","", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;",-1),
		//ADD_REPORT(732, "Optical Orders - By Status", 245, "OpticalOrdersByStatus", "OpticalOrdersByStatusQ", "OpticalP", "OpticalOrdersByStatus", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Order Date", TRUE, "Order Status", "ID|Status", "0|-1", "12Select ID, OrderStatusName from glassesorderstatusT " , "GlassesOrderStatusID", TRUE,  "Order Type", "GlassesOrderType","", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;",-1),
		//ADD_REPORT(733, "Products Sold off the shelf", 245, "ProductsSoldofftheshelf", "ProductsSoldofftheshelfQ", "OpticalP", "ProductsSoldofftheshelf", TRUE, 0, -1, -1, -1, -1, 1, FALSE, "Order Date", TRUE,  "Optician", "PersonID|Optician Name", "0|-1", "12SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)" , "OpticianID",  TRUE,  "Order Type", "GlassesOrderType","", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;",-1),				
		ADD_REPORT(730, "Optical Orders - By Optician", 245, "OpticalOrdersByOptician", "OpticalOrdersByOpticianQ", "OpticalP", "OpticalOrdersByOptician", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Optician", "PersonID|Optician Name", "0|-1", "12SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)", "OpticianID", TRUE, "Order Type", "GlassesOrderTypeID", "", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		ADD_REPORT(731, "Optical Orders - By Supplier/Lab", 245, "OpticalOrdersSaleBySupplier", "OpticalOrdersSaleBySupplierQ", "OpticalP", "OpticalOrdersSaleBySupplier", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Supplier-Lab", "ID|Supplier/Lab Name", "0|-1", "12Select  -1 AS ID, ' <None>' AS Company UNION Select  PersonT.ID,  PersonT.Company FROM SupplierT INNER JOIN PersonT ON SupplierT.PersonID = PersonT.ID WHERE SupplierT.PersonID IN (SELECT GlassesSupplierCatalogDesignsT.SupplierID  FROM GlassesSupplierCatalogDesignsT  )UNION Select PersonT.ID, PersonT.Company FROM (SELECT DISTINCT SupplierID FROM MultiSupplierT INNER JOIN (SELECT ID FROM ProductT	WHERE IsContactLens = 1) ProdSubQ ON MultiSupplierT.ProductID = ProdSubQ.ID) SupplierSubQ LEFT JOIN PersonT ON SupplierSubQ.SupplierID = PersonT.ID", "SupplierID", TRUE, "Order Type", "GlassesOrderTypeID", "", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		ADD_REPORT(732, "Optical Orders - By Status", 245, "OpticalOrdersByStatus", "OpticalOrdersByStatusQ", "OpticalP", "OpticalOrdersByStatus", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Order Status", "ID|Status", "0|-1", "12Select ID, OrderStatusName from glassesorderstatusT ", "GlassesOrderStatusID", TRUE, "Order Type", "GlassesOrderTypeID", "", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		ADD_REPORT(733, "Products Sold Off The Shelf", 245, "ProductsSoldofftheshelf", "ProductsSoldofftheshelfQ", "OpticalP", "ProductsSoldofftheshelf", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Optician", "PersonID|Optician Name", "0|-1", "12SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)", "OpticianID", TRUE, "Order Type", "GlassesOrderTypeID", "", TRUE, 3, "Select 1 AS GlassesOrderType, 'Glasses Order' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens Order' AS GlassesOrderTypeName ", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		ADD_REPORT(734, "Contact Lens Sold - By Manufacturer", 245, "ContactLenssoldByManufacturer", "ContactLenssoldByManufacturerQ", "OpticalP", "ContactLenssoldByManufacturer", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Order Date", TRUE, "Manufacturer", "ID|Manufacturer", "0|-1", "12Select -1 AS ID,' <None>' AS Name  FROM ContactLensManufacturersT UNION Select ID,Name  FROM ContactLensManufacturersT ", "ContactLensManufacturerID", TRUE, "Optician", "OpticianID", "", TRUE, 3, "SELECT -1 AS PersonID,'  < None>' AS OpticianName FROM  ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1) UNION SELECT ProvidersT.PersonID, (ISNULL(PersonT.Last, '') + ', ' + ISNULL(PersonT.First, '') + ' ' + ISNULL(PersonT.Middle, '')) AS OpticianName FROM ProvidersT INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID WHERE (ProvidersT.Optician = 1)", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		// (j.dinatale 2012-05-23 14:18) - PLID 47400 - new optical order cost profit analysis report
		ADD_REPORT(735, "Optical Order Cost/Profit Analysis By Provider", 245, "", "GlassesOrderProfitAnalysisQ", "OpticalP", "GlassesOrderProfitAnalysis", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Order Type", "OrderType", "", TRUE, 3, "SELECT 1 AS ID, 'Glasses Order' AS Name UNION SELECT 3 AS ID, 'Contact Lens Order' AS Name", TRUE, 1, "1;Order Date;OrderDate;;", -1),
		ADD_REPORT(736, "Optical Orders Capture Rate", 245, "OpticalOrdersCaptureRate", "OpticalOrdersCaptureRateQ", "OpticalP", "OpticalOrdersCaptureRate", TRUE, 0, -1, -1, -1, 1, 0, FALSE, "", FALSE, "", "", "", "", "", TRUE, "Order Type", "GlassesOrderTypeID", "", TRUE, 3, "Select 1 AS GlassesOrderType, 'Frame' AS GlassesOrderTypeName  UNION Select 3 AS GlassesOrderType, 'Contact Lens' AS GlassesOrderTypeName ", TRUE, 2, "1;Emn Date;EmnDate;;", -1),
		ADD_REPORT(737, "Optical Prescription", 245, "", "OpticalRxQ", "", "OpticalRx", FALSE, 0, 0, 0, 0, 0, 0, FALSE, "", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", TRUE, 10, "", -1),
		ADD_REPORT(738, "Weekly Advertising Analysis By Top Level Referral", 657, "", "WeeklyAnalysisByTopLevelReferralQ", "MarketP", "WeeklyAdvertisingAnalysisByTopLevelReferral", FALSE, 0, 0, -1, 0, 1, 1, FALSE, "First Interest Date", TRUE, "Procedure", "ID|Name", "0|-1", "12SELECT PersonID, Name FROM ReferralSourceT WHERE Parent = -1 ORDER BY Name", "TopLevelReferralID", TRUE, "ProcedureName", "ProcID", "", FALSE, 3, "SELECT ID, Name FROM ProcedureT Name", FALSE, 1, "1;First Interest Date;FilterDate;;", -1),
		ADD_REPORT(739, "Revenue and Volume By Satellite Office Referrals", 510, "RevenueVolumeBySatOfficeReferral", "RevenueVolumeBySatOfficeReferralQ", "MarketP", "RevenueVolumeBySatOfficeReferral", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Charge Date of Service", TRUE, "", "ID|Physician", "0|-1", "12SELECT ID, FullName AS Physician FROM ReferringPhysT INNER JOIN PersonT ON PersonT.ID = ReferringPhysT.PersonID WHERE AffiliatePhysician = 1", "DefaultReferringPhyID", FALSE, "", "", "", TRUE, 0, "", TRUE, 1, "1;Charge Date of Service;ChargeTDate;;", -1),
		ADD_REPORT(740, "Revenue and Volume By Satellite Office Visit", 510, "RevenueVolumeBySatOfficeVisit", "RevenueVolumeBySatOfficeVisitQ", "MarketP", "RevenueVolumeBySatOfficeVisit", TRUE, 0, 0, -1, -1, 1, 0, FALSE, "Charge Date of Service", TRUE, "", "ID|Initial Appointment Type", "0|-1", "12SELECT -1 AS ID, '<None>' AS AppointmentType FROM AptTypeT UNION SELECT ID, NAME AS AppointmentType FROM AptTypeT", "TypeID", TRUE, "Appointment Resource", "ResID", "", TRUE, 3, "SELECT ID AS ResID, Item AS ResourceName FROM ResourceT", TRUE, 1, "1;Charge Date of Service;ChargeTDate;;", -1),
		// (a.levy 2012-09-06 13:11) - PLID 52490 - new internal Sales Productivity Report
		ADD_REPORT(741, "Nextech Sales Productivity Report", 166, "", "SalesPRQ", "AdminP", "SalesProductivityReportR", False, 2, 0, 0, -1, 1, 0, FALSE, "Sales Event Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Date Filter;CreateDate;;", -1),
		// (j.deskurakis 2012-09-28) - PLID 29105 - Paid Time Off (PTO) report
		ADD_REPORT(742, "Paid Time Off By Department", 290, "", "PTObyDepartmentQ", "OthrContactP", "PTObyDepartment", TRUE, 0, 0, 0, 0, 0, 0, FALSE, "Employment Range", TRUE, "", "ID|year", "0|100", "12select distinct year as ID, year from AttendanceAllowanceHistoryT where year not like '8002'", "year", TRUE, "Employee", "PatID", "", TRUE, 3, "SELECT UsersT.PersonID AS ID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM UsersT INNER JOIN PersonT ON UsersT.PersonID = PersonT.ID AND UsersT.PersonID > 0 and UserName like '%%.%%'", FALSE, 1, "", -1),
		//(r.wilson 10/24/2012) plid 51770 - Prescriptions by Provider 		
		// (j.fouts 2013-02-04 17:35) - PLID 53025 - Altered PrescriptionQueueStatusT structure		
		ADD_REPORT(743, "Prescriptions by Provider", 399, "PrescriptionsByProviderQ", "PrescriptionsByProviderQ", "PatientP", "PrescriptionsByProvider", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ FALSE, "", "", "", "", "", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT InternalID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),		//(r.wilson 10/29/2012) plid 51771 - Prescriptions by User
		ADD_REPORT(744, "Prescriptions by User", 743, "PrescriptionsByUserQ", "PrescriptionsByUserQ", "PatientP", "PrescriptionsByUser", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ TRUE, /*18*/ "", /*19*/ "ID|UserName", /*20*/ "0|-1",/*21*/ "12SELECT ID, Username AS UserName FROM UsersT INNER JOIN PersonT ON PersonT.ID = UsersT.PersonID", "UserEnteredByID", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT ID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),
		//(r.wilson 10/30/2012) plid 53462 - Prescriptions by Diagnosis Code
		ADD_REPORT(745, "Prescriptions by Diagnosis Code", 743, "PrescriptionsByDiagCodeQ", "PrescriptionsByDiagCodeQ", "PatientP", "PrescriptionsByDiagCode", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ TRUE, /*18*/ "", /*19*/ "ID|CodeNumber|CodeDesc", /*20*/ "0|20|-1",/*21*/ "12SELECT ID, CodeNumber, CodeDesc FROM DiagCodes", "DiagCodeID", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT InternalID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),
		//(r.wilson 10/30/2012) plid 53463- Prescriptions by Patient
		ADD_REPORT(746, "Prescriptions by Patient", 743, "PrescriptionsByPatientQ", "PrescriptionsByPatientQ", "PatientP", "PrescriptionsByPatient", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ FALSE, /*18*/ "", /*19*/ "", /*20*/ "",/*21*/ "", "", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT InternalID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),
		//(r.wilson 10/31/2012) plid 53464- Prescriptions by Transmission Type
		ADD_REPORT(747, "Prescriptions by Transmission Type", 743, "PrescriptionsByTransmissionTypeQ", "PrescriptionsByTransmissionTypeQ", "PatientP", "PrescriptionsByTransmissionType", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ TRUE, /*18*/ "", /*19*/ "RouteID|Route", /*20*/ "0|-1",/*21*/ "12SELECT RouteID, [Route] FROM( SELECT  -2 AS RouteID,'<Pending Prescriptions>' AS [Route] UNION SELECT  0 AS RouteID,'Not Transmitted' AS [Route] UNION SELECT  1 AS RouteID,'Print' AS [Route] UNION SELECT  2 AS RouteID,'Fax' AS [Route] UNION SELECT  3 AS RouteID,'Electronic Retail' AS [Route] UNION SELECT  4 AS RouteID,'Electronic MailOrder' AS [Route] UNION SELECT  5 AS RouteID,'Test' AS [Route])AS RouteQ ", "RouteID", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT InternalID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),
		//(r.wilson 11/13/2012) plid 53715- Prescriptions By Insurance Company
		ADD_REPORT(748, "Prescriptions by Insurance Company", 743, "PrescriptionsByInsuranceCoQ", "PrescriptionsByInsuranceCoQ", "PatientP", "PrescriptionsByInsuranceCo", TRUE, 0, /*Provider*/ -1, /*Patient*/ -1, /*Location*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ TRUE, /*18*/ "", /*19*/ "RouteID|Route", /*20*/ "0|-1",/*21*/ "12SELECT -2 AS InsuranceCoID,'<No Insurance Company>' AS Name UNION SELECT PersonID AS InsuranceCoID, Name FROM InsuranceCoT", "InsuranceCoID", /*bExtended*/ TRUE, /*24*/"Prescription Status",/*25*/ "StatusID",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "SELECT InternalID, Status FROM PrescriptionQueueStatusT", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ TRUE),
		//(r.wilson 11/16/2012) plid 53804- Prescription Statistics
		ADD_REPORT(749, "Prescription Statistics", 743, "PrescriptionStatisticsQ", "PrescriptionStatisticsQ", "PatientP", "PrescriptionStatistics", FALSE, 0, /*Provider*/ -1, /*Location*/ -1, /*Patient*/ -1, /*Date range*/ 1, 0, FALSE, "Prescription Date", /*bExternal*/ FALSE, /*18*/ "", /*19*/ "", /*20*/ "",/*21*/ "", "", /*bExtended*/ FALSE, /*24*/"",/*25*/ "",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "", /*30*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ FALSE),
		//(r.wilson 1/25/2013) pl 54856 - DEA Schedule Report
		ADD_REPORT(750, "Prescriptions by DEA Schedule", 743, "PrescriptionsByDEAScheduleQ", "PrescriptionsByDEAScheduleQ", "PatientP", "PrescriptionsByDEASchedule", TRUE, /*9*/ 0, /*Provider*/ -1, /*Location*/ -1, /*Patient*/ -1, /*Date range*/ 1, /*14*/ 0, FALSE, "Prescription Date", /*bExternal*/ TRUE, /*18*/ "", /*19*/ "SchInt|Sch", /*20*/ "1|-1",/*21*/ "11SELECT -1 AS SchInt, 'Non-scheduled' AS Sch UNION SELECT 1, 'I' UNION SELECT 2 AS SchInt, 'II' AS Sch UNION SELECT 3 AS SchInt, 'III' AS Sch UNION SELECT 4 AS SchInt, 'IV' AS Sch UNION SELECT 5 AS SchInt, 'V' AS Sch", "Sch", /*bExtended*/ FALSE, /*24*/"",/*25*/ "",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "", /*31*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ FALSE),
		//(r.wilson 1/28/2013) pl 54896 - Duplicate Medications Report
		ADD_REPORT(751, "Duplicate Medications", 743, "DuplicateMedicationsQ", "DuplicateMedicationsQ", "PatientP", "DuplicateMedications", TRUE, /*9*/ 0, /*Provider*/ -1, /*Location*/ -1, /*Patient*/ -1, /*Date range*/ 1, /*14*/ 0, FALSE, "Prescription Date", /*bExternal*/ FALSE, /*18*/ "", /*19*/ "", /*20*/ "",/*21*/ "", "", /*bExtended*/ FALSE, /*24*/"",/*25*/ "",/*26*/ "", /*27*/ FALSE, /*28*/ 3, /*29*/ "", /*30*/ TRUE, /*Version*/ 1, /*32*/ "1;Prescription Date;PrescriptionDate;;", /*33*/ -1, /*34*/ -1, /*35*/ FALSE),
		ADD_REPORT(752, "Unbatched Charges", 572, "Unbatched Charges", "UnbatchedChargesQ", "ChargesP", "UnbatchedCharges", TRUE, 0, 0, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Insurance Company", "InsCoID|Name", "0|-1", "12SELECT PersonID AS InsCoID, Name FROM InsuranceCoT ORDER BY Name", "InsCoID", TRUE, "HasBeenSent", "HasBeenSent", "", TRUE, 3, "SELECT 1, 'Only Show Unsent Claim Charges' UNION SELECT 2, 'Only Show Sent Claim Charges'", FALSE, 2, "1;Service Date;TDate;;2;Input Date;IDate;;", -1, -1, FALSE),
		// (a.wilson 2014-08-01 15:57) - PLID 63107 - Charges By Test Code
		ADD_REPORT(753, "Charges By Test Code", 125, "ChargesByTestCode", "ChargesByTestCodeQ", "ChargesP", "ChargesByTestCode", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Lab Test Codes", "ID|Code", "0|-1", "12SELECT ID, Code FROM BillLabTestCodesT ORDER BY Code", "LabTestCodeID", FALSE, "Lab Test Codes", "", "", TRUE, 0, "", TRUE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		// (a.wilson 2014-08-05 09:39) - PLID 63112 - Payments By Test Code
		ADD_REPORT(754, "Payments By Test Code", 244, "PaymentsByTestCode", "PaymentsByTestCodeQ", "PaymentsP", "PaymentsByTestCode", TRUE, 0, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Lab Test Codes", "ID|Code", "0|-1", "12SELECT ID, Code FROM BillLabTestCodesT ORDER BY Code", "LabTestCodeID", FALSE, "Lab Test Codes", "", "", TRUE, 0, "", TRUE, 1, "1;Service Date;TDate;;2;Input Date;IDate;;", -1),
		// (s.tullis 2014-07-10 13:47) - PLID 62560 - Vision Payment Report 
		ADD_REPORT(755, "Batch Vision Payments", 322, "", "BatchPaymentsQ", "PaymentsP", "BatchVisionPayments", TRUE, 0, 0, -1, 0, 1, 1, FALSE,/*16*/ "Vision Payment Date", /*17*/TRUE,/*18*/ "", /*19*/"ID|Name",/*20*/ "0|-1", /*21*/"12SELECT PersonID AS ID, Name AS Name FROM InsuranceCoT ORDER BY Name", /*22*/ "InsuranceID",/*23*/ FALSE,/*24*/ "",/*25*/ "",/*26*/ "",/*27*/ FALSE,/*28*/ 0, /*29*/"",/*30*/ FALSE,/*31*/ 2, /*32*/"1;Payment Date;TDate;Service;2;Input Date;IDate;Input;",/*16*/ -1),
		// (s.tullis 2014-07-14 13:34) - PLID 62559 - Batch Medical Payments
		ADD_REPORT(756, "Batch Medical Payments", 322, "", "BatchPaymentsQ", "PaymentsP", "BatchMedicalPayments", TRUE, 0, 0, -1, 0, 1, 1, FALSE,/*16*/ "Medical Payment Date", /*17*/TRUE,/*18*/ "", /*19*/"ID|Name",/*20*/ "0|-1", /*21*/"12SELECT PersonID AS ID, Name AS Name FROM InsuranceCoT ORDER BY Name", /*22*/ "InsuranceID",/*23*/ FALSE,/*24*/ "",/*25*/ "",/*26*/ "",/*27*/ FALSE,/*28*/ 0, /*29*/"",/*30*/ FALSE,/*31*/ 2, /*32*/"1;Payment Date;TDate;Service;2;Input Date;IDate;Input;",/*16*/ -1),
		ADD_REPORT(757 /*1*/, "Lockbox Payments" /*2*/, 322 /*3*/, "Lockbox Payments" /*4*/, "LockboxQ" /*5*/, "PaymentsP" /*6*/, "LockboxPayments" /*7*/, FALSE /*8*/, 0 /*9*/, 0 /*10*/, -1 /*11*/, 0 /*12*/, 1 /*13*/, 1 /*14*/, FALSE /*15*/, "Batch Date" /*16*/, FALSE /*17*/, "" /*18*/, "" /*19*/, "" /*20*/, "" /*21*/, "" /*22*/, FALSE /*23*/, "" /*24*/, "" /*25*/, "" /*26*/, FALSE /*27*/, 0 /*28*/, "" /*29*/, TRUE /*30*/, 1 /*31*/, "1;Batch Date;TDate;;" /*32*/, FALSE /*33*/),
		ADD_REPORT(758, "Scheduling Mix Rules By Resource", 50, "SchedulingMixRulesByResource", "SchedulingMixRulesByResourceQ", "ScheduleP", "SchedulingMixRulesByResource", FALSE, 1, 0, -1, 0, 1, 0, FALSE, "Appt. Date", TRUE, "Rule", "ID|Name", "0|-1", "12SELECT ScheduleMixRulesT.ID, ScheduleMixRulesT.Name FROM ScheduleMixRulesT ORDER BY ScheduleMixRulesT.Name", "RuleID", TRUE, "Rule", "ResourceID", "", FALSE, 3, "SELECT ID, Item FROM ResourceT ORDER BY Item", TRUE, 1, "1;Appt. Date;Date;;", -1),
		// (s.tullis 2015-06-15 15:55) - PLID 66293 
		ADD_REPORT(759/*1*/, /*2*/"Payments By Billed Service Category",/*3*/ 141, /*4*/"PaymentsByBilledCPTCategory",/*5*/ "PaymentsByBilledCPTCategoryQ",/*6*/ "PaymentsP", /*7*/"PaymentsByBilledCPTCategory", /*8*/TRUE,/*9*/ 1,/*10*/ -1,/*11*/ -1,/*12*/ -1,/*13*/ 1, /*14*/1,/*15*/ FALSE,/*16*/ "Payment Date",/*17*/ TRUE, /*18*/"Categories", /*19*/"ID|Name", "0|-1", "12SELECT CategoriesT.ID, CategoriesT.Name FROM CategoriesT ORDER BY CategoriesT.Name",/*20*/ "CatFilterID",/*21*/ FALSE, /*22*/"Categories",/*23*/ "",/*24*/ "",/*25*/ TRUE,/*26*/ 0,/*27*/ "",/*28*/ FALSE,/*29*/ 1,/*30*/ "1;Payment Date;TDate;;2;Input Date;IDate;;3;Apply Date;ApplyDate;;4;Charge Service Date;ChargeServiceDate;;5;Charge Input Date;ChargeInputDate;;6;Bill Date;BillDate;;7;Bill Input Date;BillInputDate;;", -1),
		// (s.tullis 2015-06-15 15:55) - PLID 66292
		ADD_REPORT(760, "Charges By Billed Category", 125, "ChargesByBilledCategory", "ChargesByBilledCategoryQ", "ChargesP", "ChargesByBilledCategory", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Service Date", TRUE, "Categories", "ID|Name", "0|-1", "12SELECT ID, Name FROM CategoriesT ORDER BY Name", "CatFilterID", FALSE, "Categories", "", "", TRUE, 0, "", TRUE, 1, "1;Service Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		ADD_REPORT(761, "Integrated Credit Card Payments/Refunds", 362, "", "IntegratedCCPayRefQ", "PaymentsP", "IntegratedCreditCardPaymentsRefunds", TRUE, 1, -1, -1, -1, 1, 1, FALSE, "Payment/Refund Date", TRUE, "Credit Card", "Name", "-1", "11SELECT CardName AS Name FROM CreditCardNamesT ORDER BY CardName", "CreditCard", TRUE, "Username", "InputName", "", TRUE, 3, "SELECT QUOTENAME(Username, '''') AS ID, Username FROM UsersT WHERE PersonID > 0 ORDER BY Username;", TRUE, 1, "1;Payment/Refund Date;TDate;Service;2;Input Date;IDate;Input;", -1),
		// (r.gonet 2015-11-09) - PLID 67466 - Added
		ADD_REPORT(762, "Capitation Distribution", 322, "CapitationDistribution", "CapitationBatchPaymentsQ", "PaymentsP", "CapitationDistribution", TRUE, 0, -1, -1, 0, 1, 1, FALSE, "Batch Payment Date", FALSE, "", "", "", "", "", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Batch Payment Date;TDate;Service;2;Batch Payment Input Date;IDate;Input;", -1),
		// (s.tullis 2015-11-10 11:31) - PLID 67467 - Capitation Batch Payments
		ADD_REPORT(763, "Capitation Batch Payments", 322, "CapitationBatchPayments", "CapitationBatchPaymentsQ", "PaymentsP", "CapitationBatchPayments", TRUE, 0, -1, -1, 0, 1, 1, FALSE, "Batch Payment Date", TRUE, "", "ID|Name", "0|-1", "12SELECT PersonID AS ID, Name AS Name FROM InsuranceCoT ORDER BY Name", "InsuranceID", FALSE, "", "", "", FALSE, 0, "", FALSE, 1, "1;Payment Date;TDate;Service;2;Input Date;IDate;Input;", -1),
END_ADD_REPORTS(CReports::gcs_aryKnownReports, CReports::gcs_nKnownReportCount);


	//	ADD_REPORT(nID, strPrintName, nRepIDForRepGroup, strReportName, strRecordSource, strCategory, strReportFile, bCreateGroup, nDetail, nProvider, nLocation, nPatient, nDateRange, nDateFilter, bOneDate, strDateCaption, bExternal, strReportSpecificName, strListBoxFormat, strListBoxWidths, strListBoxSQL, strFilterField, bExtended, strExtraText, strExtraField, strExtraValue, bUseGroupOption, nExtendedStyle, strExtendedSql, bPhaseOut = FALSE, bEditable, strDateOptions, nOneDateOption, nSupportedSubfilter = -1, bAllowMultipleExtended = FALSE)
																																	//ProvID		//LocID			//PatID		//Date|TDate|IDate		
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// The three functions below: GetRecordset and GetSql and GetDescription allow for report-dependent processing
// Use GetRecordset for reports that need complicated activity to generate the appropriate recordset
// Use GetSql to generate the base sql statement (before filtering) that a report uses
// Use GetDescription to generate the report description for each reportinfo
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
EBuiltInObjectIDs CReportInfo::GetBuiltInObjectID() const
{
	switch (nID) {

	case 322: // Batch Payments
	case 121: // Bills By Doctor \ Provider
	case 122: // Bills by Patient
	case 123: // Bills By Patient Coordinator
	case 124: // Bills By Referral Source
	case 247: // Bills Converted from Quotes
	case 286: // Charge Totals by Doctor \ Provider
	case 125: // Charges By Category
	case 126: // Charges By Category (Cross Tab)
	case 158: // Charges By Service Code By Patient
	case 159: // Charges By Service Code By Provider
	case 160: // Charges By Date
	case 130: // Charges by Doctor \ Provider
	case 131: // Charges by Doctor \ Provider (Cross Tab)
	case 161: // Charges by Insurance Company
	case 162: // Charges By Patient By Service Code
	case 241: // Charges By Place Of Service
//	case 189: // Charges By Referral Source
//	case 167: // Charges By Referring Physician
	case 135: // Charges By Zip Code
	case 134: // Charges By Place Of Service Designation
	case 218: // Charges By Inventory Item By Patient
	case 219: // Charges By Inventory Item By Provider
	case 220: // Charges By Patient By Inventory Item
	case 242: // Charges by Location
	case 275: // Charges By Category By Provider
	case 276: // Charges by Diag Code by Service Code
	case 389: // Charges by Diag Code
	case 136: // Deposits Made
	case 299: // Daily Posting Totals
	case 297: // Financial Activity - Daily (by Charge Code)
	case 468: // Financial Activity - Daily (by Ins Co)
	case 325: // Financial Activity - Daily (by Charge Category)
	case 153: // Financial Activity - Daily
	case 154: // Financial Activity - Monthly
	case 155: // Financial Activity - Yearly
	case 137: // Financial Summary
	case 252: // Insurance Procedures
	case 268: // Inventory Sales
	case 269: // Inventory Sales by Provider
	case 270: // Inventory Sales by Category
	case 271: // Inventory Sales Graph
//	case 96: // Patient Balances By Insurance Co
	case 186: // Patient Balances by Patient Type
	case 152: // Patient Balances By Provider
//	case 102: // Patient Charges By Category
	case 138: // Payment Receipts
	case 140: // Payments / Refunds
	case 141: // Payments By Service Category
	case 142: // Payments By Service Code
	case 179: // Payments By Date
	case 244: // Payments by Charge Date
	case 143: // Payments By Insurance By CPT
	case 364: // Payments By Insurance By Inv Item
	case 144: // Payments By Insurance Co
	case 217: // Payments By Inventory Item
	case 243: // Payments By Location
	case 145: // Payments By Provider
	case 188: // Payments By Referral Source
	case 168: // Payments By Referring Physician
	case 139: // Payments (Split By Product/Service)
	case 146: // Pays/Refs/Adjs By Category
//	case 117: // Performance
	case 157: // Performance Analysis
	case 156: // Performance Graph
	case 147: // PrePayments
	case 148: // Tax Totals
	case 369: // Financial Activity by Superbill
	case 501: // Closed Cash Drawers
	case 503: // Open Cash Drawers
	case 491: // Provider Commissions (Payments)
	case 489: // Payment Tips by Provider
	case 544: // Provider Commissions (Charges)
	case 545: // Gift Certificates Redeemed
	case 546: // Gift Certificates Sold
	case 561: // Returned Product Basic Commission Summary

		// The above reports are considered high security
		return bioReportsFinancialHigh;

	case 233:
	case 261:
	case 343:
	case 344:
	case 345:
	case 346:
	case 347:
	case 348:
		return bioAdminAuditTrail;

	default:
		// Otherwise just return the default built-in object id (which is based on what tab the report is under the reports module)
		return DefGetBuiltInObjectID();
	}
}
*/

// Open the recordset from which this report should pull data
//(e.lally 2008-04-07) PLID 9989 - Add parameter to flag when this is for a report verification
_RecordsetPtr CReportInfo::GetRecordset(long nSubLevel, long nSubRepNum, BOOL bForReportVerify) const
{


	// Perform special processing to open this report's recordset if there 
	// is any, otherwise, just call OpenDefaultRecordset which just opens a 
	// simple recordset based on this report's default sql statement
	switch (nID) {

	case 233: //Audit Trail - Financial
		{
			CString strSQL = GetAuditTrailFinancialReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditFinancial);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 261: //Audit Trail - Scheduling
		{
			CString strSQL;
			if(nPatient == -1) {
				strSQL = GetAuditTrailSchedulerReportSql(NULL);
			}
			else {
				// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
				_RecordsetPtr rsName = CreateRecordset(GetRemoteDataSnapshot(), "SELECT PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS Name FROM PErsonT WHERE ID = %li", nPatient);
				if(rsName->eof) {
					strSQL = GetAuditTrailSchedulerReportSql(NULL);
				}
				else {
					strSQL = GetAuditTrailSchedulerReportSql(AdoFldString(rsName, "Name"));
				}
			}
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditScheduling);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 343: //Audit Trail - Inventory
		{
			CString strSQL = GetAuditTrailInventoryReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditInventory);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 344: //Audit Trail - Patients
		{
			CString strSQL = GetAuditTrailPatientsReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditPatients);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 345: //Audit Trail - Contacts
		{
			CString strSQL = GetAuditTrailContactsReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditContacts);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 346: //Audit Trail - Insurance
		{
			CString strSQL = GetAuditTrailInsuranceReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditInsurance);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 347: //Audit Trail - Palm
		{
			CString strSQL = GetAuditTrailPalmReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditPDA);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 348: //Audit Trail - Miscellaneous
		{
			CString strSQL = GetAuditTrailMiscReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditMisc);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	case 547: //Audit Trail - EMR
		{
			CString strSQL = GetAuditTrailEMRReportSql();
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditNexEMR);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

	//TES 7/11/2008 - PLID 30668 - New report, filters on just the financial audits that could throw off the AR
	case 632: //Audit Trail - AR Issues
		{
			COleDateTime dtInvalid;
			dtInvalid.SetStatus(COleDateTime::invalid);
			//TES 7/14/2008 - PLID 30668 - Make sure the function can tell if we're running it for all dates.
			CString strSQL = GetAuditTrailARIssuesReportSql(nDateRange == -1 ? dtInvalid : DateFrom);
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}

			// (d.thompson 2010-03-16) - PLID 37721 - Audit that the report is run
			AuditingReportExecuted(aeiViewAuditFinancial);

			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;
	//TES 6/11/2009 - PLID 34607 - New report, the audit trail for just General 1 Demographics
	case 668: //Historical Demographic Information
		{
			CString strSQL = GetAuditTrailDemographicReportSql(nPatient);
			CString filter = GetFilter(nSubLevel, nSubRepNum);
			filter.TrimLeft();
			filter.TrimRight();
			if(!filter.IsEmpty()) {
				ConvertCrystalToSql(strSQL,filter);
				AddFilter(strSQL, filter, TRUE);
			}
			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			return GetAuditTrailReportRecordset(strSQL);
		}
		break;

		//TODO:  DRT 1/23/2004 - If we want to allow them to create merge groups from the statement, then these cases need handled in
		//	CReportInfo::CreateDefaultGroup().  If you add a case here, please put it in that function as well.

	case 169:  //Patient Statement
	case 337:
	case 234:
	case 338:
	case 353:
	case 354:
	case 355:
	case 356:
	case 434:
	case 435:
	case 436:
	case 437:
	case 483:
	case 484:
	case 485:
	case 486:
		{
			CursorLocationEnum eCursorLocation;
			_ConnectionPtr pConnection;
			if (IsServerSide(nID))
			{
				eCursorLocation = adUseServer;
				pConnection = GetRemoteDataReportSnapshot();
			}
			else
			{
				eCursorLocation = adUseClient;
				pConnection = GetRemoteDataSnapshot();
			}
			CIncreaseCommandTimeout increaseTimeout(pConnection, 0);

			//PLID 19451 - change the way the statement filters, so just return the recordset here
			// (c.haag 2016-03-21) - PLID 68251 - We now use a complex report query for patient statements
			CComplexReportQuery ptStmtQuery = GetSqlStatement(pConnection, nSubLevel, nSubRepNum);
			if (!ptStmtQuery.IsValid()) {
				// We have no sql statement to open!
				return NULL;
			} else {
				//(e.lally 2008-04-07) PLID 9989 - The patient statement reports use the hardcoded ttx structure
					//in the source code so this is not actually used. However, with the statements, verifying could
					//be made very time consuming if ever changed to a dynamic ttx file generation like standard reports so
					//I am putting this in for safety.
				if(bForReportVerify != FALSE){
					CString strNoRecordFilter = " 1=0 ";
					//return no actual records for report verifications
					AddFilter(ptStmtQuery.m_strSQL, strNoRecordFilter, TRUE);
				}

				//PLID 19451: we only have to do this for individual statments now because we handle it already for the others
				// (j.gruber 2007-06-29 09:37) - PLID 26501 - parameterized the individual statement
				// (j.gruber 2009-04-02 14:52) - PLID 33797 - added parameter for optional sub report
				switch (nID) {					

						
						case 234:
						case 354:
						case 338:
						case 356:
						case 484:
						case 486:
						{

							switch (nSubLevel) {


							case 0: 
								{
								CString strDateFrom = FormatDateTimeForSql(DateFrom, dtoDate);
								CString strDateTo = FormatDateTimeForSql(DateTo, dtoDate);						

								//we are now opening a parameter query for the individual statement
								// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
								_CommandPtr pCmd = OpenParamQuery(pConnection, ptStmtQuery.Flatten());
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterString(pCmd, "DateFrom", strDateFrom);								
								AddParameterString(pCmd, "DateTo", strDateTo);								
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterString(pCmd, "DateFrom", strDateFrom);								
								AddParameterString(pCmd, "DateTo", strDateTo);								
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterString(pCmd, "DateFrom", strDateFrom);								
								AddParameterString(pCmd, "DateTo", strDateTo);								
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterString(pCmd, "DateFrom", strDateFrom);								
								AddParameterString(pCmd, "DateTo", strDateTo);								
							
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								

								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								

								
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								

								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								

								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);
								AddParameterLong(pCmd, "PatientID", nPatient);						


								return CreateRecordset(pCmd);
								}
							break;

							case 1:{
								// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
								_CommandPtr pCmd = OpenParamQuery(pConnection, ptStmtQuery.Flatten());
								AddParameterLong(pCmd, "PatientID", nPatient);						
								return CreateRecordset(pCmd);
								   }
							break;

							default:
								return NULL;
							break;
						}

					}

					
					break;
				}
#ifdef _DEBUG
#ifndef ENABLE_VERIFY_ALL_REPORTS
				//(e.lally 2008-04-10)- Switched to our CMsgBox dialog
				// (z.manning 2008-11-26 15:58) - PLID 32125 - We insert images into a table variable for
				// the lab report (567) and CMsgBox doesn't seem to like to display the SQL to do so, so 
				// don't bother for that report.
				//TES 3/12/2009 - PLID 33468 - Split this into two reports, so check for both.
				if(nID != 567 && nID != 658) {
					CMsgBox dlg(NULL);
					dlg.msg = ptStmtQuery.Flatten();
					dlg.DoModal();
				}
#endif
#endif
				// Open the recordset
				// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
				return CreateRecordsetStd(pConnection, ptStmtQuery.Flatten(), adOpenStatic, adLockReadOnly, adCmdText, eCursorLocation);
			}
		
		//if they are using the new report then change the query	
		//if (GetRemotePropertyInt("SttmntUse70Version")) {
		//	return OpenDefaultRecordset(0, 353);
		//}
		//else {
//			return OpenDefaultRecordset(nSubLevel, nSubRepNum);
		//}

	break;

	}
//	case 337:  //Patient Statement By Location

		//if they are using the new report then change the query	
		//if (GetRemotePropertyInt("SttmntUse70Version")) {
		//	return OpenDefaultRecordset(0, 355);
		//}
		//else {
//			return OpenDefaultRecordset(nSubLevel, nSubRepNum);
		//}

//	break;
	


	case 17:	//Daily Schedule
	case 380:	//Daily Schedule Report (PP)
		{
			CString strSQL;
			if(nID == 380 && GetRemotePropertyInt("ClassicReptShowCancelledAppts", 0, 0, GetCurrentUserName())) {
				// (j.gruber 2008-09-17 13:06) - PLID 30284 - added sublevel and subrep num
				strSQL = GetSqlDailySchedule(true, nSubLevel, nSubRepNum);
			}
			else {
				// (j.gruber 2008-09-17 13:06) - PLID 30284 - added sublevel and subrep num
				strSQL = GetSqlDailySchedule(false, nSubLevel, nSubRepNum);
			}

	 		CString strLocFilter = GetFilter(nSubLevel, nSubRepNum);
			strLocFilter.TrimLeft();
			strLocFilter.TrimRight();
			if (!strLocFilter.IsEmpty()) {
				ConvertCrystalToSql(strSQL, strLocFilter);
				AddFilter(strSQL, strLocFilter, TRUE);
			}
			
		//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
			//is done with the hardcoded ttx structure so nothing needs to be done here.
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			return CreateRecordsetStd(GetRemoteDataSnapshot(), strSQL, adOpenDynamic, adLockReadOnly);
		}
		break;

	case 392: //Ladders
		{
			// (j.jones 2008-12-02 15:37) - PLID 32266 - changed the UserName to support multiple users per step
		CString strSql = _T("SELECT StepTemplatesT.ID AS StepTemplateID, LadderTemplatesT.ID AS LadderTemplateID, LadderTemplatesT.Name, StepTemplatesT.StepName,  StepTemplatesT.Action, "
			"Note, CASE WHEN Skippable = 0 THEN 'No' ELSE 'Yes' END AS Skippable, Coalesce(dbo.GetStepTemplateUsernames(StepTemplatesT.ID), '{None}') AS UserName, StepTemplatesT.StepOrder, StepTemplatesT.ActivateType, StepTemplatesT.ActivateInterval, "
			//Placeholders to be filled in.
			"StepTemplatesT.Note AS ActionText, StepTemplatesT.Note AS CriteriaInfo, StepTemplatesT.Note AS ActivationInfo  "
			"FROM StepTemplatesT "
			"INNER JOIN LadderTemplatesT ON StepTemplatesT.LadderTemplateID = LadderTemplatesT.ID  "
			"WHERE StepTemplatesT.Inactive = 0  "
			"ORDER BY LadderTemplatesT.ID, StepTemplatesT.StepOrder");
		CString strFilter = GetFilter(nSubLevel, nSubRepNum);
		strFilter.TrimLeft();
		strFilter.TrimRight();
		if (!strFilter.IsEmpty()) {
			ConvertCrystalToSql(strSql, strFilter);
			AddFilter(strSql, strFilter, TRUE);
		}

		//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
			//is done with the hardcoded ttx structure so nothing needs to be done here.

		_RecordsetPtr rs(__uuidof(Recordset));
		rs->CursorLocation = adUseClient;
		// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
		rs->Open((LPCTSTR)strSql, (LPDISPATCH)GetRemoteDataSnapshot(), adOpenDynamic, adLockBatchOptimistic, adCmdText);

		//Disconnect the recordset.
		rs->PutRefActiveConnection(NULL);

		while(!rs->eof) {

			long nStepID = AdoFldLong(rs, "StepTemplateID");
			PhaseTracking::PhaseAction nAction = (PhaseTracking::PhaseAction)AdoFldLong(rs, "Action");
			
			//First, the description of the action.
			CString strActionText = PhaseTracking::GetPhaseActionDescription(nAction);
			rs->Fields->Item["ActionText"]->Value = _bstr_t(strActionText);

			//Get all criteria.
			CString strCriteriaInfo;
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			if(!ReturnsRecords(GetRemoteDataSnapshot(), "SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li", nStepID) ) {
				strCriteriaInfo = "{None}";
			}
			else {
				_RecordsetPtr rsNames;
				// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
				switch(nAction) {
					case PhaseTracking::PA_QuoteSurgery:
					case PhaseTracking::PA_BillSurgery: 
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM SurgeriesT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);					
						break;
					case PhaseTracking::PA_Quote:
					case PhaseTracking::PA_Bill:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM ProcedureT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_QuoteCPT:
					case PhaseTracking::PA_BillCPT:
					case PhaseTracking::PA_QuoteInventory:
					case PhaseTracking::PA_BillInventory:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM ServiceT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_WriteTemplate:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Path AS Name FROM MergeTemplatesT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_WritePacket:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM PacketsT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_ScheduleAptCategory:
					case PhaseTracking::PA_ActualAptCategory:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT CASE WHEN ActionID = 1 THEN 'Consult' WHEN ActionID = 2 THEN 'PreOp' WHEN ActionID = 3 THEN 'Minor Procedure' WHEN ActionID = 4 THEN 'Surgery' WHEN ActionID = 5 THEN 'Follow-Up' WHEN ActionID = 6 THEN 'Other Procedural' WHEN ActionID = 7 THEN 'Block Time' WHEN ActionID = 8 THEN 'Non-Procedural' END AS Name "
							"FROM StepCriteriaT WHERE StepTemplateID = %li", nStepID);
						break;
					case PhaseTracking::PA_ScheduleAptType:
					case PhaseTracking::PA_ActualAptType:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM AptTypeT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_Ladder:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM ProcedureT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_Payment:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT CASE "
							"WHEN ActionID = 1 THEN 'Any payment received for this procedure' "
							"WHEN ActionID = 2 THEN 'Total payment amounts equal to the active quote' "
							"WHEN ActionID = 3 THEN 'Total prepayment amounts equal to the active quote' "
							"WHEN ActionID = 4 THEN 'Total PrePayments meet deposit requirements for the active quote' END AS Name "
							"FROM StepCriteriaT WHERE StepTemplateID = %li", nStepID);
						break;
					// (j.jones 2010-04-30 10:01) - PLID 38353 - renamed PA_CreateEMR to PA_CreateEMRByCollection (existing behavior),
					// and added PA_CreateEMRByTemplate, which lets you match by template instead of collection
					case PhaseTracking::PA_CreateEMRByCollection:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM EMRCollectionT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					case PhaseTracking::PA_CreateEMRByTemplate:
						rsNames = CreateRecordset(GetRemoteDataSnapshot(), "SELECT Name FROM EMRTemplateT WHERE ID IN (SELECT ActionID FROM StepCriteriaT WHERE StepTemplateID = %li)", nStepID);
						break;
					default:
						ASSERT(FALSE);
						return NULL;
						break;
				}
				if(rsNames->eof) {
					strCriteriaInfo = "{None}";
				}
				else {
					while(!rsNames->eof) {
						if(nAction == PhaseTracking::PA_WriteTemplate) {
							CString strPath = AdoFldString(rsNames, "Name");
							int nLastBackslash = strPath.ReverseFind('\\');
							if(nLastBackslash != -1) strPath = strPath.Mid(nLastBackslash+1);
							strPath.MakeLower();
							strCriteriaInfo += strPath + ", ";
						}
						else {
							strCriteriaInfo += AdoFldString(rsNames, "Name") + ", ";
						}
						rsNames->MoveNext();
					}
					strCriteriaInfo = strCriteriaInfo.Left(strCriteriaInfo.GetLength()-2);
				}
			}

			rs->Fields->Item["CriteriaInfo"]->Value = _bstr_t(strCriteriaInfo);

			//Finally, the activation information.
			long nActivationType = AdoFldLong(rs, "ActivateType",0);
			long nActivateInterval = AdoFldLong(rs, "ActivateInterval",0);
			CString strActivationInfo;
			switch(nActivationType) {
			case 0:
				strActivationInfo = "Immediate";
				break;
			case 1:
				strActivationInfo.Format("%li Days", nActivateInterval);
				break;
			case 2:
				strActivationInfo.Format("%li Weeks", nActivateInterval);
				break;
			case 3:
				strActivationInfo.Format("%li Months", nActivateInterval);
				break;
			case 4:
				strActivationInfo = "Prompt";
				break;
			case 5:
				strActivationInfo = "Never";
				break;
			default:
				ASSERT(FALSE);
				break;
			}

			rs->Fields->Item["ActivationInfo"]->Value = _bstr_t(strActivationInfo);

			rs->MoveNext();
		}

		if(!rs->bof)
			rs->MoveFirst();

		return rs;
		}

		break;

	case 170: //AR By Insurance
	case 385: //AR By Ins Co Office
	case 391: //AR Split by Responsibility
	case 659: // (z.manning 2009-03-25 11:04) - PLID 19120 - AR By Financial Class	
		//TES 3/5/04: This has subreports now, which are linked, so we don't want to apply ANY filters to them.
		if(nSubLevel != 0) {
			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			return CreateRecordset(GetRemoteDataSnapshot(), "%s", GetSqlAR(nSubLevel, nSubRepNum));
		}
		else {
			return OpenDefaultRecordset(nSubLevel, nSubRepNum,bForReportVerify);
		}
		break;


/*	case 502:  //revenue by referral source
		return CreateRecordset("%s", GetSqlPrintPreview(0,0));
	break;*/


	//Move Up list and Appointment Move Up List
	case 94:
	case 564: {

		//Appointments Requesting a MoveUp
		//Note: When generating .ttx file, the Notes field needs to be manually set to a memo field (length 4000), 
		//and the Purpose field needs to be manually set to a memo field (length 500)
		/*	Version History
			DRT 6/19/03 - Removed the join to AptPurposeT, which was joining on the AptPurposeID field, which is obsolete.
					Also had to remove AptPurposeT.ID AS PurposeID from the select clause, and make a new ttx.
			DRT 7/17/03 - Added CreatedDate to the query.  Put it in the report and made it sort by InputDate for each group.
			TES 2/17/04 - Enabled Appointment subfilters.
			TES 3/4/04 - Removed references to AppointmentsT.ResourceID
			TES 8/23/05 - Changed resource filtering.
			(d.moore 2007-05-22 16:28) - PLID 4013 - Modified MoveUp to use the WaitingListT table.
		*/
		CString sql = "SELECT PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS PatName, "
		"    AppointmentsT.AptTypeID AS SetID,  "
		"    dbo.GetPurposeString(AppointmentsT.ID) AS Purpose, AptTypeT.Name AS SetName,  "
		"    AppointmentsT.Date AS Date,  "
		"    AppointmentsT.StartTime, "
		"    AppointmentsT.EndTime, "
		"    PersonT.HomePhone, PersonT.WorkPhone,  "
		"    PatientsT.PersonID AS PatID, AptTypeT.ID AS ID,  "
		"    AppointmentsT.Notes, CONVERT(bit, CASE WHEN WaitingListT.ID > 0 THEN 1 ELSE 0 END) AS MoveUp, "
		"    PatientsT.UserDefinedID, AppointmentsT.LocationID AS LocID, "
		"	 LocationsT.Name AS Location, "
		"    -1 AS ResourceID, "
		"    PersonT.PrivHome, PersonT.PrivWork, "
		"	 AppointmentsT.CreatedDate, "
		"    AppointmentsT.ID AS ApptID "
		"FROM (AppointmentsT INNER JOIN WaitingListT ON AppointmentsT.ID = WaitingListT.AppointmentID "
		"      LEFT JOIN LocationsT ON AppointmentsT.LocationID = LocationsT.ID) LEFT OUTER JOIN "
		"    AptTypeT ON "
		"    AppointmentsT.AptTypeID = AptTypeT.ID LEFT OUTER JOIN "
		"    PersonT INNER JOIN "
		"    PatientsT ON PersonT.ID = PatientsT.PersonID ON  "
		"    AppointmentsT.PatientID = PatientsT.PersonID "
		"WHERE (PatientsT.PersonID > 0) AND (AppointmentsT.Status <> 4)  "
		"    AND (AppointmentsT.ShowState <> 3)"; // 3 = no show

		//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
			//is done with the hardcoded ttx structure so nothing needs to be done here.
		if (nID == 94) {
			
			CString strFilter = GetFilter(nSubLevel, nSubRepNum);
			strFilter.TrimLeft();
			strFilter.TrimRight();
			if (!strFilter.IsEmpty()) {
				ConvertCrystalToSql(sql, strFilter);
				AddFilter(sql, strFilter, TRUE);
			}

			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			return CreateRecordset(GetRemoteDataSnapshot(), _T(sql));
		}
		else {
			//if its 546 we have to add special filters
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			return CreateRecordset(GetRemoteDataSnapshot(), _T(sql) + strExtraText);

		}
			  }
	break;

	case 543:
		// Time scheduled productivity
		// (s.tullis 2015-02-20 10:45) - PLID 64048 - Time scheduled productivity by office hours does not appear to be sanitizing appt types for the query.
		{
					
			// create a temp table
			CString strTempT;
			strTempT.Format("#Temp%luT", GetTickCount());
			// (j.gruber 2009-07-09 12:00) - PLID 20398 - added count of appts
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			// (s.tullis 2015-02-20 13:22) - PLID 64048 - Changed to DateTime
			ExecuteParamSql(GetRemoteDataSnapshot(), "CREATE TABLE {CONST_STRING} (Date DATETIME, Resource nvarchar(255), MinutesScheduled int, MinutesOpen int, ApptType nvarchar(255), CountOfAppts int)", strTempT);
			
			// see if there were any filters used and build the appropriate where clause for selecting appts
			// we know thwe we only want non-cancelled appts
			CString strWhere = "(AppointmentsT.Status <> 4) AND (CASE WHEN (DATEPART(dw, AppointmentsT.Date) = 1) THEN LocationsT.SundayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 2) THEN LocationsT.MondayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 3) THEN LocationsT.TuesdayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 4) THEN LocationsT.WednesdayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 5) THEN LocationsT.ThursdayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 6) THEN LocationsT.FridayOpen  WHEN (DATEPART(dw, AppointmentsT.Date)= 7) THEN LocationsT.SaturdayOpen END IS NOT NULL) AND "
				"(ResourceT.Inactive = 0) AND ";
	
			// first consider the dates
			if(nDateRange > 0){
				CString tmp;
				tmp.Format("(Date >= '%s' AND Date <= '%s') AND ", FormatDateTimeForSql(DateFrom), FormatDateTimeForSql(DateTo));
				strWhere += tmp;
			}
			// (j.gruber 2007-05-02 12:55) - PLID 25872 - switched resources to the external filter and moved patients to the extended filter
			// next see if the extended filter has any resources chosen
			if(bExtended && saExtraValues.GetSize()){
				if (saExtraValues.GetAt(0) == "-25") {
					//there is only 1 selection in the list
					CString tmp;
					tmp.Format(" (AppointmentsT.PatientID > 0) AND ");
					strWhere += tmp;
				}
			}
			// (d.moore 2007-07-25) - PLID 17519 - Removing resource filtering and instead switching to 
			//  Appointment Type for the external filter.
			if (bExternal) {
				CString strTmpExternal = strExternalFilter;
				strTmpExternal.Replace("{TimeScheduledProductivityByOfficeHoursQ.AppointmentTypeID}", "AppointmentsT.AptTypeID");
				strWhere += strTmpExternal;
			}

			
			//(e.lally 2008-04-07) PLID 9989 - This is only executed when running the report. Report verification
				//is done with the hardcoded ttx structure so nothing needs to be done here.

			// (d.moore 2007-07-25) - PLID 17519 - Added appointment type fields to the query.
			// (z.manning 2008-06-20 10:00) - PLID 29759 - Need to sort by appt type as well.			
			// (j.gruber 2009-07-09 12:00) - PLID 20398 - added ApptID
			strWhere.TrimRight(" AND ");
			CString strSql;
			strSql.Format("SELECT AppointmentsT.ID as ApptID, Date, StartTime, EndTime, DATEPART(dw, Date) AS DayOfWeek, AppointmentResourceT.ResourceID AS ResourceID, ResourceT.Item AS Resource, "
				"AptTypeT.ID AS AppointmentTypeID, AptTypeT.NAME AS AppointmentTypeName, "				
				"CASE WHEN (DATEPART(dw, AppointmentsT.Date) = 1) THEN DateDiff(mi, LocationsT.SundayOpen, LocationsT.SundayClose)  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 2) THEN DateDiff(mi, LocationsT.Mondayopen, LocationsT.MondayClose)  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 3) THEN DateDiff(mi, LocationsT.TuesdayOpen, LocationsT.TuesdayClose)   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 4) THEN DateDiff(mi, LocationsT.WednesdayOpen, LocationsT.WednesdayClose)   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 5) THEN DateDiff(mi, LocationsT.ThursdayOpen, LocationsT.ThursdayClose)   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 6) THEN DateDiff(mi, LocationsT.FridayOpen, LocationsT.FridayClose)   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 7) THEN DateDiff(mi, LocationsT.SaturdayOpen, LocationsT.SaturdayClose) END AS MinutesOpen,   "
				"CASE WHEN (DATEPART(dw, AppointmentsT.Date) = 1) THEN LocationsT.SundayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 2) THEN LocationsT.MondayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 3) THEN LocationsT.TuesdayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 4) THEN LocationsT.WednesdayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 5) THEN LocationsT.ThursdayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 6) THEN LocationsT.FridayOpen  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 7) THEN LocationsT.SaturdayOpen END AS OpenTime,  "
				"CASE WHEN (DATEPART(dw, AppointmentsT.Date) = 1) THEN LocationsT.SundayClose  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 2) THEN LocationsT.MondayClose  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 3) THEN LocationsT.TuesdayClose  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 4) THEN LocationsT.WednesdayClose  "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 5) THEN LocationsT.ThursdayClose   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 6) THEN LocationsT.FridayClose   "
				"WHEN (DATEPART(dw, AppointmentsT.Date)= 7) THEN LocationsT.SaturdayClose END AS CloseTime  "
				"FROM AppointmentsT  "
				"LEFT JOIN AppointmentResourceT ON AppointmentsT.ID = AppointmentResourceT.AppointmentID  "
				"LEFT JOIN ResourceT ON ResourceT.ID = AppointmentResourceT.ResourceID  "
				"LEFT JOIN ResourceLocationConnectT ON ResourceLocationConnectT.ResourceID = AppointmentResourceT.ResourceID "
				"LEFT JOIN LocationsT ON LocationsT.ID = ResourceLocationConnectT.LocationID "
				"LEFT JOIN AptTypeT ON AppointmentsT.AptTypeID = AptTypeT.ID "
				"WHERE (%s) "
				"ORDER BY Resource, Date, AppointmentTypeID, StartTime, EndTime ", strWhere);

			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			//(e.lally 2010-07-19) PLID 39628 - Use Std version to avoid string formatting errors
			_RecordsetPtr rsAppts = CreateRecordsetStd(GetRemoteDataSnapshot(), strSql);

			// initially we want the end time to be the open time so that we only get appts that end after the 
			// start time
			COleDateTime dtEndTime;
			COleDateTime dtDateToWatch;
			long nMinutesOpenForDate = 0;
			long nTotalMinutesNotScheduled = 0;
			long nMinutesScheduled = 0;
			long nResourceIDToWatch = -1;
			CString strResourceToWatch = "";
			bool bFirstTime = true;
			COleDateTime dtApptDate;
			COleDateTime dtCloseTime;
			long nResourceID;
			CString strResource;
			CString strApptType;
			// (z.manning 2008-06-20 10:01) - PLID 29759 - Added variables as we also have to separate
			// records by appointment type.
			CString strApptTypeToWatch;
			long nApptTypeID;
			long nApptTypeIDToWatch = -2;
			// (j.gruber 2009-07-09 11:51) - PLID 20398 - added # appt booked		

#define ADD_TO_APPTID_MAP(nApptId)   if (!mapApptIDs.Lookup(nApptId, nTempKey)) {\
									mapApptIDs.SetAt(nApptId, nApptId);\
									}
			long nTempKey = -1;
			CMap<long,long,long,long> mapApptIDs;
			long nApptID = -1;

			while(!rsAppts->eof){
				
				dtApptDate = AdoFldDateTime(rsAppts, "Date");
				nResourceID = AdoFldLong(rsAppts, "ResourceID");
				strResource = AdoFldString(rsAppts, "Resource");															
				strApptType = AdoFldString(rsAppts, "AppointmentTypeName", "<No Type>");
				nApptTypeID = AdoFldLong(rsAppts, "AppointmentTypeID", -1);				
				nApptID = AdoFldLong(rsAppts, "ApptID");
				
				// check to see if we're on the same date with the same resource, 
				// if we changed resources, then write it to the sql statement
				// otherwise, then keep adding up the time
				// (z.manning 2008-06-20 10:01) - PLID 29759 - Also committ a record if the appt type changed.
				if(!bFirstTime && (nResourceID != nResourceIDToWatch || dtApptDate != dtDateToWatch || nApptTypeID != nApptTypeIDToWatch)){
					// now we know the time that wasn't scheduled for today, let's find out how much time was used
					if(nTotalMinutesNotScheduled != -1 && nMinutesOpenForDate != 0){
						// if the close time is after the last end time, then there is additional time not being used
						if(dtCloseTime > dtEndTime){
							COleDateTimeSpan dtsDiff = dtCloseTime - dtEndTime;
							nTotalMinutesNotScheduled += (long)dtsDiff.GetTotalMinutes();							
						}
						nMinutesScheduled = (nMinutesOpenForDate - nTotalMinutesNotScheduled);
						
						// insert into the temp table
						if(nMinutesScheduled != 0){
							// (s.tullis 2015-02-20 10:52) - PLID 64048 - Changed to ParamSql
							ExecuteParamSql(GetRemoteDataSnapshot(),"INSERT INTO {CONST_STRING} (Date, Resource, MinutesScheduled, MinutesOpen, ApptType, CountofAppts) VALUES "
								"( {OLEDATETIME}, {STRING}, {INT},{INT}, {STRING}, {INT})", strTempT, dtDateToWatch, strResourceToWatch,
								nMinutesScheduled, nMinutesOpenForDate, strApptTypeToWatch, mapApptIDs.GetSize());
						/*	CString strTmp;
							strTmp.Format("INSERT INTO %s (Date, Resource, MinutesScheduled, MinutesOpen, ApptType, CountofAppts) VALUES "
								"('%s', '%s', %li, %li, '%s', %li)", strTempT, FormatDateTimeForSql(dtDateToWatch), _Q(strResourceToWatch),
								nMinutesScheduled, nMinutesOpenForDate, strApptTypeToWatch, mapApptIDs.GetSize());
							
							// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
							//(e.lally 2010-07-19) PLID 39628 - Use Std version to avoid string formatting errors
							ExecuteSqlStd(GetRemoteDataSnapshot(), strTmp);*/
						}
					}
					// reset the variables
					nMinutesScheduled = nMinutesOpenForDate = nTotalMinutesNotScheduled = 0;
					mapApptIDs.RemoveAll();
					bFirstTime = true;
				}

				if(bFirstTime){
					// if it's the first time through for a new date/resource then get the open time
					dtEndTime = AdoFldDateTime(rsAppts, "OpenTime");
					dtEndTime.SetDateTime(dtApptDate.GetYear(), dtApptDate.GetMonth(), dtApptDate.GetDay(), dtEndTime.GetHour(), dtEndTime.GetMinute(), dtEndTime.GetSecond());
				}
				
				dtCloseTime = AdoFldDateTime(rsAppts, "CloseTime");
				nMinutesOpenForDate = AdoFldLong(rsAppts, "MinutesOpen", 0);
				
				// need to set the date part of the closetime and end time, otherwise it uses 1/1/1900
				dtCloseTime.SetDateTime(dtApptDate.GetYear(), dtApptDate.GetMonth(), dtApptDate.GetDay(), dtCloseTime.GetHour(), dtCloseTime.GetMinute(), dtCloseTime.GetSecond());

				COleDateTime dtCurStartTime = AdoFldDateTime(rsAppts, "StartTime");
				COleDateTime dtCurEndTime = AdoFldDateTime(rsAppts, "EndTime");
				 				
				// we only want appts that start before the office hours close time
				if(dtCurStartTime < dtCloseTime){
					// if the start time of this new appt is after the last end time, then we have a gap in the
					// scheduler for this resource on this day
					CString start, end;
					start = dtCurStartTime.Format();
					end = dtEndTime.Format();
						
					if(dtCurStartTime > dtEndTime) {
						COleDateTimeSpan dtsDiff = dtCurStartTime - dtEndTime ;
						nTotalMinutesNotScheduled += (long)dtsDiff.GetTotalMinutes();
						ADD_TO_APPTID_MAP(nApptID);
					}
						
					// if the end time of this appt is after the end time of the current appt, then we have a new
					// end time.				
					if(dtCurEndTime > dtEndTime){
						dtEndTime = dtCurEndTime;
						ADD_TO_APPTID_MAP(nApptID);
					}
				}
				
				if(bFirstTime){
					nResourceIDToWatch = nResourceID;
					strResourceToWatch = strResource;
					dtDateToWatch = dtApptDate;
					nApptTypeIDToWatch = nApptTypeID;
					strApptTypeToWatch = strApptType;
					bFirstTime = false;					
				}
				
				// that's it for this Appt, move on to the next
				rsAppts->MoveNext();
			}

			// need to write the last record
			// now we know the time that wasn't scheduled for today, let's find out how much time was used
			if(nTotalMinutesNotScheduled != -1 && nMinutesOpenForDate != 0){
				// if the close time is after the last end time, then there is additional time not being used
				CString close, end;
				close = dtCloseTime.Format();
				end = dtEndTime.Format();
				if(dtCloseTime > dtEndTime){
					COleDateTimeSpan dtsDiff = dtCloseTime - dtEndTime;
					nTotalMinutesNotScheduled += (long)dtsDiff.GetTotalMinutes();					
				}
				nMinutesScheduled = (nMinutesOpenForDate - nTotalMinutesNotScheduled);

				// insert into the temp table
				if(nMinutesScheduled != 0){
					// (s.tullis 2015-02-20 10:54) - PLID 64048 - Changed to Param Sql
					ExecuteParamSql(GetRemoteDataSnapshot(),"INSERT INTO {CONST_STRING} (Date, Resource, MinutesScheduled, MinutesOpen, ApptType, CountofAppts) VALUES "
						"( {OLEDATETIME},  {STRING}, {INT},{INT}, {STRING}, {INT})", strTempT, dtDateToWatch, strResourceToWatch,
						nMinutesScheduled, nMinutesOpenForDate, strApptTypeToWatch, mapApptIDs.GetSize());
					
					/*CString strTmp;
					strTmp.Format("INSERT INTO %s (Date, Resource, MinutesScheduled, MinutesOpen, ApptType, CountOfAppts) VALUES "
						"('%s', '%s', %li, %li, '%s', %li)", strTempT, FormatDateTimeForSql(dtDateToWatch), _Q(strResourceToWatch),
						nMinutesScheduled, nMinutesOpenForDate, strApptType, mapApptIDs.GetSize());
					// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
					//(e.lally 2010-07-19) PLID 39628 - Use Std version to avoid string formatting errors
					ExecuteSqlStd(GetRemoteDataSnapshot(), strTmp);*/
					
					//remove from the map
					mapApptIDs.RemoveAll();
				}
			}
			
			// (a.walling 2009-08-11 13:25) - PLID 35178 - Use the snapshot connection
			return CreateRecordset(GetRemoteDataSnapshot(), "SELECT * FROM %s", strTempT);
		}	
		
		break;


		case 555: //User Permissions by Username
			//(e.lally 2008-04-07) PLID 9989 - Add parameter to flag when we are verifying reports.
			// (j.gruber 2010-04-12 16:04) - PLID 37947 - overwrote nprovider to filter just extra perms
			return GetUserPermissionsRecordset(nSubLevel, nSubRepNum, strExternalFilter, bForReportVerify, nProvider);
		break;


		case 544: //Provider Commissions (Charges)
			// (j.jones 2009-11-17 16:13) - PLID 36326 - added function for building the Provider Commissions (Charges) recordset
			return GetProviderCommissionsChargesRecordset(nSubLevel, nSubRepNum, bForReportVerify);
		break;

		case 491: //Provider Commissions (Payments)
			// (j.jones 2009-11-17 16:13) - PLID 36326 - added function for building the Provider Commissions (Payments) recordset
			return GetProviderCommissionsPaymentsRecordset(nSubLevel, nSubRepNum, bForReportVerify);
		break;

	default:
		
		// If nothing else has taken care of it explicitly, use the default mechanism
		//(e.lally 2008-04-07) PLID 9989 - Add parameter to flag when we are verifying reports.
		return OpenDefaultRecordset(nSubLevel, nSubRepNum, bForReportVerify);
	break;
	}

}

CString CReportInfo::GetProviderFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 221:
		return _T("");  //Do nothing because the Provider filter is actually being used as an awkward way
				// of communicating the category ID.
		break;
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;
	case 284:
		return _T("");
		break;
	case 295:
		switch(nSubLevel) {
		case 1:
			break;	//do nothing, we want this to happen
		default:
			return _T("");	//pass on the filter
			break;
		}
		break;
	case 369:	//Financial Activity by Superbill
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 0:
				case 1:
					return DefGetProviderFilter(nSubLevel, nSubRepNum);
				break;	
			}
		break;

		default:
			{
				//if they are filtering on a provider, it will only create the subreport for any superbills that have such a provider
				//BUT!  it will still create the main query for all superbill ids, which then looks really bad (and takes forever to generate)
				//so we must filter the main query for all superbill IDs that will end up in the subreport
				CString str;
				if(nProvider > 0) {
					str.Format("PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND DoctorsProviders = %li)", nProvider);
				} else if(nProvider == -2) {
					// (j.jones 2011-07-27 09:17) - PLID 44708 - fixed call to Is Null
					str.Format("PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND (DoctorsProviders Is Null OR DoctorsProviders = -1) )");
				}
				else if(nProvider == -3) {
					str.Format("PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND DoctorsProviders IN (");
					CString strPart;
					for(int i=0; i < m_dwProviders.GetSize(); i++) {
						strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
						str += strPart;
					}
					str = str.Left(str.GetLength()-2) + "))";
				}

				return _T(str);	//the query itself handles filtering this
			}
			break;
		}
	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;

	case 87:
		{
		//Provider Multiple Fee Schedules
		switch(nSubLevel) {
		case 0:	//main level - we are filtering here
		{
			CString str;
			if(nProvider > 0) {
				str.Format("MultiFeeGroupsT.ID IN (SELECT FeeGroupID FROM MultiFeeProvidersT WHERE ProviderID = %li)", nProvider);
			} else if(nProvider == -2) {
				str.Format("MultiFeeGroupsT.ID NOT IN (SELECT FeeGroupID FROM MultiFeeProvidersT)");		//select all groups not in the providers table
			}
			else if(nProvider == -3) {
				str.Format("MultiFeeGroupsT.ID IN (SELECT FeeGroupID FROM MultiFeeProvidersT WHERE ProviderID IN (");
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					str += strPart;
				}
				str = str.Left(str.GetLength()-2) + "))";
			}

			return _T(str);
		}
		default:
			return _T("");
		}
		break;
		}

	case 473: //Service Codes by Billed Amount: the auto-filtering won't let me use this because it's not in a SELECT clause,
		//but darn it, I know it's a valid where clause.
		{
			CString strAns;
			if (nProvider > 0) {
				strAns.Format( "ChargesT.DoctorsProviders = %d ", nProvider);
				return strAns;
			} else if(nProvider == -2) {
				// (j.jones 2011-07-29 08:51) - PLID 44709 - this had only one ), now it has both
				strAns.Format( "(ChargesT.DoctorsProviders Is Null OR ChargesT.DoctorsProviders = -1)");
				return strAns;
			}
			else if(nProvider == -3) {
				strAns.Format("ChargesT.DoctorsProviders In (");
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					strAns += strPart;
				}
				strAns = strAns.Left(strAns.GetLength()-2) + ")";
				return strAns;
			}
			else {
				return "";
			}
		}
		break;

	case 556:	//Preference Cards
		{
			CString strAns;
			if (nProvider > 0) {
				strAns.Format( "(DoctorsT.ID Is Null OR DoctorsT.ID = %d) ", nProvider);
				return strAns;
			} else if(nProvider == -2) {
				strAns.Format( "DoctorsT.ID = -1 ");
				return strAns;
			}
			else if(nProvider == -3) {
				strAns.Format("(DoctorsT.ID Is Null OR DoctorsT.ID In (");
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					strAns += strPart;
				}
				strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
				return strAns;
			}
			else {
				return "";
			}
		}

	case 571:	//Patient Outcomes
		{
			CString strAns;
			if (nProvider > 0) {
				strAns.Format( "(EyeProceduresT.ProviderID Is Null OR EyeProceduresT.ProviderID = %d) ", nProvider);
				return strAns;
			} else if(nProvider == -2) {
				// (c.haag 2016-06-08 17:12) - PLID-68334 - -1 provider ID's are no longer possible now that EyeProceduresT
				// has a FK to ProvidersT. I want to point out however that we forbid people from saving visits with no provider
				// so this would only reveal bad data; and it seems we want to do that regardless of the filter
				strAns.Format( "EyeProceduresT.ProviderID Is Null ");
				return strAns;
			}
			else if(nProvider == -3) {
				strAns.Format("(EyeProceduresT.ProviderID Is Null OR EyeProceduresT.ProviderID In (");
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					strAns += strPart;
				}
				strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
				return strAns;
			}
			else {
				return "";
			}
		}

	// (j.gruber 2007-01-04 09:54) - PLID 24035 - fix the reports wiht EMRMasterT.ProviderID in them
	// (d.lange 2016-05-05 11:46) - PLID 65500 - Filters out deleted EMR providers
	case 256:  //EMN Data By Patient
	case 576:  //EMR Summary
	case 577:  //EMN By Procedure
	case 255:  //EMR Totals By Age/Gender
	
		if (nProvider == -3) {
			CString strAns = " EMRMasterT.ID IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0 AND ProviderID IN (";
			CString strPart;
			for(int i=0; i < m_dwProviders.GetSize(); i++) {
				strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
				strAns += strPart;
			}
			strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
			return strAns;
		} else if (nProvider == -2) {
			CString strAns;
			strAns.Format(" EMRMasterT.ID NOT IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0)");
			return strAns;
		} else if (nProvider > 0) {
			CString strAns;
			strAns.Format("EMRMasterT.ID IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0 AND ProviderID IN (%li))", nProvider);
			return strAns;
		} else {
			// No extra filter
			return _T("");
		}
	break;

	case 614:
		// (j.gruber 2007-11-01 11:58) - PLID 27814 - Marketing review report
		//provider handling is already taken care of
		return _T("");
	break;

	case 631:	//EMNs With Charges (j.jones 2008-07-03 13:31) - PLID 18534
		// (j.gruber 2015-03-18 09:08) - PLID 62611 - took out deleted providers from the filter

		//have to override the filter

		if (nProvider == -3) {
			CString strAns = " EMRMasterT.ID IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0 AND ProviderID IN (";
			CString strPart;
			for(int i=0; i < m_dwProviders.GetSize(); i++) {
				strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
				strAns += strPart;
			}
			strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
			return strAns;
		} else if (nProvider == -2) {
			CString strAns;
			strAns.Format(" EMRMasterT.ID NOT IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0)");
			return strAns;
		} else if (nProvider > 0) {
			CString strAns;
			strAns.Format("EMRMasterT.ID IN (SELECT EMRID FROM EMRProvidersT WHERE Deleted = 0 AND ProviderID IN (%li))", nProvider);
			return strAns;
		} else {
			// No extra filter
			return _T("");
		}
		
	break;

	case 689:	//EMN Charges and DiagCodes
		// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		// (j.gruber 2010-05-17 14:29) - PLID 38694 - have it filter on primary or secondary emn provider
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 5:				
					return _T("");
				break;	
				default:
					if (nProvider == -3) {
						CString strAns = " EMRMasterT.ID IN (SELECT EMRProvidersOuterT.EMRID FROM (SELECT EMRID, ProviderID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID, ProviderID FROM EMRSecondaryProvidersT WHERE DELETED = 0) EMRProvidersOuterT WHERE EMRProvidersOuterT.ProviderID IN (";
						CString strPart;
						for(int i=0; i < m_dwProviders.GetSize(); i++) {
							strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
							strAns += strPart;
						}
						strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
						return strAns;
					} else if (nProvider == -2) {
						CString strAns;
						strAns.Format(" EMRMasterT.ID NOT IN (SELECT EMRID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID FROM EMRSecondaryProvidersT WHERE DELETED = 0)");
						return strAns;
					} else if (nProvider > 0) {
						CString strAns;
						strAns.Format("EMRMasterT.ID IN (SELECT EMRProvidersOuterT.EMRID FROM (SELECT EMRID, ProviderID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID, ProviderID FROM EMRSecondaryProvidersT WHERE DELETED = 0) EMRProvidersOuterT WHERE EMRProvidersOuterT.ProviderID IN (%li))", nProvider);
						return strAns;
					} else {
						// No extra filter
						return _T("");
					}	
				break;
			}
		break;
		default:
			if (nProvider == -3) {
				CString strAns = " EMRMasterT.ID IN (SELECT EMRProvidersOuterT.EMRID FROM (SELECT EMRID, ProviderID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID, ProviderID FROM EMRSecondaryProvidersT WHERE DELETED = 0) EMRProvidersOuterT WHERE EMRProvidersOuterT.ProviderID IN (";
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					strAns += strPart;
				}
				strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
				return strAns;
			} else if (nProvider == -2) {
				CString strAns;
				strAns.Format(" EMRMasterT.ID NOT IN (SELECT EMRID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID FROM EMRSecondaryProvidersT WHERE DELETED = 0)");
				return strAns;
			} else if (nProvider > 0) {
				CString strAns;
				strAns.Format("EMRMasterT.ID IN (SELECT EMRProvidersOuterT.EMRID FROM (SELECT EMRID, ProviderID FROM EMRProvidersT WHERE DELETED = 0 UNION ALL SELECT EMRID, ProviderID FROM EMRSecondaryProvidersT WHERE DELETED = 0) EMRProvidersOuterT WHERE EMRProvidersOuterT.ProviderID IN (%li))", nProvider);
				return strAns;
			} else {
				// No extra filter
				return _T("");
			}	
		break;
		}
	break;

	// (j.jones 2010-04-26 14:48) - PLID 23597 - moved from extended filter to a proper provider filter
	case 568:	//Labs By Patient
		{

			if (nProvider == -3) {
				CString strAns = " LabsQ.ID IN (SELECT LabID FROM LabMultiProviderT WHERE ProviderID IN (";
				CString strPart;
				for(int i=0; i < m_dwProviders.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwProviders.GetAt(i));
					strAns += strPart;
				}
				strAns = strAns.Left(strAns.GetLength()-2) + ")) ";
				return strAns;
			} else if (nProvider == -2) {
				CString strAns;
				strAns.Format(" LabsQ.ID NOT IN (SELECT LabID FROM LabMultiProviderT)");
				return strAns;
			} else if (nProvider > 0) {
				CString strAns;
				strAns.Format(" LabsQ.ID IN (SELECT LabID FROM LabMultiProviderT WHERE ProviderID IN (%li))", nProvider);
				return strAns;
			} else {
				// No extra filter
				return _T("");
			}
		}
	break;

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetProviderFilter(nSubLevel, nSubRepNum);
}

//DRT 7/3/2007 - PLID 11920
CString CReportInfo::GetLocationWhereClause() const
{
	//Usage:  Add each report which needs a different WHERE clause.  If your report just wants the standard
	//	(standard = managed locations only), then do nothing.  You can use this to format the location 
	//	datalist in any variety of ways.

	switch(nID) {
		//DRT 7/3/2007 - PLID 11920 - All reports here want BOTH managed and unmanaged locations.  This is the same
		//	WHERE clause as the ResEntryDlg location combo, minus the active filter (reports always show inactive stuff)

	case 549:		//Appointment Duration By Type
	case 50:		//Appointments
	case 287:		//Appointments By Input Date
	case 288:		//Appointments By Patient Coordinator
	case 418:		//Appointments By Place of Service
	case 278:		//Appointments By Purpose
	case 442:		//Appointments By Referring Physician
	case 377:		//Appointments By Status
	case 427:		//Appointments By Template
	case 23:		//Appointments By Type
	case 193:		//Appointments Cancelled
	case 94:		//Appointments Requesting a MoveUp
	case 90:		//Appointments Without Prepayments
	case 432:		//Appts Cancelled, Not Resch
	case 318:		//Cnslt Cancelled, Not Resch(By Location)
	case 320:		//Cnslt Cancelled, Not Resch(By Pat. Coordinator)
	case 317:		//Cnslt Cancelled, Not Resch(By Patient)
	case 319:		//Cnslt Cancelled, Not Resch(By Ref. Source)
	case 384:		//Cnslt Cancelled, Not Resch(By Type)
	case 281:		//Consults To Procedures
	case 17:		//Daily Schedule
	case 19:		//Monthly Schedule
	case 93:		//No Show Patients By Referral
	case 304:		//No Show Patients(By Location)
	case 306:		//No Show Patients(By Patient Coordinator)
	case 303:		//No Show Patients(By Patient)
	case 305:		//No Show Patients(By Referral Source)
	case 381:		//No Show Patients(By Type)
	case 63:		//Scheduled And Not Billed	
	case 108:		//Scheduled with Pending Balances
	case 249:		//Scheduling Activity
	case 298:		//Scheduling Count
	case 500:		//Scheduling Productivity By Resource
	case 370:		//Scheduling Productivity By User
	case 264:		//Scheduling Totals
	case 395:		//Unapplied Superbill IDs
	case 16:		//Weekly Schedule
	case 330:		//Surgery List w/ Referrals
	case 357:		//Projected Surgery Income
	case 358:		//Actual Surgery Income
	case 540:		//Conversion Rate by Procedure
	case 197:		//Printed Superbills
	case 493:		//Surgeries Scheduled Without A Case History
	case 628:		//Appointments Without Allocations
	// (j.gruber 2008-07-24 12:22) - PLID 30829 - added the EMR reports because they had location as their extended filter
	case 254:
	case 255:
	case 256:
	// (j.gruber 2010-01-21 13:03) - PLID 34166
	case 689:
	// (j.luckoski 2012-06-21 1033) - PLID 48538
	case 739:
	// (j.luckoski 2012-06-13 10:59) - PLID 49354
	case 740:
	// (j.gruber 2009-12-23 13:39) - PLID 35771 - EMN Percentage by Data Code
	//case 690:	
		// (j.gruber 2010-07-21 12:02) - PLID 37826
	case 699:		//Scheduled And Not Billed by Billed Appts
		//TES 1/21/2015 - PLID 64114 - Scheduling Mix Rules By Resource
	case 758:
		return _T("TypeID = 1");
		break;

	default:
		//This should not change.  This is the default behavior for all reports not expressly changed above.  This line must be here.
		return _T("Managed = 1");
		break;
	}
}

CString CReportInfo::GetLocationFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 3:
		return ""; //Do nothing, because this is all handled in the GetSql.
		break;
	// (j.jones 2008-02-08 09:57) - PLID 28865 - the Inv. Items To Be Ordered report
	// now uses the standard location filter
	/*
	case 180:
		return ""; //Do nothing, because this is all handled in the GetSql.
		break;
	*/
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;
	case 284:
		return _T("");
		break;
	case 295:
		switch(nSubLevel) {
		case 1:
			break;	//do nothing, we want this to happen
		default:
			return _T("");	//pass on the filter
			break;
		}
		break;	// (j.jones 2016-03-21 10:45) - PLID 68620 - added a missing break
	case 369:	//Financial Activity by Superbill
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 0:
				case 1:
					return DefGetLocationFilter(nSubLevel, nSubRepNum);
				break;
			}
		break;			
		
		default:
			{
				//if they are filtering on a location, it will only create the subreport for any superbills that have such a location
				//BUT!  it will still create the main query for all superbill ids, which then looks really bad (and takes forever to generate)
				//so we must filter the main query for all superbill IDs that will end up in the subreport
				//
				//(e.lally 2008-09-19) PLID 6780 - Updated to handle filtering on multiple locations.
				CString str;
				if(nLocation > 0){
					str.Format("PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND LocationID = %li)", nLocation);
				}
				else if(nLocation == -2) {
					//This won't make any sense b/c the LocationID cannot be null, but we'll leave it up to the user to decide
						//not to filter that way.
					str.Format( "PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND LocationID Is Null)");
				}
				else if(nLocation == -3) {
					str.Format("PrintedSuperbillsT.SavedID IN (SELECT SuperbillID FROM ChargesT INNER JOIN LineItemT ON ChargesT.ID = LineItemT.ID WHERE Deleted = 0 AND Type = 10 AND LocationID In (");
					CString strPart;
					for(int i=0; i < m_dwLocations.GetSize(); i++) {
						strPart.Format("%li, ", (long)m_dwLocations.GetAt(i));
						str += strPart;
					}
					str = str.Left(str.GetLength()-2) + "))";
				}

				return _T(str);	//the query itself handles filtering this
			}
			break;
		}


	case 370: //Scheduling Productivity.
	case 500: //Scheduling Productivity by Resource
		return _T(""); //handled by query.
	break;
	case 379:
		//Products with Reserved Quantities
		return _T("");	//handled by query
		break;

	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;
	case 87:
		//Provider Multiple Fee Schedules
		switch(nSubLevel) {
		case 0:	//main level - we are filtering here
		{
			//(e.lally 2008-09-19) PLID 6780 - Updated to handle filtering on multiple locations.
			// (j.jones 2009-10-23 09:01) - PLID 18558 - the report now has more detailed location filtering which
			// this code also needs to be aware of
			CString str;
			if(nLocation > 0){
				str.Format("MultiFeeGroupsT.ID IN (SELECT FeeGroupID FROM MultiFeeLocationsT "
					"INNER JOIN LocationsT ON MultiFeeLocationsT.LocationID = LocationsT.ID "
					"WHERE LocationsT.Active = 1 AND TypeID = 1 AND (UsePOS = 1 OR Managed = 1) AND LocationID = %li)", nLocation);
			}
			else if(nLocation == -2) {
				//This won't make any sense b/c the LocationID cannot be null, but we'll leave it up to the user to decide
					//not to filter that way.
				str.Format( "MultiFeeGroupsT.ID IN (SELECT FeeGroupID FROM MultiFeeLocationsT WHERE LocationID Is Null)");
			}
			else if(nLocation == -3) {
				str.Format("MultiFeeGroupsT.ID IN (SELECT FeeGroupID FROM MultiFeeLocationsT "
					"INNER JOIN LocationsT ON MultiFeeLocationsT.LocationID = LocationsT.ID "
					"WHERE LocationsT.Active = 1 AND TypeID = 1 AND (UsePOS = 1 OR Managed = 1) AND LocationID In (");
				CString strPart;
				for(int i=0; i < m_dwLocations.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwLocations.GetAt(i));
					str += strPart;
				}
				str = str.Left(str.GetLength()-2) + "))";
			}

			return _T(str);
			break;
		}
		default:
			return _T("");
		}
		break;

	case 473://Service Codes by Billed Amount: the auto-filtering won't let me use this because it's not in a SELECT clause,
		//but darn it, I know it's a valid where clause.
		//(e.lally 2008-09-19) PLID 6780 - Updated to handle filtering on multiple locations.
		if (nLocation > 0) {
			CString strAns;
			strAns.Format( "LineItemT.LocationID = %d ", nLocation);
			return strAns;
		} else if(nLocation == -2) {
			//This won't make any sense b/c the LocationID cannot be null, but we'll leave it up to the user to decide
				//not to filter that way.
			CString strAns;
			strAns.Format( "(LineItemT.LocationID Is Null)");
			return strAns;
		}
		else if(nLocation == -3) {
			CString strAns;
			strAns.Format("LineItemT.LocationID In (");
			CString strPart;
			for(int i=0; i < m_dwLocations.GetSize(); i++) {
				strPart.Format("%li, ", (long)m_dwLocations.GetAt(i));
				strAns += strPart;
			}
			strAns = strAns.Left(strAns.GetLength()-2) + ")";
			return strAns;
		}else {
			return "";
		}
		break;

	case 439://Inventory Sales by Supplier
		//TES 2/28/2004: We want to show ALL products, even those that haven't happened to make a sale at this location.
		//(e.lally 2008-09-19) PLID 6780 - Updated to handle filtering on multiple locations. This particular filter is for 
			//a left join on Line_Items_T so as TES notes above, we still want products with no sales at these locations.
		if (nLocation > 0) {
			CString strAns;
			strAns.Format( "({%s.LocID} = %d OR {%s.LocID} Is Null)", strRecordSource, nLocation, strRecordSource);
			return strAns;
		} else if(nLocation == -2) {
			//(e.lally 2008-09-19) No Location - This won't make much sense, but we'll leave it up to the user to decide not to filter that way.
			//There are other items to take away this option altogether.
			CString strAns;
			strAns.Format( "({%s.LocID} Is Null)", strRecordSource);
			return strAns;
		}
		else if(nLocation == -3) {
			CString strAns;
			strAns.Format( "({%s.LocID} Is Null OR {%s.LocID} IN(", strRecordSource, strRecordSource);
			CString strPart;
			for(int i=0; i < m_dwLocations.GetSize(); i++) {
				strPart.Format("%li, ", (long)m_dwLocations.GetAt(i));
				strAns += strPart;
			}
			strAns = strAns.Left(strAns.GetLength()-2) + "))";
			return strAns;
		}else {
			return "";
		}
		break;

	case 495:
		//Supplies Below Minimum By Case History
		return _T("");	//handled by query
		break;

	case 496:
		//Supplies Below Minimum By Product
		return _T("");	//handled by query
		break;

	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			//default case returns as normal
			}
		}
		break;
	case 614:
		// (j.gruber 2007-11-01 11:58) - PLID 27814 - Marketing review report
		//location handling is already taken care of
		return _T("");
	break;

	// (j.gruber 2009-07-08 17:20) - PLID 34429 - only show products that are billable at that location
	case 331:
	case 368:
	case 371:
		{
			CString str;
			if(nLocation > 0){
				str.Format("ServiceT.ID IN (SELECT ProductID FROM ProductLocationInfoT WHERE LocationID = %li and Billable <> 0)", nLocation);
			}
			else if(nLocation == -2) {
				//This won't make any sense b/c the LocationID cannot be null, but we'll leave it up to the user to decide
					//not to filter that way.
				str.Format("ServiceT.ID IN (SELECT ProductID FROM ProductLocationInfoT WHERE LocationID Is Null AND Billable <> 0)");
			}
			else if(nLocation == -3) {
				str.Format("ServiceT.ID IN (SELECT ProductID FROM ProductLocationInfoT WHERE LocationID In (");
				CString strPart;
				for(int i=0; i < m_dwLocations.GetSize(); i++) {
					strPart.Format("%li, ", (long)m_dwLocations.GetAt(i));
					str += strPart;
				}
				str = str.Left(str.GetLength()-2) + ") AND Billable <> 0)";
			}
			return _T(str);
		}
	break;

	case 687:	//Weekly Advertising Analysis
		return _T("");
		break;

	case 689:	//EMN Charges and DiagCodes
		// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		switch(nSubLevel) {
			case 1:
				switch (nSubRepNum) {
					case 5:				
						return _T("");
					break;	
				}
			break;
		}
	break;

	case 738: // Weekly Advertising Analysis By Top Level Referral
		// (r.gonet 06/27/2012) - PLID 47647 - Query handles this.
		return _T("");
		break;

	case 453:	//To-Do Alarm Preview (PP)
		//Because to-do's don't have locations, this is unlikely to ever be used 'for real'.  Therefore, I'm 
		//	hijacking it to be used as a category filter instead of a location filter.  All the other filters
		//	are already taken.
		if (nLocation > 0) {
			return _T(FormatString("CategoryID = %li", nLocation));
		}
		break;

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}	

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetLocationFilter(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetPatientFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
//	case 239:
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
		switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;
	case 380:
	case 393:
	case 394:
	case 416:
		return _T("");	//we're using the patient id to hold whether or not to show cancelled appts, so we don't need this
		break;
	case 295:
		switch(nSubLevel) {
		case 1:
			break;	//do nothing, we want this to happen
		default:
			return _T("");	//pass on the filter
			break;
		}
		break;	// (j.jones 2016-03-21 10:45) - PLID 68620 - added a missing break
	case 261: //Audit Trail - Scheduler
	case 668: //Historical Demographic Information //TES 6/11/2009 - PLID 34607
		//This is done in the GetRecordset function.
		return _T("");
		break;


	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;

	case 473://Service Codes by Billed Amount: the auto-filtering won't let me use this because it's not in a SELECT clause,
		//but darn it, I know it's a valid where clause.
		if (nPatient > 0) {
			CString strAns;
			strAns.Format(_T("LineItemT.PatientID = %d"), nPatient);
			return strAns;
		} else {
			return _T("");
		}
		break;

	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
				//default case returns as normal
			}
		}
		break;
	// (j.jones 2007-07-20 10:36) - PLID 26751 - removed subreport
	/*
	case 567:	//Lab Report preview
		{
			switch(nSubLevel) {
			case 1:
				//all subreports should not filter
				return "";
				break;
			}
		}
		break;
	*/

	case 689:	//EMN Charges and DiagCodes
		// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 5:				
					return _T("");
				break;	
			}
		break;
		}
	break;

	case 322:	//Batch Payments
	case 537:	//Electronic Remittance
		// (j.jones 2009-09-25 13:00) - PLID 34453 - do not filter the sub-report by patients
		switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;

	case 663:
	case 693:
		// (j.gruber 2010-02-10 11:32) - PLID 37148 - filtered for this manually in the query
		// (j.gruber 2010-02-17 10:52) - PLID 37378 - also this one
		return _T("");

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetPatientFilter(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetDateFilterField(long nSubLevel, long nSubRepNum) const
{
	switch(nID){
	case -1: break;// This line is here just to avoid a warning so you can take it out when you add an actual explicit handler
	
	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	

	// Anything not specifically handled pull the default
	return DefGetDateFilterField(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetDateFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 19: // MonthlyScheduleR
	case 394: //Monthly Schedule (PP)
		if (nDateRange != 0 && bOneDate) {
			// Need these for generating the filter
			CString strAns;
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			
			// Get the date of one month from DateTo
			COleDateTime dtNewDateTo = DateTo + COleDateTimeSpan(GetDaysInMonth(DateTo.GetMonth(), DateTo.GetYear()), 0, 0, 0);

			// Make the filter
			strAns.Format("({%s.%s} >= #%d/%d/%d# AND {%s.%s} < #%d/%d/%d#)", strRecordSource, 
				strDateType, DateTo.GetMonth(), DateTo.GetDay(), DateTo.GetYear(), strRecordSource, 
				strDateType, dtNewDateTo.GetMonth(), dtNewDateTo.GetDay(), dtNewDateTo.GetYear());
			return strAns;
		}
		break;
	case 16: // WeeklyScheduleR
		if (nDateRange != 0 && bOneDate) {
			// Need these for generating the filter
			CString strAns;
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			
			// Get the date of one week from DateTo
			COleDateTime dtNewDateTo = DateTo + COleDateTimeSpan(7, 0, 0, 0);

			// Make the filter
			strAns.Format("({%s.%s} >= #%d/%d/%d# AND {%s.%s} < #%d/%d/%d#)", strRecordSource, 
				strDateType, DateTo.GetMonth(), DateTo.GetDay(), DateTo.GetYear(), strRecordSource, 
				strDateType, dtNewDateTo.GetMonth(), dtNewDateTo.GetDay(), dtNewDateTo.GetYear());
			return strAns;
		}
		break;
	/*case 187: // Daily Batch
		if (nDateRange > 0) {
			CString strAns;
			COleDateTime dtToPlusOne = DateTo + COleDateTimeSpan(1, 0, 0, 0);
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			// "date = DateTo" is really "date >= DateTo && date < DateTo+1"
			strAns.Format("({%s.%s} >= #%d/%d/%d# AND {%s.%s} < #%d/%d/%d#)", strRecordSource, 
				strDateType, DateTo.GetMonth(), DateTo.GetDay(), DateTo.GetYear(), strRecordSource, 
				strDateType, dtToPlusOne.GetMonth(), dtToPlusOne.GetDay(), dtToPlusOne.GetYear());
			return strAns;
		}
		break;*/
	case 78: // PatientBDay
		if (nDateRange > 0) {
			ASSERT(!bOneDate);
			if (!bOneDate) {
				CString strAns;
				int nToVal = DateTo.GetMonth()*100 + DateTo.GetDay(); //(3/12 = 312)
				int nFromVal = DateFrom.GetMonth()*100 + DateFrom.GetDay();
				
				//must be >= in case we choose the same day for both!
				if(nToVal >= nFromVal){
					strAns.Format("({PatientBDayQ.MonthDay} >= %li AND {PatientBDayQ.MonthDay} <= %li)", nFromVal, nToVal);
				}
				else {
					strAns.Format("( ({PatientBDayQ.MonthDay} >= %li AND {PatientBDayQ.MonthDay} <= 1231) OR ({PatientBDayQ.MonthDay} <= %li AND {PatientBDayQ.MonthDay} >= 101}) )", nFromVal, nToVal);
				}
				return strAns;
			}
		}
		break;
	case 151: //AR
	case 177: //AR by Amount
	case 238: //AR by Patient
	case 715: //AR By Category // (j.gruber 2011-10-07 13:30) - PLID 45745
		return _T(""); //All Date handling is taken care of inside the query.
		break;

	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;

	case 328:	//Refractive Outcomes
		return _T("");	//query handles it
		break;

	case 273: //Consults Without Surgeries
		return _T(""); //All Date handling is taken care of inside the query.
		break;

	case 267:	//Inventory Values
		return _T("");	//query handles it
		break;
	
	case 284:
		return _T("");
		break;

	case 137: //Financial Summary
		if(nDetail == 1) {
			return _T(""); //If it's detailed, then everything's handled in the report, with like formulas and stuff.
		}
		else {
			//TES 3/2/04: We now want to include everything in the report even in the summary version, to show AR progression.
			//TES 11/11/05: ...but only if they don't have that preference checked.
			// (j.gruber 2010-03-11 10:13) - PLID 37713 - and we aren't calculating it from the query
			// (d.thompson 2012-08-07) - PLID 51969 - Changed default to Yes
			if(!GetRemotePropertyInt("Reports_SuppressAR", 1, 0, "<None>", true) ) {
				if (!GetRemotePropertyInt("FinancialSummaryQueryAR", 0, 0, "<None>")) {
					return _T("");			
				}
			}
		}
		break;

	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			//default case returns as normal
			}
		}
		break;
	case 281:	//Consults to Procedures
		return _T("");		//date handling taken care of in the query
		break;

	case 370: //Scheduling Productivity.
	case 500: //Scheduling Productivity by Resource
		return _T(""); //handled in the query.
		break;

	case 372:	//Patient To Do List By Assign To
		if(nExtraID != -1) {
			//DRT 9/23/03 - If there is an extra id, we are filtering from the todo alarm itself.  In that case, we 
			//		want to filter the dates a little differently ... The remind time will contain the actual time of 
			//		'start reminding', so we need to make the filter do <= date + time.  Right now it does < date + 1 day.
			CString strAns;
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			long nHour;
			CString strAmPm = "AM";
			nHour = DateTo.GetHour();
			if(nHour == 12)
				strAmPm = "PM";
			if(nHour > 12) {
				nHour -= 12;	//set it back 12 hours
				strAmPm = "PM";
			}				
			strAns.Format("({%s.%s} >= #%d/%d/%d# AND {%s.%s} <= #%d/%d/%d %d:%d %s#)", strRecordSource, 
				strDateType, DateFrom.GetMonth(), DateFrom.GetDay(), DateFrom.GetYear(), strRecordSource, 
				strDateType, DateTo.GetMonth(), DateTo.GetDay(), DateTo.GetYear(), nHour, DateTo.GetMinute(), strAmPm);

			return _T(strAns);
		}
		break;
	case 453:	//To-Do Alarm Preview (PP)
		//copied from case 372
		if(nExtraID != -1) {
			//DRT - If there is an extra id, we are filtering from the todo alarm itself.  In that case, we 
			//		want to filter the dates a little differently ... The remind time will contain the actual time of 
			//		'start reminding', so we need to make the filter do <= date + time.  Right now it does < date + 1 day.
			CString strAns;
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			long nHour;
			CString strAmPm = "AM";
			nHour = DateTo.GetHour();
			if(nHour == 12)
				strAmPm = "PM";
			if(nHour > 12) {
				nHour -= 12;	//set it back 12 hours
				strAmPm = "PM";
			}				
			strAns.Format("({%s.%s} >= #%d/%d/%d# AND {%s.%s} <= #%d/%d/%d %d:%d %s#)", strRecordSource, 
				strDateType, DateFrom.GetMonth(), DateFrom.GetDay(), DateFrom.GetYear(), strRecordSource, 
				strDateType, DateTo.GetMonth(), DateTo.GetDay(), DateTo.GetYear(), nHour, DateTo.GetMinute(), strAmPm);

			return _T(strAns);
		}
		break;

	case 429:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;

	case 434: //Statements by Last Send Date
	case 435: //Statements by Loc by Last Send Date
	case 436: //Statements by Last Sent Date 7.0
	case 437: //Statements by Loc by Last Sent Date 7.0
		{
			CString strAns;
			//We want anything where the lastsenddate is not greater than the given date.
			CString strField = GetDateFilterField(nSubLevel, nSubRepNum);
			strAns.Format("({%s.%s} Is Null OR NOT ({%s.%s} > #%d-%02d-%02d#))", strRecordSource, strField, strRecordSource, strField, 
	 			DateTo.GetYear(), DateTo.GetMonth(), DateTo.GetDay());
			return _T(strAns);
		}
		break;

	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;

	case 473://Service Codes by Billed Amount: the auto-filtering won't let me use this because it's not in a SELECT clause,
		//but darn it, I know it's a valid where clause.
		{
			if(nDateRange > 0) {
				CString strAns;
				COleDateTime dtToPlusOne = DateTo + COleDateTimeSpan(1, 0, 0, 0);
				CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
				strAns.Format("(%s >= #%d-%02d-%02d# AND %s < #%d-%02d-%02d#)",  
					strDateType, DateFrom.GetYear(), DateFrom.GetMonth(), DateFrom.GetDay(), 
					strDateType, dtToPlusOne.GetYear(), dtToPlusOne.GetMonth(), dtToPlusOne.GetDay());
				return strAns;
			}
			else {
				return "";
			}
		}
		break;

	case 480://Conversion Rate by Referral Source: handled by the query.
		return _T("");
		break;

	case 439://Inventory Sales by Supplier
	//TES 2/28/2004: We want to show ALL products, even those that haven't happened to make a sale in this date range.		
	if (nDateRange > 0) {
		// Get some values used in the daterange filter
		CString strAns;
		COleDateTime dtToPlusOne = DateTo + COleDateTimeSpan(1, 0, 0, 0);
		CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);

		// "date >= DateFrom && date <= DateTo" is really "date >= DateFrom && date < DateTo+1"
		strAns.Format("(({%s.%s} >= #%d-%02d-%02d# AND {%s.%s} < #%d-%02d-%02d#) OR {%s.%s} Is Null)", strRecordSource, 
			strDateType, DateFrom.GetYear(), DateFrom.GetMonth(), DateFrom.GetDay(), strRecordSource, 
			strDateType, dtToPlusOne.GetYear(), dtToPlusOne.GetMonth(), dtToPlusOne.GetDay(), strRecordSource, strDateType);
		return strAns;
		
	} else {
		return _T("");
	}
	break;

	case 170: //AR By Ins Co, handled by query.
	case 659: // (z.manning 2009-03-25 11:06) - PLID 19120 - AR By Financial Class
		return _T("");
		break;

	case 488: //Applies Across Date, handled by query.
		return _T("");
		break;

	case 494: //Service Codes Credentialed By Provider, handled by query
		return _T("");
		break;

	case 563: //Adjustments To Prior Receivables, handled by query
		return _T("");
		break;

	case 601: // Waiting List
		// (d.moore 2007-07-18 13:09) - PLID 26537 - Date filtering on Requested Date and Created Date
		if (nDateRange > 0) {
			if (nDateFilter == 1) {
				CString strDateQuery;
				// (j.jones 2014-08-22 11:14) - PLID 63186 - this now also filters out appointments
				// with a start time prior to the filtered date
				strDateQuery.Format(
					" WaitingListItemT.StartDate <= '%s' AND WaitingListItemT.EndDate >= '%s' "
					" AND (AppointmentsT.ID Is Null OR AppointmentsT.StartTime >= '%s') ",
					FormatDateTimeForSql(DateTo, dtoDate), FormatDateTimeForSql(DateFrom, dtoDate),	//these only need dtoDate
					FormatDateTimeForSql(DateFrom, dtoDateTime));	//this needs dtoDateTime
				return _T(strDateQuery);
			}
			else if (nDateFilter == 2) {
				CString strDateQuery;
				strDateQuery.Format(
					" WaitingListT.CreatedDate >= '%s' AND WaitingListT.CreatedDate <= '%s' ", 
					FormatDateTimeForSql(DateFrom, dtoDate), FormatDateTimeForSql(DateTo, dtoDate));
				return _T(strDateQuery);
			}
		}
		break;

	case 603: // Financial Activity - Today's Service Date
		{
		// (d.moore 2007-07-24) - PLID 22487 - Limit the report to todays date only.
		// (c.haag 2016-03-10) - PLID 68565 - This report makes use of AllFinancialQ, and must therefore
		// have its date filter assigned before this point in time for AllFinancialQ to be able to filter on the
		// correct dates. Rather than doing things the old way, we will use the report object's date filter
		// which was assigned in CReports::PrintReport.
		//return _T("dbo.AsDateNoTime(TDate) = dbo.AsDateNoTime(GetDate())");
		return _T(FormatString("( %s  >= '%s' AND  %s < DateAdd(day, 1, '%s'))"
			, strDateFilterField, FormatDateTimeForSql(DateFrom)
			, strDateFilterField, FormatDateTimeForSql(DateTo)));
		}
		break;
	case 614:
		// (j.gruber 2007-11-01 11:58) - PLID 27814 - Marketing review report
		//date handling is already taken care of
		return _T("");
	break;

	// (j.gruber 2008-07-21 17:00) - PLIDs 30797,30798,30800 - these reports can use the all years filter
	case 633: // (j.gruber 2008-07-14 17:23) - Number of Charges by Prov Monthly
	case 634: //Number of Charges By Prov Quarterly
	case 635: //Number of Charges by Category Segment Monthly
	case 636: //Number of Charges by Category Segment Quarterly
	case 637: //Sum of Charges By Prov Monthly
	case 638: //Sum of Charges By Prov Quarterly
	case 639: //Sum of Charges By Category Segment Monthly
	case 640: //Sum of Charges By Category Segment Quarterly
	case 641: //Resp. Percentage by Prov Monthly
	case 642: //Resp. Percentage by Prov Quarterly
	case 643: //Resp. Percentage by Cat Seg Monthly
	case 644: //Resp. Percentage by CatSeg Quarterly
	case 645: //Top Service Codes Billed by Count Monthly
	case 646: //Top Service Codes Billed by Count Quarterly
	case 647: //Top Service Codes Billed by Amount Monthly
	case 648: //Top Service Codes Billed by Amount Quarterly

		if (bUseAllYears) {
			//service date
			if (nDateRange > 0) {
				ASSERT(!bOneDate);
				if (!bOneDate) {
					CString strAns;
					int nToVal = DateTo.GetMonth()*100 + DateTo.GetDay(); //(3/12 = 312)
					int nFromVal = DateFrom.GetMonth()*100 + DateFrom.GetDay();
					CString strField;
					if (nDateFilter == 1) {
						strField.Format("{%s.TMonthDay}", strRecordSource);
					}
					else {
						strField.Format("{%s.IMonthDay}", strRecordSource);
					}
			
					//must be >= in case we choose the same day for both!
					if(nToVal >= nFromVal){
						strAns.Format("(%s >= %li AND %s <= %li)", strField, nFromVal, strField, nToVal);
					}
					else {
						strAns.Format("( (%s >= %li AND %s <= 1231) OR (%s <= %li AND %s >= 101}) )", strField, nFromVal, strField, strField, nToVal, strField);
					}
					return strAns;
				}
			}
		}
		else {
			return DefGetDateFilter(nSubLevel, nSubRepNum);
		}
	break;

	// (j.gruber 2008-07-21 17:00) - PLIDs 30797 - these reports can use the all years filter
	case 649: //Number of Bills by Master Procedure Monthly
	case 650: //Number of Bills by Master Procedure Quarterly


		if (bUseAllYears) {
			//service date
			if (nDateRange > 0) {
				ASSERT(!bOneDate);
				if (!bOneDate) {
					CString strAns;
					int nToVal = DateTo.GetMonth()*100 + DateTo.GetDay(); //(3/12 = 312)
					int nFromVal = DateFrom.GetMonth()*100 + DateFrom.GetDay();
					CString strField;
					strField.Format("{%s.TMonthDay}", strRecordSource);
								
					//must be >= in case we choose the same day for both!
					if(nToVal >= nFromVal){
						strAns.Format("(%s >= %li AND %s <= %li)", strField, nFromVal, strField, nToVal);
					}
					else {
						strAns.Format("( (%s >= %li AND %s <= 1231) OR (%s <= %li AND %s >= 101}) )", strField, nFromVal, strField, strField, nToVal, strField);
					}
					return strAns;
				}
			}
		}
		else {
			return DefGetDateFilter(nSubLevel, nSubRepNum);
		}
	break;

	// (c.haag 2009-01-26 13:02) - PLID 32188 - YTD date filter for the Advertising Cost Analysis report
	case 656:
		if (1 == nSubLevel) {
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
			COleDateTime dtFrom, dtTo;
			dtFrom = COleDateTime::GetCurrentTime();
			dtTo.SetDate(dtFrom.GetYear(), dtFrom.GetMonth(), dtFrom.GetDay());
			dtTo += COleDateTimeSpan(1,0,0,0);
			dtFrom.SetDate(dtFrom.GetYear(),1,1);
			// "date >= DateFrom && date <= DateTo" is really "date >= DateFrom && date < DateTo+1"
			CString strAns = FormatString("({%s.%s} >= #%d-%02d-%02d# AND {%s.%s} < #%d-%02d-%02d#)", strRecordSource, 
				strDateType, dtFrom.GetYear(), dtFrom.GetMonth(), dtFrom.GetDay(), strRecordSource, 
				strDateType, dtTo.GetYear(), dtTo.GetMonth(), dtTo.GetDay());
			return strAns;
		} else {
			return DefGetDateFilter(nSubLevel, nSubRepNum);
		}
		break;

	// (j.luckoski 2012-06-11 11:44) - PLID 49354 - Appt can be anytime before to date, but charges must be inside date range
	case 740:
		//CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);
		// (j.luckoski 2012-06-21 10:45) - PLID 49354 - Scoped the variables to this case only
		{	
			if(nDateRange > 0) {
				// format datetimeforsql.
				// (j.luckoski 2012-06-21 17:13) - PLID 49354 - Made dates also equal to as it makes more sense.
				// (j.luckoski 2012-07-09 10:43) - PLID 49354 - Realised into ChargeTDate
				CString strAns = FormatString("({AppointmentsT.Date} <= #%d-%02d-%02d# AND ({RevenueQ.ChargeTDate} >= #%d-%02d-%02d# AND {RevenueQ.ChargeTDate} <= #%d-%02d-%02d#))", 
					DateTo.GetYear(), DateTo.GetMonth(), DateTo.GetDay(),
					DateFrom.GetYear(), DateFrom.GetMonth(), DateFrom.GetDay(), 
					DateTo.GetYear(), DateTo.GetMonth(), DateTo.GetDay());
				return strAns;
			} else {
				return DefGetDateFilter(nSubLevel, nSubRepNum);
			}
		}
		break;

	case 687:	// Weekly Advertising Analysis
		return _T("");	//query handles it
		break;

	case 689:	//EMN Charges and DiagCodes
	// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		switch(nSubLevel) {
			case 1:
				switch (nSubRepNum) {
					case 5:				
						return _T("");
					break;	
				}
			break;
		}
	break;

	case 366:	//Payments Under Allowed Amount (by Insurance)

		// (j.jones 2011-03-17 11:31) - PLID 42570 - the payments under allowed amount calculates
		// based on all payments applied to a given charge, so the filter needs to return whether
		// any payment applied to the charge is in our date range
		// (j.jones 2015-11-25 12:08) - PLID 67616 - the date filter needs to be < DateTo+1, not <= DateTo,
		// because input dates have times
		if(nDateRange > 0) {
			CString strFilter, strDateField = "Date";
			COleDateTime dtToPlusOne = DateTo + COleDateTimeSpan(1, 0, 0, 0);

			if (nDateFilter == 1) {
				//service date
				strDateField = "Date";
			}
			else if (nDateFilter == 2) {
				//input date
				strDateField = "InputDate";
			}

			//if any payment is applied to the given charge resp and is in our date range,
			//we want to see this result
			strFilter.Format(" ChargeRespID IN (SELECT AppliesT.RespID "
				"	FROM AppliesT "
				"	INNER JOIN LineItemT ON AppliesT.SourceID = LineItemT.ID "
				"	WHERE LineItemT.Deleted = 0 AND LineItemT.Type = 1"
				"	AND LineItemT.%s >= #%d-%02d-%02d# AND LineItemT.%s < #%d-%02d-%02d#) ",
				strDateField, DateFrom.GetYear(), DateFrom.GetMonth(), DateFrom.GetDay(),
				strDateField, dtToPlusOne.GetYear(), dtToPlusOne.GetMonth(), dtToPlusOne.GetDay());
			return _T(strFilter);
		}
		break;

	case 738: // Weekly Advertising Analysis By Top Level Referral
		// (r.gonet 06/27/2012) - PLID 47647 - Query handles this.
		return _T("");
		break;

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of the filter explicitly, use the default mechanism
	return DefGetDateFilter(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetExtraFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 15:
	case 110:	//Patient To do list
	case 419:
		if(nExtraID > 0)
		{
			CString strAns;
			strAns.Format(" StateID = %li", nExtraID);
			return strAns;
		}
		break;	
	case 154: // Financial Activity - Monthly
		// (d.thompson 2012-08-13) - PLID 51969 - Changed default to Yes
		if(GetRemotePropertyInt("Reports_SuppressAR", 1, 0, "<None>", true)) {
			//Handle this the normal way.
			break;
		}
		else {
			//TES 2/27/2004: This is all done in the report now.
			return "";
		}
		break;
	case 221: {	//contact notes
		CString strAns;
		if(nExtraID == -1)
			strAns.Format(" Notes.PersonID = %i", GetActiveContactID());
		else
			strAns.Format(" Notes.PersonID = %i AND Notes.Category = %i", GetActiveContactID(), nExtraID);

		return strAns;
			  }
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;
	case 169://Patient Statement
	case 353: //Beta Patient Statements
	case 434: //Patient Statements by Last Sent Date
	case 436: //Patient Statements by Last Sent Date 7.0
	
	// (j.gruber 2007-01-10 12:50) - PLID 24201 - this should be 483, 484 is the indiviual report
	//case 484: //Patient Statement by Provider 
	case 483: //Patient Statement by Provider 
	case 485: //Patient Statement By Provider 7.0

		{ 
			if (saExtraValues.GetSize() > 0) {
				return saExtraValues[0]; //Statements don't allow multiple
			}
			else {
				return "";
			}
		}
		break;

	case 499: //Outstanding Gift Certificate Balances
		{ // (a.walling 2007-03-22 15:04) - PLID 25113
			if (saExtraValues.GetSize() > 0) {
				return ""; // don't exclude anything
			} else {
				// only show non-expired GCs
				return " ( (ExpDate >= DATEADD(d, -1, GetDate())) OR ExpDate IS NULL)";
			}
		}
	case 545: //Gift Certificates Redeemed
	case 546: //Gift Certificates Sold
		{ // (j.jones 2009-10-02 10:04) - PLID 35732 - enabled showing by default
			if (saExtraValues.GetSize() == 0) {
				return ""; // don't exclude anything
			} else {
				// only show non-expired GCs
				return " ( (ExpDate >= DATEADD(d, -1, GetDate())) OR ExpDate IS NULL)";
			}
		}		
		break;

	case 337://Patient Statements by Location
	case 355: //Beta Patient Statements By Location
	case 435: //Patient Statements by Loc by Last Sent
	case 437: //Pateint Statements by Loc by Last Sent Date 7.0

		// (j.gruber 2007-03-12 16:05) - PLID 22121 - made the statement by location filter by locations also
		{ 
			if (saExtraValues.GetSize() > 0) {

				//take off the location ID
				CString str = saExtraValues.GetAt(0);
				long nResult = str.Find(":");
				str = str.Right(str.GetLength() - (nResult + 1));
				
				return str; //Statements don't allow multiple
			}
			else {
				return "";
			}
		}
		break;
	

		// (j.gruber 2007-05-04 10:51) - PLID 25872 - add extended filter to not use non patient appts
	case 583: //Time Scheduled Prod by Time Logs
		if (saExtraValues.GetSize() > 0) {
			//there is only one selection, so we are here
			return " (AppointmentsT.PatientID > 0) ";
		}
		else {
			return "";
		}
	break;


	// (j.gruber 2008-06-26 17:18) - PLID 26137 - added report
	case 630: //Time Scheduled Prod by Time Logs by Location
		if (saExtraValues.GetSize() > 0) {
			//there is only one selection, so we are here
			return " (AppointmentsT.PatientID > 0) ";
		}
		else {
			return "";
		}
	break;

	
	case 670: // (z.manning 2009-07-10 17:23) - PLID 22054 - Time Scheduled Prod by Scheduler Templates
		// (j.jones 2011-01-07 15:00) - PLID 41782 - this is now AppointmentsQ, it's a subquery
		if (saExtraValues.GetSize() > 0) {
			//there is only one selection, so we are here
			return " (COALESCE(Appt.PatientID, -1) <> -25) ";
		}
		else {
			return "";
		}
	break;


	case 245: 	//Order
	{
		CString strAns;
		strAns.Format(" {OrderT.ID} = %li", nExtraID);	//pass the order id via the extra filter
		return strAns;
	}
	case 227:	//Quote
	{
		CString strAns;
		strAns.Format(" {BillID} = %li", nExtraID);	//pass the quote ID via the extra filter
		return strAns;
	}
	case 608:	//Package Quote
	{
		// (j.gruber 2007-08-14 13:04) - PLID 25851 - added package quote
		CString strAns;
		strAns.Format(" {QuoteID} = %li", nExtraID);	//pass the quote ID via the extra filter
		return strAns;
	}
	case 226:	//Billing Dialog
		{
			// (j.gruber 2014-03-26 15:52) - PLID 61479 - added tables that have BillId in them, so this needs to change
			switch (nSubLevel) {
			case 0:
				{
					CString strAns;
					strAns.Format(" {BillsT.ID} = %li", nExtraID);	//pass the bill ID via the extra filter
					return strAns;
				}
			case 1:
				{
					CString strAns;
					strAns.Format(" {BillID} = %li", nExtraID);	//pass the bill ID via the extra filter
					return strAns;
				}
			}

		}
	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
				//default handling
			}
		}
		break;
	case 235:	//Payment Dialog
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			default:
				CString strAns;
				strAns.Format(" {PaymentsT.ID} = %li", nExtraID);	//pass the payment ID via the extra filter
				return strAns;
				break;
			}
		}
		break;
	case 429:	//Template Listing
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			default:
				CString strAns;
				if(nExtraID != -1) {
					strAns.Format(" {TemplateID} = %li", nExtraID);	//pass the template ID via the extra filter
				}
				else {
					strAns = "";
				}
				return strAns;
				break;
			}
		}
		break;
//	case 239:	//daily schedule (used from the scheduling module)
	case 380:
	case 416:
	case 393:	//Weekly schedule
	case 394:	//Monthly schedule
		{
			CString strAns;
			if(saExtraValues.GetSize()) {
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					CString str;
					str.Format(" OR {AptTypeT.ID} = %s", saExtraValues[i]);
					
					//add this piece onto the whole string
					strAns += str;

				}

				strAns.TrimLeft(" OR ");
				strAns = " (" + strAns + ") ";
			}
			return strAns;
		}
	case 240:	//Patient Notes
		{
			CString strAns;
			if(nExtraID != -1)	//only filter if the value is not -1 (all categories)
				strAns.Format(" {Notes.Category} = %li", nExtraID);
			return strAns;
		}
	case 151: //AR
	case 177: //AR by Amount
	case 238: //AR by Patient
	case 170: //AR by Insurance Co
	case 385: //AR by Ins Co Office
	case 388: //AR by Patient Responsibility
	case 391: //AR Split by Responsibility
	case 659: // (z.manning 2009-03-25 11:06) - PLID 19120 - AR By Financial Class
	case 715: // (j.gruber 2011-10-07 13:31) - PLID 45745
		{
			//TES 3/5/04: AR by Ins Co has subreports now.
			//TES 5/2/05: As does AR Split by Responsibility
			if(nSubLevel != 0) {
				return "";
			}
			//TES 1/18/05 - This used to be hardcoded to Service Date, because the only other option was Input Date, and aging
			//was never done based on the input date.  But now there's the assignment date, which does get aged on (that's
			//the whole point).
			CString strDateField;
			if(strDateFilterField == "IDate") strDateField = "TDate";
			else strDateField = strDateFilterField;

			CString strAns;
			COleDateTime dtFrom, dtTo;
			COleDateTimeSpan dtFromSpan, dtToSpan;
			int nAge = saExtraValues.GetSize()?atol(saExtraValues[0]):0; //The bucket filter doesn't have a {Multiple} row.
			switch(nAge){
			case 1:
				dtFromSpan.SetDateTimeSpan(-30,0,0,0);
				dtToSpan.SetDateTimeSpan(0,0,0,0);
				break;
			case 2:
				dtToSpan.SetDateTimeSpan(-31,0,0,0);
				dtFromSpan.SetDateTimeSpan(-60,0,0,0);
				break;
			case 3:
				dtToSpan.SetDateTimeSpan(-61,0,0,0);
				dtFromSpan.SetDateTimeSpan(-90,0,0,0);
				break;
			case 4:
				dtToSpan.SetDateTimeSpan(-91,0,0,0);
				dtFromSpan.SetDateTimeSpan(-120,0,0,0);
				break;
			case 5:
				dtToSpan.SetDateTimeSpan(-121,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.%s} <= %s", strRecordSource, strDateField, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 6:
				dtToSpan.SetDateTimeSpan(-91,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.%s} <= %s", strRecordSource, strDateField, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 7:
				dtToSpan.SetDateTimeSpan(-61,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.%s} <= %s", strRecordSource, strDateField, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 8:
				dtToSpan.SetDateTimeSpan(-31,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.%s} <= %s", strRecordSource, strDateField, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			default:
				return "";
				break;
			}
			dtTo = DateTo + dtToSpan;
			dtFrom = DateTo + dtFromSpan;
			strAns.Format("{%s.%s} <= %s AND {%s.%s} >= %s", strRecordSource, strDateField, dtTo.Format("'%m/%d/%Y'"), strRecordSource, strDateField, dtFrom.Format("'%m/%d/%Y'") );
			return strAns;
			break;
		}
	case 390: //AR by Ins Co by Claim Date
		{
			//NOTE:  It's cool that the below is hard-coded to ClaimDate, because, as you'll recall, the
			//aging is ALWAYS based on the service date (as opposed to the input date).
			CString strAns;
			COleDateTime dtFrom, dtTo;
			COleDateTimeSpan dtFromSpan, dtToSpan;
			int nAge = saExtraValues.GetSize()?atol(saExtraValues[0]):0; //The bucket filter doesn't have a {Multiple} row
			switch(nAge){
			case 1:
				dtFromSpan.SetDateTimeSpan(-30,0,0,0);
				dtToSpan.SetDateTimeSpan(0,0,0,0);
				break;
			case 2:
				dtToSpan.SetDateTimeSpan(-31,0,0,0);
				dtFromSpan.SetDateTimeSpan(-60,0,0,0);
				break;
			case 3:
				dtToSpan.SetDateTimeSpan(-61,0,0,0);
				dtFromSpan.SetDateTimeSpan(-90,0,0,0);
				break;
			case 4:
				dtToSpan.SetDateTimeSpan(-91,0,0,0);
				dtFromSpan.SetDateTimeSpan(-120,0,0,0);
				break;
			case 5:
				dtToSpan.SetDateTimeSpan(-121,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.ClaimDate} <= %s", strRecordSource, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 6:
				dtToSpan.SetDateTimeSpan(-91,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.ClaimDate} <= %s", strRecordSource, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 7:
				dtToSpan.SetDateTimeSpan(-61,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.ClaimDate} <= %s", strRecordSource, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			case 8:
				dtToSpan.SetDateTimeSpan(-31,0,0,0);
				dtTo = DateTo + dtToSpan;
				strAns.Format("{%s.ClaimDate} <= %s", strRecordSource, dtTo.Format("'%m/%d/%Y'") );
				return strAns;
				break;
			default:
				return "";
				break;
			}
			dtTo = DateTo + dtToSpan;
			dtFrom = DateTo + dtFromSpan;
			strAns.Format("{%s.ClaimDate <= %s AND {%s.ClaimDate} >= %s", strRecordSource, dtTo.Format("'%m/%d/%Y'"), strRecordSource, dtFrom.Format("'%m/%d/%Y'") );
			return strAns;
			break;
		}
	case 257:	//EMR Dialog
		{
			CString strAns;
			strAns.Format(" {EMRMasterT.ID} = %li", nExtraID);	//pass the payment ID via the extra filter
			return strAns;
		}
	case 230:	//Ebilling List
		{
			//Passed in by ebillingformdlg.cpp
			if (saExtraValues.GetSize() > 0) {
				return saExtraValues[0];
			}
			else {
				return "";
			}
			break;
		}
	case 228:	//Paper Claim List
		{
			//Passed in by batchpringdlg.cpp
			if (saExtraValues.GetSize() > 0) {
				return saExtraValues[0];
			}
			else {
				return "";
			}
			break;
		}
	/*case 294:  //Prescription
		{
			CString strAns = "";
			if (nExtraID != -1) {
				strAns.Format(" {PatientMedications.ID} = %li", nExtraID);  //pass the patient medication ID
			}
			return strAns;
		}*/
	case 335:	//Outstanding Insurance Balances
		{
			CString strAns;
			COleDateTime dtFrom, dtTo;
			COleDateTimeSpan dtFromSpan, dtToSpan;
			CString strDateType = GetDateFilterField(nSubLevel, nSubRepNum);	//get the field to use
			int nAge = saExtraValues.GetSize() ? atol(saExtraValues[0]) : 0; //This report doesn't allow {Multiple}
			switch(nAge){
			case 1:	//30 days or more
				dtToSpan.SetDateTimeSpan(-31,0,0,0);
				break;
			case 2:	//60 days or more
				dtToSpan.SetDateTimeSpan(-61,0,0,0);
				break;
			case 3:	//90 days or more
				dtToSpan.SetDateTimeSpan(-91,0,0,0);
				break;
			case 4:	//120 days or more
				dtToSpan.SetDateTimeSpan(-121,0,0,0);
				break;
			case 5:	//0 - 30
				dtToSpan.SetDateTimeSpan(-30,0,0,0);
				dtFromSpan.SetDateTimeSpan(0,0,0,0);
				break;
			case 6:	//31 - 60
				dtToSpan.SetDateTimeSpan(-60,0,0,0);
				dtFromSpan.SetDateTimeSpan(-31,0,0,0);
				break;
			case 7:	//61 - 90
				dtToSpan.SetDateTimeSpan(-90,0,0,0);
				dtFromSpan.SetDateTimeSpan(-61,0,0,0);
				break;
			case 8:	//91 - 120
				dtToSpan.SetDateTimeSpan(-120,0,0,0);
				dtFromSpan.SetDateTimeSpan(-91,0,0,0);
				break;
			default:
				return "";
				break;
			}
			dtTo = DateTo + dtToSpan;
			dtFrom = DateFrom + dtFromSpan;
			if(nAge >= 1 && nAge <= 4) 
				strAns.Format("{%s.%s} <= %s", strRecordSource, strDateType, dtTo.Format("'%m/%d/%Y'") );
			else if(nAge >= 5 && nAge <= 8) {
				strAns.Format("{%s.%s} <= %s AND {%s.%s} >= %s", strRecordSource, strDateType, dtFrom.Format("'%m/%d/%Y'"), 
					strRecordSource, strDateType, dtTo.Format("'%m/%d/%Y'"));
			}

			return strAns;
			break;
		}
	case 365:	//Billing Followup
		{
			//(Sometimes) Passed in by billingfollowupdlg.cpp
			if(saExtraValues.GetSize()) return saExtraValues[0];
			else return "";
			break;
		}
	case 443:	//Billing Followup List
		{
			//(Sometimes) Passed in by billingfollowupdlg.cpp
			if(saExtraValues.GetSize()) return saExtraValues[0];
			else return "";
			break;
		}
	case 341:	//Case History
	case 387:	//Individual Case Histories
		{
			if(nExtraID!=-1) {
				CString strAns = "";
				strAns.Format(" {CaseHistoryDetailsT.CaseHistoryID} = %li", nExtraID);	//pass in the current case history id - from the dialog
				return strAns;
			}
		}
		break;
		
	case 1:		//Surgery List and Prices
		{
			if(nExtraID!=-1) {
				CString strAns = "";
				strAns.Format(" {SurgeriesT.ID} = %li", nExtraID);	//pass in the current surgery ID
				return strAns;
			}
		}
		break;

	// (j.jones 2009-08-24 10:44) - PLID 35124 - converted to the PreferenceCardsT structure
	case 556:	//Preference Cards
		{
			if(nExtraID!=-1) {
				CString strAns = "";
				strAns.Format(" {PreferenceCardsT.ID} = %li", nExtraID);	//pass in the current preference card ID
				return strAns;
			}
		}
		break;

	case 537:	//Electronic Remittance
		{
			// (j.jones 2009-09-25 14:25) - PLID 34453 - supported the subreport
			switch(nSubLevel) {
				case 1:
					//subreport
					if(nExtraID!=-1) {
						CString strAns;
						//pass the EOB ID via the extra filter
						strAns.Format(" BatchPaymentsT.ID IN (SELECT BatchPaymentID FROM ERemittanceHistoryT WHERE EOBID = %li)", nExtraID);
						return strAns;
					}
					break;

				case 0:
					//main report
					if(nExtraID!=-1) {
						CString strAns;
						strAns.Format(" {ERemittanceHistoryT.EOBID} = %li", nExtraID);	//pass the EOB ID via the extra filter
						return strAns;
					}
					break;
			}
		}

	case 559:	//Finance Charges
		{
			if(saExtraValues.GetSize()) {
				CString strAns;
				strAns.Format(" FinanceChargesT.ID IN (%s) ", saExtraValues[0]); //Passed in by FinanceChargesDlg.cpp
				return strAns;
			}
			else
				return "";
			break;
		}

	case 303: //No Show...
	case 304: //No Show...
	case 305: //No Show...
	case 306: //No Show...
	case 381: //No Show...
		{
			//Do nothing, this is handled by the GetSql function formatting.
			return "";
		}
		break;

	case 372: 	//ToDoPatientsByAssignTo
	{
		if(nExtraID != -1) {
			CString strAns;
			strAns.Format(" StateID = 1 AND AssignID = %li", nExtraID);	//pass the user id via the extra filter
			return strAns;
		}
		break;
	}

	case 453: 	//To-Do Alarm Preview (PP)
	{
		// (c.haag 2008-07-29 10:45) - PLID 30565 - Use new todo list structure
		if(nExtraID != -1) {
			CString strAns;
			strAns.Format(" StateID = 1 AND TaskID IN (SELECT TaskID FROM TodoAssignToT WHERE AssignTo = %li)", nExtraID);	//pass the user id via the extra filter
			return strAns;
		}
		break;
	}

	case 396:
		//PIC Report
		{
			if(nExtraID != -1) {
				CString strAns;
				strAns.Format(" ProcInfoT.ID = %li", nExtraID);	//pass in the procinfoID vai the extra filter
				return strAns;
			}
		}
		break;

	case 199:
		//New Patients by Appointment Type
		switch(nSubLevel) {
		case 1:	//subfilter - do not filter
			return _T("");
			break;
		default:	//main filter - we like this one
			break;
		}

	case 448:	//Contacts General - Providers (PP)
	case 449:	//Contacts General - Users (PP)
	case 450:	//Contacts General - Suppliers (PP)
	case 451:	//Contacts General - Other Contacts (PP)
	case 452:	//Contacts General - Ref Phys (PP)
		{
			if(nExtraID!=-1) {
				CString strAns = "";
				strAns.Format(" PersonT.ID = %li", nExtraID);
				return strAns;
			}
		}
		break;

	case 87:	//Provider Multiple Fee Schedules
		{
			switch(nSubLevel) {
			case 0:
				//let the report handle it
				break;
			default:
				//all other cases are not going to filter on this
				return _T("");
			}
		}
		break;

	case 439://Inventory Sales by Supplier
	//TES 2/28/2004: We want to show ALL products, even those that haven't happened to make a sale by this coordinator.		
	if (bExtended && saExtraValues.GetSize()) {
		CString strAns;
		strAns.Format("({%s.%s} IN (%s) OR {%s.%s} Is Null)", strRecordSource, GetExtraField(), GetExtraValue(), strRecordSource, GetExtraField());
		return strAns;
	} else {
		// No extra filter
		return _T("");
	}
	break;

	// (j.gruber 2008-07-09 13:16) - PLID 26144 - added ability to filter by just manually entered adjustments
	case 461: //Inventory Adjustments
		if (bExtended && saExtraValues.GetSize()) {
			if (saExtraValues.GetSize() == 1) {
				if (saExtraValues[0] == "-1") {
					CString strAns;
					strAns.Format("({%s.%s} > 0 OR {%s.%s} Is Null)", strRecordSource, GetExtraField(), strRecordSource, GetExtraField());
					return strAns;
				}
				else {
					return DefGetExtraFilter(nSubLevel, nSubRepNum);
				}
			}
			else {
				//we need to generate our own
				BOOL bHasNeg1 = FALSE;
				CString strAns = "ProductAdjustmentCategoryID IN ( ";
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					if (saExtraValues[i] == "-1") {
						bHasNeg1 = TRUE;
					}
					else {
						strAns += saExtraValues[i] + ",";
					}					
				}
				strAns.TrimRight(",");
				strAns += ")";

				if (bHasNeg1) {
						strAns += " OR (ProductAdjustmentCategoryID > 0 OR ProductAdjustmentCategoryID IS NULL) ";
				}
				return strAns;
			}
		}
	break;



	case 490://Individual Yak message, the "Message Group ID" is sent as the Extended Filter.
		{
			CString strAns;
			strAns.Format(" MessagesT.MessageGroupID = %li ", nExtraID);
			return strAns;
		}
		break;

	case 540:

		//this is handled in the query
		return "";
	break;
		

	case 497:
		{	//Gift Certificate
			if(nExtraID <= 0)
				return "";

			CString strAns;
			strAns.Format("GiftCertificatesT.ID = %li", nExtraID);
			return strAns;
		}
		break;
	
	case 377://Appointments by Status
	case 418://Appointments By Place Of Service
	case 23: //Appointments (by Type)
	case 278://Appointments by Purpose
	case 50: //Appointments
	case 93: //No Show Patients by Referral
	case 94: //Appointments Requesting a Moveup
	case 249://Scheduling Activity
	case 263://Procedures Billed By Date
	case 287://Appointments By Input Date
	case 442://Appointments By Referring Physician
	case 197://Printed Superbills
	case 357://Projected Surgery Income
	case 358://Actual Surgery Income
	case 440://Appointments by Patient // (z.manning, 02/22/2007) - PLID 23201
	case 628://Appointments Without Allocations - TES 6/18/2008 - PLID 30395
		{
			if (bExtended && saExtraValues.GetSize()) {
				CString strAns = "AppointmentsT.ID IN (SELECT AppointmentID FROM AppointmentResourceT WHERE ResourceID IN (";
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					strAns += saExtraValues[i] + ",";
				}
				strAns.TrimRight(",");
				strAns += "))";
				return strAns;
			} else {
				// No extra filter
				return _T("");
			}
		}
		break;

	case 332://EMR Data By Item
		{
			if (bExtended && saExtraValues.GetSize()) {
				CString strAns = "EmrMasterT.ID IN (SELECT EMRID FROM EmrProcedureT WHERE Deleted = 0 AND ProcedureID IN (";
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					strAns += saExtraValues[i] + ",";
				}
				strAns.TrimRight(",");
				strAns += "))";
				return strAns;
			} else {
				// No extra filter
				return _T("");
			}
		}
		break;



	//JMM - Providers for Labs
	// (j.jones 2010-04-26 14:48) - PLID 23597 - moved from extended filter to a proper provider filter
	/*
	case 568: //Labs By Patient
		{
		if (bExtended && saExtraValues.GetSize()) {
				CString strAns = "LabsQ.ID IN (SELECT LabID FROM LabMultiProviderT WHERE ProviderID IN (";
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					strAns += saExtraValues[i] + ",";
				}
				strAns.TrimRight(",");
				strAns += "))";
				return strAns;
			} else {
				// No extra filter
				return _T("");
			}
		}
	break;
	*/

	case 501: //Closed Cash Drawers
		if (bExtended && saExtraValues.GetSize()) {
			return " DrawerID = '" + saExtraValues.GetAt(0) + "'";
		}
		else {
			return _T("");
		}
	break;

	case 614:
		// (j.gruber 2007-11-01 11:58) - PLID 27814 - Marketing review report
		//external handling is already taken care of
		return _T("");
	break;


	case 582:
		// (c.haag 2007-01-11 16:34) - PLID 7048 - Special handling for the AAFPRS report
		// is done in CReportInfo::FinalizeReportSqlQuery
		return _T("");

	case 599:	//Sales Quarterly Targets (Internal Only)
		switch(nSubLevel) {
		case 1:
			//All subreports have no date filtering, the query is built for current quarter only
			return _T("");
		}
		break;

	case 600:	//Sales YTD Summaries (Internal Only)
		switch(nSubLevel) {
		case 1:
			//All subreports have no date filtering, the query is built for current year only
			return _T("");
		}
		break;

	
	case 601: // Waiting List
		// (d.moore 2007-07-18 13:10) - PLID 26537 - Filtering on All Resources or selected resources.
		if (bExtended && saExtraValues.GetSize()) {
			return " WaitingListItemT.AllResources=1 OR " + DefGetExtraFilter(nSubLevel, nSubRepNum);
		}
		else {
			return _T("");
		}

	case 618: //Inventory Overview
		// (j.jones 2007-11-30 12:37) - PLID 27989 - added the On Hand filter
		if (bExtended && saExtraValues.GetSize()) {
			//"on hand" is a special filter that has both "available" and "allocated" products
			CString strFilter = DefGetExtraFilter(nSubLevel, nSubRepNum);
			CString strOld, strNew;
			strOld.Format("{InvOverviewQ.StatusType} = %li", (long)InvUtils::ostOnHand);
			strNew.Format("({InvOverviewQ.StatusType} = %li OR {InvOverviewQ.StatusType} = %li)", (long)InvUtils::ostAvailable, (long)InvUtils::ostAllocated);
			strFilter.Replace(strOld, strNew);
			return _T(strFilter);
		}
		else {
			return _T("");
		}

	case 651: //Problem List by Patient
		//(e.lally 2008-07-23) PLID 30732 - Get extra filter IDs
		// (j.jones 2008-11-21 09:16) - PLID 32130 - supported resolved / unresolved filters
		if (bExtended && saExtraValues.GetSize()) {
			CString strIDs;
			CString strExtra;
			for(int i = 0; i < saExtraValues.GetSize(); i++) {
				if(saExtraValues[i] == "-4") {	//can't use -3 because that is reserved for "multiple"
					//resolved
					if(!strExtra.IsEmpty()) {
						//if we already have strExtra filled, it means
						//we're about to filter on both resolved and unresolved,
						//which is everything! So return an empty string to not filter.
						return _T("");
					}
					else {
						strExtra = " EMRProblemStatusT.Resolved = 1 ";
					}
				}
				else if(saExtraValues[i] == "-5") {	//can't use -3 because that is reserved for "multiple"
					//unresolved
					if(!strExtra.IsEmpty()) {
						//if we already have strExtra filled, it means
						//we're about to filter on both resolved and unresolved,
						//which is everything! So return an empty string to not filter.
						return _T("");
					}
					else {
						strExtra = " EMRProblemStatusT.Resolved = 0 ";
					}
				}
				else {
					//they are filtering on a specific ID
					if(!strIDs.IsEmpty()) {
						strIDs += ",";
					}
					strIDs += saExtraValues[i];
				}
			}
			CString strAns;
			if(!strIDs.IsEmpty()) {
				strAns.Format(" EMRProblemHistoryT.StatusID IN (%s) ", strIDs);
			}
			if(!strExtra.IsEmpty()) {
				if(!strAns.IsEmpty()) {
					strAns += " OR ";					
				}
				strAns += strExtra;
			}
			if(!strAns.IsEmpty()) {
				strAns = "(" + strAns + ")";
			}
			return _T(strAns);
		}
		else {
			return _T("");
		}
	break;

	case 557:
		{
			// (j.gruber 2009-07-13 17:02) - PLID 33985 - just added comment, this is to add modifiers to the charges split by resp report
			CString strSql;
			if (bExtended && saExtraValues.GetSize())
			{
				//CString values = GenerateDelimitedListFromStringArray(saExtraValues, ",");
				CString strValues;				
				for(int i = 0; i < saExtraValues.GetSize(); i++) {
					strValues += "'" + saExtraValues[i] + "',";
				}
				strValues.TrimRight(",");				

				strSql.Format("ChargesT.CPTModifier IN (" + strValues + ") OR "
							  "ChargesT.CPTModifier2 IN (" + strValues + ") OR "
							  "ChargesT.CPTModifier3 IN (" + strValues + ") OR "
							  "ChargesT.CPTModifier4 IN (" + strValues + ")");
				return _T(strSql);
			}
			else
			{
				return _T("");
			}
		}
		break;

		// (j.jones 2009-09-15 10:58) - PLID 34717 - when called from the EMNs To Be Billed preview,
		//this needs to also filter out which EMNs have been cleared, in addition to the unbilled
		//(a.wilson 2013-06-12) PLID 56761
		case 631: // EMNs With Charges
		{
			if(nExtraID == -2) {
				CString strAns = " {EMRMasterT.ID} NOT IN (SELECT EMNID FROM EMNToBeBilled_ClearedRecordsT) "
					"AND {EMRMasterT.ID} NOT IN (SELECT EMNID FROM BilledEMNsT "
					"	WHERE BillID IN (SELECT ID FROM BillsT WHERE EntryType = 1 AND Deleted = 0))";
				return strAns;
			//hide any emn bills with all patient resp assigned.
			} else if (nExtraID == -3) {
				CString strAns = " {EMRMasterT.ID} NOT IN (SELECT EMNID FROM EMNToBeBilled_ClearedRecordsT) "
					"AND {EMRMasterT.ID} NOT IN (SELECT EMNID FROM BilledEMNsT "
					"	WHERE BillID IN (SELECT ID FROM BillsT WHERE EntryType = 1 AND Deleted = 0)) "
					"AND {EMRMasterT.ID} NOT IN (SELECT EMRID FROM EMRChargesT "
					"LEFT JOIN EMRChargeRespT ON EMRChargesT.ID = EMRChargeRespT.EMRChargeID GROUP BY EMRID "
					"HAVING Count(*) = Sum(CASE WHEN EMRChargeRespT.EMRChargeID Is Not Null "
					"AND EMRChargeRespT.InsuredPartyID Is Null THEN 1 ELSE 0 END))";
				return strAns;
			}
		}
		break;

		// (j.gruber 2010-04-15 12:04) - PLID 38090 - take out extra filter
		case 689:
			return _T("");
		break;

		// (d.thompson 2010-11-17) - PLID 41514 - This filter changes depending on what is licensed
		case 669:
			{
				if(saExtraValues.GetSize() > 0) {
					CString strValues = GenerateDelimitedListFromStringArray(saExtraValues, ",");

					CString strAccountIDField;
					if(g_pLicense && g_pLicense->HasCreditCardProc_QBMS(CLicense::cflrSilent)) {
						strAccountIDField = "QBMS_SetupData.ID";
					}
					else if(g_pLicense && g_pLicense->HasCreditCardProc_Chase(CLicense::cflrSilent)) {
						strAccountIDField = "Chase_SetupDataT.ID";
					}
					else {
						//It should be impossible to reach this state if you don't have a QBMS or Chase credit card license, 
						//	so just let the query fail if we happened to reach it.
					}

					return _T(FormatString("%s IN (%s)", strAccountIDField, strValues));
				}
				else {
					//no selections, no filter
					return "";
				}
			}
		break;

	case 615:
	case 626:
		//Clients By EMR Specialist
		//Clients By EMR Status

		// (j.jones 2014-12-22 16:52) - PLID 64493 - the external filter is EMR Specialist,
		// and it needs to filter by primary or secondary EMR specialist ID
		if (saExtraValues.GetSize() > 0) {
			CString strValues = GenerateDelimitedListFromStringArray(saExtraValues, ",");

			return _T(FormatString("(NXClientsT.EMRSpecialistID IN (%s) OR NXClientsT.SecondaryEMRSpecialistID IN (%s))", strValues, strValues));
		}
		else {
			//no selections, no filter
			return "";
		}

		break;
		
	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of the filter explicitly, use the default mechanism
	return DefGetExtraFilter(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetExternalFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {

	case 558: {
			CString str, strTemp;
			strTemp = strExternalFilter;
			//look for the temp name
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				str.Format("BillsT.ID IN (SELECT BillID FROM ChargesT WHERE ServiceID IN (SELECT ID FROM ServiceT WHERE Category IN (SELECT ID FROM [%s)", strTemp);
			}
			else {
				str = "";
			}
			return _T(str);
			  }
	break;

	case 199:
		//New Patients by Appointment Type
		switch(nSubLevel) {
		case 1:	//subfilter - do not filter
			return _T("");
			break;
		default:
			//default case - we want to filter
			break;
		}
		break;
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;

	// (j.gruber 2008-06-25 16:32) - PLID 25447 - inquiry report
	case 629:
		{
			CString strAns, strTemp;
			strTemp = strExternalFilter;
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				strAns.Format("(PatientsT.PersonID IN (SELECT PatientID AS PersonID FROM ProcInfoT "
							"LEFT JOIN ProcInfoDetailsT ON ProcInfoDetailsT.ProcInfoID = ProcInfoT.ID "
							"WHERE ProcedureID IN (SELECT ID FROM [%s ) ", strTemp) ;
			
					
			}
			return _T(strAns);
		
		}
	break;

	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;
		case 87:
			//Provider Multiple Fee Schedules
			switch (nSubLevel) {
			case 0:
				//main level - we are filtering here
				break;
			default:
				//sublevel, not filtering
				return _T("");
			}
			break;

	case 631:	//EMNs With Charges (j.jones 2008-07-03 13:31) - PLID 18534
		{
			//format the filter ourselves
			CString strSql, strTemp;
			strTemp = strExternalFilter;
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				strSql.Format("(EMRMasterT.ID IN (SELECT EMRID FROM EMRProcedureT WHERE ProcedureID IN (SELECT ID FROM [%s)", strTemp);
			}

			return _T(strSql);
		}
	break;

	case 15: // (c.haag 2008-07-29 09:31) - PLID 30565 - Contact To Do List
		{
			CString strSql, strTemp;
			strTemp = strExternalFilter;
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				strSql.Format("TaskID IN (SELECT TaskID FROM TodoAssignToT WHERE AssignTo IN (SELECT ID FROM [%s", strTemp);
				return _T(strSql);
			}
		}
		break;

	case 110: // (c.haag 2008-07-29 09:31) - PLID 30565 - Patient To Do List
		{
			CString strSql, strTemp;
			strTemp = strExternalFilter;
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				strSql.Format("TaskID IN (SELECT TaskID FROM TodoAssignToT WHERE AssignTo IN (SELECT ID FROM [%s", strTemp);
				return _T(strSql);
			}
		}
		break;

	case 419: // (c.haag 2008-07-29 10:41) - PLID 30565 - Patient To Do List By Category
		{
			CString strSql, strTemp;
			strTemp = strExternalFilter;
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
				strSql.Format("TaskID IN (SELECT TaskID FROM TodoAssignToT WHERE AssignTo IN (SELECT ID FROM [%s", strTemp);
				return _T(strSql);
			}
		}
		break;

	case 662: // (z.manning 2009-05-12 15:36) - PLID 34219 - Referral Orders
		{
			return FormatString(" ReferralOrdersT.ID = %li ", nExtraID);
		}
		break;

	// (j.jones 2009-09-17 17:13) - PLID 16703 - supported a procedure filter on the cost / profit analysis reports
	case 539:	//Case History Cost / Profit Analysis By Provider
	case 678:	//Case History Cost / Profit Analysis By Procedure
	{
		CString strSql, strTemp;
		strTemp = strExternalFilter;
		long nResult = strTemp.Find("#Temp");
		if (nResult > 0) {
			strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
			strSql.Format("CaseHistoryT.ID IN (SELECT CaseHistoryID FROM CaseHistoryProceduresT WHERE ProcedureID IN (SELECT ID FROM [%s", strTemp);
			return _T(strSql);
		}
	}
	break;

	// (j.jones 2010-04-27 16:18) - PLID 37886 - added ability to filter labs by result flags
	case 568:	//Labs By Patient
	{
		//this report shows all labs and all results, so if we are filtering on results,
		//we need to show all results for a lab that has at least one result that matches our filter

		CString strSql, strTemp;
		strTemp = strExternalFilter;
		long nResult = strTemp.Find("#Temp");
		if (nResult > 0) {
			strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
			// (z.manning 2012-01-18 17:08) - PLID 47641 - Don't check deleted lab results here.
			strSql.Format("LabsQ.ID IN (SELECT LabID FROM LabResultsT WHERE LabResultsT.Deleted = 0 AND FlagID IN (SELECT ID FROM [%s", strTemp);
			return _T(strSql);
		}
	}
	break;

	case 503:
	{
		// (j.gruber 2011-01-25 10:47) - PLID 41002 - include the opening cash drawer username

		CString strSql, strTemp;
		strTemp = strExternalFilter;
		long nResult = strTemp.Find("#Temp");
		if (nResult > 0) {
			strTemp = strTemp.Right(strTemp.GetLength() - (nResult));
			strSql.Format("(SubQ.PayInputName IN ('<Opening_Cash_Amt>') OR SubQ.PayInputName IN (SELECT ID FROM [%s", strTemp);
			return _T(strSql);
		}

	}
	break;

	case 225:
		{
			// (d.thompson 2014-03-14) - PLID 61342 - This report now needs to OR the selection against ICD9 or ICD10
			CString strSql, strTemp;
			strTemp = strExternalFilter;			// ({_DiagCodesByProviderQ.DiagCode} IN (SELECT ID FROM [#TempMerge371205034])) 
			strTemp.TrimRight();
			long nResult = strTemp.Find("#Temp");
			if (nResult > 0) {
				strTemp = strTemp.Right(strTemp.GetLength() - (nResult));						//#TempMerge371205034]))
				strTemp = strTemp.Left(strTemp.GetLength() - 3);
				strSql.Format("(_DiagCodesByProvQ.ICD9Code IN (SELECT ID FROM [%s]) OR "
					"_DiagCodesByProvQ.ICD10Code IN (SELECT ID FROM [%s]))", strTemp, strTemp);
				return _T(strSql);
			}
		}
		break;

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetExternalFilter(nSubLevel, nSubRepNum);
}

CString CReportInfo::GetGroupFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;
	case 295: //Active Steps by Age
		switch(nSubLevel) {
		case 1:
			break;	//do nothing, we want this to happen
		default:
			return _T("");	//pass on the filter
			break;
		}
		break;	// (j.jones 2016-03-21 10:45) - PLID 68620 - added a missing break
	case 370:	//Scheduling Productivity by User
	case 500: //Scheduling Productivity by Resource
		return _T("");	//handled by the query
		break;

	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;

	case 322:	//Batch Payments
	case 537:	//Electronic Remittance
		// (j.jones 2009-09-25 13:00) - PLID 34453 - do not filter the sub-report by patients
		switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;

	case 689:	//EMN Charges and DiagCodes
		// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 5:				
					return _T("");
				break;	
			}
		break;
		}
	break;

	// (j.gruber 2013-05-07 12:16) - PLID 46965
	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			//default case returns as normal
			}
		}
		break;


	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	
	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetGroupFilter(nSubLevel, nSubRepNum);
}


CString CReportInfo::GetFilterFilter(long nSubLevel, long nSubRepNum) const
{
	switch (nID) {
	case 295: //Active Steps by Age
		switch(nSubLevel) {
		case 1:
			break;	//do nothing, we want this to happen
		default:
			return _T("");	//pass on the filter
			break;
		}
		break;	// (j.jones 2016-03-21 10:45) - PLID 68620 - added a missing break
	case 370:	//Scheduling Productivity by User
	case 500: //Scheduling Productivity by Resource
		return _T("");	//handled by the query
		break;

	case 457:
		switch(nSubLevel) {
		case 1:	//subreport
			return _T("");
			break;
		default:	//let the report handle it
			break;
		}
		break;
	
	case 199: //New Patients by Appointment type.
		switch(nSubLevel) {
		case 1: //We just filter the main level
			return _T("");
			break;
		}
		break;

	case 138:	//Payment Receipts
		{
			switch(nSubLevel) {
			case 1:
				return "";
				break;
			//default case returns as normal
			}
		}
		break;

	case 247:	//Bills converted from Quotes (a.walling PLID 20236)
		{
			switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		}

	case 322:	//Batch Payments
	case 537:	//Electronic Remittance
		// (j.jones 2009-09-25 13:00) - PLID 34453 - do not filter the sub-report by patients
		switch(nSubLevel) {
			case 1:
				return _T("");
				break;
			}
		break;

	case 689:	//EMN Charges and DiagCodes
		// (j.gruber 2010-03-09 15:51) - PLID 37674 - don't filter the images subreport because it already is filtered
		// (j.gruber 2010-04-19 12:30) - PLID 38089 - imnages are now subrep 5
		switch(nSubLevel) {
		case 1:
			switch (nSubRepNum) {
				case 5:				
					return _T("");
				break;	
			}
		break;
		}
	break;
	case 755:	// (s.tullis 2014-07-11 15:57) - PLID 62560 - Batch Vision payments
	case 756:	// (s.tullis 2014-07-14 13:34) - PLID 62559 - Batch Medical Payments
		switch (nSubLevel) {
		case 1:
			return _T("");
			break;
		}
		break;

	default:
		// By default we break because anything unhandled will call the default function
		break;
	}


	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetFilter(nSubLevel, nSubRepNum);
}


CString CReportInfo::GetExtraField() const
{
	switch (nID) {
	case 154: //Financial Activity - Monthly
		// (r.gonet 04/24/2013) - PLID 56171 - Added for By Service Date/Payment Date filter.
		if(nDateFilter == 3) {
			return "TMonthYear";
		}
		else if(nDateFilter == 2) {
			return "IMonthYear";
		}
		else {
			return "MonthYear";
		}
		break;
	case 155: //Financial Activity - Yearly
		//TES 10/10/2013 - PLID 56392 - Added Input Date and Service Date/Payment Date filters
		if(nDateFilter == 3) {
			return "ServiceYear";
		}
		else if(nDateFilter == 2) {
			return "IYear";
		}
		else {
			return "TYear";
		}
		break;
	}

	//If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetExtraField();
}

void CReportInfo::FinalizeReportSqlQuery(long nSubLevel, long nSubRepNum, CString& strSql) const
{
	// (c.haag 2007-01-11 17:12) - PLID 7048 - This function is called before a report
	// query is opened. Make any last minute changes here if none of the preceeding
	// code satisfied your report needs.
	switch (nID) {
	case 582: // AAFPRS Survey
		{
			// (c.haag 2007-01-11 17:29) - PLID 7048 - Replace the #INPUTYEAR tag with
			// that of the extended filter (i.e. 2005, 2006, 2007, 2008 ... ). If there
			// is no extended filter, then replace it with "YEAR(AppointmentsT.Date)" so
			// that the filter always passes.
			int nIndex;
			do {
				if (-1 != (nIndex = strSql.Find("#INPUTYEAR"))) {
					strSql.Delete(nIndex, strlen("#INPUTYEAR"));
					if (bExtended && saExtraValues.GetSize() > 0) {
						strSql.Insert(nIndex, saExtraValues[0]);
					} else {
						strSql.Insert(nIndex, "YEAR(AppointmentsT.Date)");
					}
				}
			} while (nIndex != -1);
		}		
		break;

	case 686: 
		// (c.haag 2010-11-15 16:31) - PLID 41024 - Special handling for the
		// Patients By Media By Primary Insurance Financial Class report. We have a table
		// variable named @ReferralGroups that allows us to put in special values in the
		// crosstab of the summary report. This table variable must be populated with the
		// same patient WHERE filter that the report does to populate itself with values, or
		// else our numbers get messed up.
		{
			int nIndex = strSql.Find("#BEGINREPORTFILTER");
			strSql.Replace("#BEGINREPORTFILTER", "");
			CString strFilter = strSql.Mid(nIndex);
			strSql.Replace("#REPFILTERPLACEHOLDER", strFilter);
		}
		break;

	default:
		break;
	}
}

CString CReportInfo::GetDateSuffix(long nOption) const
{
	switch(nID){
	case -1: break;// This line is here just to avoid a warning so you can take it out when you add an actual explicit handler
	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetDateSuffix(nOption);
}

CString CReportInfo::GetDateField(long nOption) const
{
	switch(nID){
	case -1: break;// This line is here just to avoid a warning so you can take it out when you add an actual explicit handler
	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetDateField(nOption);
}


CString CReportInfo::GetDateName(long nOption) const
{
	switch(nID){
	case -1: break;// This line is here just to avoid a warning so you can take it out when you add an actual explicit handler
	default:
		// By default we break because anything unhandled will call the default function
		break;
	}

	// If nothing else has taken care of it explicitly, use the default mechanism
	return DefGetDateName(nOption);
}

BOOL CReportInfo::CreateTtxFile(CString strPath) const {

	try {


		switch (nID) {

			//these are all the functions in which the text file has to be generated manually
			//for now, they are just hard coded 

			case 193:   //appointments cancelled
			case 288:  //appointments by patient coordinator
			case 442:	//appointments by referring physician
			case 278:  //Appointments By Purpose
			case 377:  //Appointments By Status
			case 365:  //Billing Follow Up
			// (a.wilson 2014-07-18 09:22) - PLID 62519 - make the report ttx file instead of loading from the query.
			case 443:  //Billing Follow Up List
			case 307:  //Consult to Surgery By...
			case 308:  //Consult to Surgery By...
			case 309:  //Consult to Surgery By...
			case 310:  //Consult to Surgery By...
			case 311:  //Consult to Surgery By...
			case 382:  //consult to surgery by type
			case 312:  //Consults Without Surgery By...
			case 313:  //Consults Without Surgery By...
			case 314:  //Consults Without Surgery By...
			case 315:  //Consults Without Surgery By...
			case 316:  //Consults Without Surgery By...
			case 383:  //consults without surgery by type
			case 257:  //EMR Data By Patient Indiv
			case 94:   //Move Up List
			case 564:  //Move Up List (PP)
			case 303:  //noshowpatsby...
			case 304:  //noshowpatsby...
			case 305: //noshowpatsby..
			case 306:  //noshowpatsby...
			case 381: //No Show...
			case 42:   //Patients By Appointments
			case 183:  //Patient Notes
			//case 4:    //individual patient notes
			case 224:  //Patient Insurance Info
			case 263:  //Procedures Billed By Date
			case 227:  //Quote
			case 17:  //Daily Schedule
			case 380:
			case 63:  //Scheduled And not Billed
			case 249:   //Scheduling Activity
			case 50:  //Surgeries By Time 
			case 23:  //Appointments By Type
			case 416: //Resource Schedule 
			case 393: //weekly schedule
			case 394: //monthly schedule
			case 19:  //monthly schedule from reports
			case 16: //weekly schedule from reports
			case 93:	//no show patients by referrals
			case 488: //Applies Across Date
			case 184: //Patient Notes by Category
			case 245: //Order (PP)
			case 240: //Patient Notes (PP)
			case 223: //Patient General (PP)
			case 448: //Contacts General - Providers (PP)
			case 449: //Contacts General - Users (PP)
			case 450: //Contacts General - Suppliers (PP)
			case 451: //Contacts General - Other Contacts (PP)
			case 452: //Contacts General - Ref Phys (PP)
			//case 42: // Patients By Appointments
			case 358: // Actual Surgery Income
			case 339: // Patient Notes By User
			case 110: //Patient To DO List
			case 440://appointments by patient
			case 418://appointments by place of service
			case 427://Appointments By template
			case 90://Appointments Without Prepayments 
			case 432://Appts Cancelled and not rescheduled
			case 317://Consults cancelled with no rescedule
			case 318://Consults cancelled with no rescedule
			case 319://Consults cancelled with no rescedule
			case 320://Consults cancelled with no rescedule
			case 384://Consults cancelled with no rescedule
			case 281://Consult By Procedures
			case 199: 		//New Patients By Appointment.
			case 108: 		//Scheduled With Pending Balance.
//			case 249: 		//Scheduling Activity.
			case 57: 		//Insurance Companies.
			case 361: 		//Time log.
			case 345: 	//Audit Trail-Contacts.
			case 346: 	//Audit Trail-Insurance.
			case 348: 	//Audit Trail-Miscellaneous.
			case 347: 	//Audit Trail-Palm.
			case 344: 	//Audit Trail-Patients.
			case 233:	//Audit Trail - Financial
			case 261:	//Audit Trail - Scheduling
			case 343:	//Audit Trail - Inventory
			case 221:	//Contact Report (PP)
			case 222:   //Patient Appointments
			case 534:  //Performace Indices
			case 445:  // (c.haag 2011-06-16) - PLID 17539 - PracYakker Messages by Sender
			case 490:  //PracYakker Message
			case 535: //Retained Patients
			case 536: //Unretained Patients
			case 453:  //To DO Alarm
			//(e.lally 2009-08-28) PLID 35330 - Depreciated and recreated
			//case 511: //Converison by Procedure
			//(e.lally 2009-09-08) PLID 35332 - Depreciated and recreated
			//case 526: //Conversion Rate By Date
			case 541: //EOB Preview
			case 543: //Time Scheduled Productivity
			case 15:	//Contact To Do List
			case 74:	//Patients by Login
			case 372:	//Patient To Do List by Assign To
			case 408:	//Patient To Do List by Entered By
			case 419:	//Patient To Do List by Category
			case 291:	//Patients by Tracking Step
			case 287:	//Appointments by Input Date
			case 396:	//PIC Report
			case 341:	//Case History
			case 556:	//Preference Cards
			// (j.jones 2009-09-17 09:24) - PLID 16703 - split into two reports
			case 539:	//Case History Cost / Profit Analysis By Provider
			case 678:	//Case History Cost / Profit Analysis By Procedure
			case 387:	//Individual Case Histories
			case 492:	//Patient Flow
			case 446:	//Patient Fin History
			case 231:	//Patient Fin History (PP)
			case 197:	//Printed Superbills
			case 502:	//Revenue by Referral Source
			//(e.lally 2009-09-17) PLID 35053 - Depreciated and recreated
			//case 504:	//Conversion Rate by Referral Source
			case 505:	//Patients by Referral Source
			case 506:	//Cancellations and No Shows by Referral Source
			case 507:	//Inquiries to Consults by Referral Source
			case 508:	//Prospects to Consults by Referral Source
			case 509:	//Performed Vs. Closed by Referral Source
			case 353:	//Patient Statements 7.0
			case 354:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements 7.0
			case 485:	//Patient Statements 7.0 by Provider
			case 486:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements 7.0 by Provider
			case 355:	//Patient Statements 7.0 by Location
			case 356:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements 7.0 by Location
			case 436:	//Patient Statments 7.0 by Last Sent
			case 437:	//Patient Statements 7.0 by Location by Last Sent
			case 169:	//Patient Statements
			case 234:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements
			case 434:	//Patient Statements by Last Sent
			case 435:   //Patient Statement by Location By Last Sent
			case 483:	//Patient Statements by Provider
			case 484:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements by Provider
			case 337:	//Patient Statements by Location
			case 338:   // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements by Location
			case 392:	//Ladders
			case 547:	//Audit Trail - EMR
			case 391:	//AR Split by Responsibility
			case 256:	//EMR Data By Patient
			case 170:	//AR by Insurance Company
			case 385:	//AR by Insurance Company Office
			case 659:	// (z.manning 2009-03-25 11:07) - PLID 19120 - AR by Financial Class
			case 568:	//Labs By Patient
			case 573:	//Marketing Effectiveness (PP)
			case 581:   //Patients Seen Today (PP)
			case 576:  //EMR Summary
			case 577:  //EMN By Procedure
			case 255:  //EMR Totals by Age/Gender
			case 254:  //EMR Data By Provider
			case 444:	// Medications Tab (PP)
			case 414:	// Patient Prescriptions
			case 413:	// Patient Medications
			case 430:	// Deleted Prescriptions
			case 399:	// Medication list
			case 584:	// EMR Summary Screen Report
			case 608:   //Package Quote
			case 614:   //Marketing Review
			case 616:	// (c.haag 2007-11-16 15:54) - PLID 28103 - Active / Completed Supplier Returns
			// (c.haag 2008-03-07 13:59) - PLID 29170 - The Allergan Product Transfer Summary Sheet has been deprecated
			//case 617:	// (c.haag 2007-11-16 15:54) - PLID 28120 - Allergan Product Transfer Summary Sheet
			case 618:	// (c.haag 2007-12-03 15:05) - PLID 28204 - Inventory overview
			case 619:	// (c.haag 2008-02-06 17:29) - PLID 28084 - Allocation List
			case 620:	// (c.haag 2007-12-17 11:23) - PLID 28357 - Consignment list
			case 621:	// (c.haag 2007-12-17 11:23) - PLID 28357 - Consignment History by Date
			case 610:   // (j.gruber 2008-02-18 17:22) - PLID 28365 - made it verify from here
			case 622:   // (j.gruber 2008-02-19 11:29) - PLID 28367 - made this verify from here
			case 628:	//Appointments Without Allocations - TES 6/18/2008 - PLID 30395
			case 632:	//Audit Trail - AR Issues - TES 7/11/2008 - PLID 
			case 651:	//Problem List by Patient - (e.lally 2008-07-24) PLID 30732
			case 652:	//Problem List (PP)  - (e.lally 2008-07-24) PLID 30732 
			case 656:	//Advertising Cost Analysis (c.haag 2009-01-26 15:42) - PLID 32188
			case 657:	//Media Costs Analysis - (c.haag 2009-02-17 17:34) - PLID 32189
			case 665:
			case 666:    // (j.gruber 2009-05-29 16:45) - PLID 34401 - wellness alert reports
			case 668:	//Historical Demographic Information - TES 6/11/2009 - PLID 34607
			case 567:	// (c.haag 2009-06-22 12:02) - PLID 34189 - Lab Results Form
			case 658:	// (j.jones 2009-09-18 09:51) - PLID 24629 - Lab Request Form
			case 671:	// (j.jones 2009-07-10 10:29) - PLID 34843 - Inventory Reconciliation Adjustments (PP)
			case 672:   // (a.walling 2009-10-14 10:12) - PLID 23318 - Room History
			case 679:	// (j.jones 2009-09-22 09:35) - PLID 25232 - Room Manager (PP)
			case 683:	// (j.jones 2009-09-30 15:38) - PLID 30180 - Room Manager History By Type/Purpose
			case 230:	// (j.jones 2012-03-26 10:31) - PLID 49197 - ebilling batch list
			case 260:	// (j.jones 2009-10-19 17:09) - PLID 35994 - ASAPS Survey
			case 491: // Provider Commissions (Payments)	// (j.jones 2009-11-23 17:47) - PLID 36326 - added commission ttx files
			case 544: // Provider Commissions (Charges)
			case 692: // (c.haag 2010-01-04 12:29) - PLID 36658 - Patient Allergies
			case 153: // (c.haag 2010-01-20 11:09) - PLID 36643 - Financial Activity - Daily
			case 297: // (c.haag 2010-01-20 12:50) - PLID 36643 - Financial Activity - Daily (By Charge Code)
			case 325: // (c.haag 2010-01-20 12:50) - PLID 36643 - Financial Activity - Daily (By Charge Category)
			case 603: // (c.haag 2010-01-20 12:55) - PLID 36643 - Financial Activity - Today's Service Date
			case 663: // (j.gruber 2010-02-11 13:18) - PLID 37148 - manual ttx Patient Graph Data
			case 689: // (j.gruber 2010-02-22 16:37) - PLID 37467 - added ttx for EMN Charges and Diagnosis Codes By EMN
			case 693: // (j.gruber 2010-02-17 10:52) - PLID 37378
			case 137: // (j.gruber 2010-03-11 10:25) - PLID 37713 - added ttx 
			case 694: // (c.haag 2010-03-31 15:51) - PLID 37998 - Appointment Reminders (CellTrust)
			case 321: // (c.haag 2010-06-30 11:06) - PLID 39423 - Contact report
			case 615: // (c.haag 2010-07-12 15:19) - PLID 39601 - Clients By EMR Specialist
			case 626: // (c.haag 2010-07-12 15:19) - PLID 39601 - Clients By EMR Status
					// (j.gruber 2010-07-21 12:02) - PLID 37826
			case 698: //(s.dhole 2010-07-16 16:47) - PLID 28183
			case 699:		//Scheduled And Not Billed by Billed Appts
			// (j.jones 2010-09-24 15:41) - PLID 40650 - added the adjustment reports
			case 120:
			case 172:
			case 173:
			case 174:
			case 175:
			case 215:
			case 216:
			case 552:
			case 565:
			case 700: // (j.gruber 2010-10-29 11:43) - PLID 35817 - patient messaging
			case 686: // (c.haag 2010-11-10 09:52) - PLID 41024 - Patients By Media By Primary Insurance Financial Class
			case 701: // (f.dinatale 2010-12-20) - PLID 41275 - NexReminder Client Usage
			case 703: // (j.jones 2011-03-11 09:57) - PLID 41787 - Fully Adjusted Insurance Responsibilities
			// (c.haag 2011-03-28) - PLID 42403 - Daily User Activity, Daily User Activity - Detailed
			case 704:  // (s.dhole 2011-03-21 18:56) - PLID 42898 Create Show Glasses report 
			case 729:  // (s.dhole 2012-05-21 11:38) - PLID 50531 Create Show Contact Lens report 
			case 624:
			case 660:
			case 707: // (j.gruber 2011-05-06 16:04) - PLID 43584
			// (r.wilson 7/10/2012) PLID 51423 - This report will no longer be used. It was replaced by report 737			
			//case 706:// (s.dhole 2011-05-05 09:54) - PLID 42953 - Add Glasses Rx Report
			case 710: //(c.copits 2011-07-12) PLID 17459 - Have a report where an administrator can view the deleted pracyakker messages
			case 711: // (j.jones 2011-07-18 16:12) - PLID 44582 - Charges Fully Adjusted By E-Remittance
			// (j.dinatale 2011-12-01 11:57) - PLID 46716 - no longer need this case
			//case 713: // (j.dinatale 2011-07-11 12:19) - PLID 44807
			case 717: // (b.spivey, October 21, 2011) - PLID 46073 - frames version of InvAvery labels. 
			case 718: // (j.gruber 2011-11-04 11:40) - PLID 44993 - Meaningful Use Dialog 
			case 719: // (j.dinatale 2011-11-08 11:11) - PLID 45658 - Financial Activity - Daily for Logged in user
			case 720: // (j.gruber 2011-11-16 15:18) - PLID 45689
			case 457: // (j.armen 2011-11-17 17:56) - PLID 44253 - TOPS Summary
			case 625: // (j.armen 2011-11-17 17:56) - PLID 44253 - EMR Clients By Name
			case 725: // (r.gonet 02/24/2012) - PLID 47646 - Media Cost Analysis By Top Level Referral
			case 737: //(r.wilson 5/18/2012) PLID 48952 - Optical Prescription
			case 738: // (r.gonet 06/11/2012) - PLID 47647 - - Weekly Advertising Cost Analysis By Top Level Referral
			case 726: //PLID 49791  Frames Sold by Manufacturer
			case 730: //PLID 49787  Optical Product Sales  By Optician
			case 731: //PLID 49785  Optical Sales by supplier/Lab
			case 732: //PLID 49789  Optical Orders - By Status
			case 733: //PLID 50577   Items Sold Off The shelf
			case 734: //PLID 49786 Contact Lens sold - By Manufacturer
			case 736:// (s.dhole 06/20/2012) - PLID 49790  - Optical Orders Capture Rate
			case 742:
			case 696:
			case 697:
			case 604:	// (j.jones 2015-09-30 10:56) - PLID 67180 - Credit Card Customer Copy
			case 605:	// (j.jones 2015-09-30 10:56) - PLID 67180 - Credit Card Merchant Copy
			{

			try {
			CRPEngine *Engine = CRPEngine::GetEngine();
			if (!Engine) {
				if(GetMainFrame()) {
					Engine = GetMainFrame()->GetReportEngine();
				}
				else {
					 Engine = new CRPEngine;
				}
			}
			ASSERT(Engine);
			CNxReportJob *RepJob;
			if (Engine && Engine->Open()) {
				// set up report
				CString strPathName = GetReportsPath() ^ strReportFile;
				
				strPathName += GetDateSuffix(nDateFilter);
				strPathName.TrimRight();
				if(!IsStatement(nID)){
					if(nDetail == 2) strPathName += "Smry";
					else if(nDetail == 1) strPathName += "Dtld";
				}
				strPathName += ".rpt";
				RepJob = (CNxReportJob *)Engine->OpenJob(strPathName);

				
				//First, create the main .ttx file.
				CString strTtxFile;
				strTtxFile = strPath ^ strReportFile;

				//create the file
         		CString strFileName = strPath ^ strReportFile + ".ttx";
				CFile OutFile(strFileName, CFile::modeCreate | CFile::modeNoTruncate | CFile::modeWrite | CFile::shareDenyWrite);

				//now get the string that we need to put into the file
				CString strTtxFileContents = GetTtxFileContents(nID);

				//check to see that the string is not empty
				if (strTtxFileContents.IsEmpty()) {

					//bad news
					ASSERT(FALSE);
					return FALSE;
				}

				//now, write the contents to the file and close it
				OutFile.Write((LPCTSTR)strTtxFileContents, strTtxFileContents.GetLength());

				OutFile.Close();

				//Now, loop through each section and subreport, generating their .ttx files.
				//DRT 2/24/2004 - PLID 10509 - This code has never worked.  It loops through each section of the report, 
				//	and then calls GetRecordset() on each section.  However, it was using the index of the inside
				//	loop.  This would work if all subreports were inside the same section, which they frequently are
				//	not.  So I changed it to have a sub report count, which it increments as it generates each 
				//	subreport.
				//TES 10/3/2005 - Don's fix has also never worked.  nSubReportCnt was never incremented!
				long nSubReportCnt = 0;
				if(RepJob) {
					CString strTtxName;
					for(int i = 0; i < RepJob->GetNSections(); i++) {
						for(int j = 0; j < RepJob->GetNSubreportsInSection(RepJob->GetSectionCode(i)); j++) {

							strTtxName.Format("%s%li.ttx", strTtxFile, nSubReportCnt);
							//First, create the main .ttx file.
														
							//create the file
							CFile OutFile(strTtxName, CFile::modeCreate | CFile::modeNoTruncate | CFile::modeWrite | CFile::shareDenyWrite);

							//now get the string that we need to put into the file
							CString strTtxFileContents = GetTtxFileContents(nID, 1, nSubReportCnt);

							//check to see that the string is not empty
							if (strTtxFileContents.IsEmpty()) {

								//bad news
								ASSERT(FALSE);
								return FALSE;
							}

							//now, write the contents to the file and close it
							OutFile.Write((LPCTSTR)strTtxFileContents, strTtxFileContents.GetLength());

							OutFile.Close();
							nSubReportCnt++;
						}
					}
				}
			}
		}NxCatchAll("Error in CreateAllTtxFiles()");
		
		
		return true;
			
			

				return TRUE;
			break;
				  }
/*	PLID 134423
			case 434:   //Patient Statements By Last Sent
				{

				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(169)]);
				return CreateTtxFile(&infReport, strPath);
				}
*/
/*	PLID 13443
			case 436:	// 7.0
				{

				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(353)]);
				return CreateTtxFile(&infReport, strPath);
				}
			break;
*/

// (j.gruber 2007-02-20 15:00) - PLID 24747 - fix the verification of this report
/*			case 435: //statement by last sent date by location
				{

				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(337)]);
				return CreateTtxFile(&infReport, strPath);
				}*/
/*	PLID 13443
			case 437://7.0
				{

				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(353)]);
				return CreateTtxFile(&infReport, strPath);
				}
			break;
*/
/*			case 388:  //Aged Receivable by patient Responsibility.
			case 391: //Aged Receivalbe split By Responsibility.
				{

				//make a new report info object
				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(nID)]);
				infReport.bOneDate = FALSE;
				return CreateTtxFile(&infReport, strPath);
				}
			break;
			case 443://billing followup list 
				{
				//this just fills a generic query for the purposes of verifying, to simulate what will eventually
				//be a much more complex query generated by Billing Followup
				CReportInfo infReport(CReports::gcs_aryKnownReports[CReportInfo::GetInfoIndex(nID)]);
				// (j.jones 2013-08-20 08:50) - PLID 42319 - added RespAssignmentDate
				infReport.strExtendedSql = " (SELECT BillsT.*, ID AS BillID, convert(money, 0) AS Bal, convert(money, 0) AS TC, convert(money, 0) AS TP, GetDate() AS RespAssignmentDate FROM BillsT) AS SubQ";
				return CreateTtxFile(&infReport, strPath);
				break;
				}
*/				
			default: 

				return DefCreateTtxFile(strPath);
			
			break;
		}

	}NxCatchAll("Error getting TTx file");

	
	//if we got here, we failed
	return FALSE;

}


CString CReportInfo::GetTtxFileContents(long nID, long nSubReport /* = 0*/, long nSubReportID /*=0*/) const {

	CString strReturn;


	switch (nID) {

	case 604:	//Credit Card Customer Copy
	case 605:	//Credit Card Merchant Copy

		// (j.jones 2015-09-30 10:56) - PLID 67180 - added signature
		strReturn = "; Field definition file for table: ADORecordset\r\n"
			"LocName	string	255	string sample value\r\n"
			"LocAddress1	string	75	string sample value\r\n"
			"LocAddress2	string	75	string sample value\r\n"
			"LocCity	string	50	string sample value\r\n"
			"LocState	string	50	string sample value\r\n"
			"LocZip	string	50	string sample value\r\n"
			"LocPhone	string	20	string sample value\r\n"
			"CCNumber	string	16	string sample value\r\n"
			"CCHoldersName	string	50	string sample value\r\n"
			"AuthCode	string	50	string sample value\r\n"
			"CardName	string	50	string sample value\r\n"
			"TotalTipAmount	currency		1.00\r\n"
			"TransactionAmount	currency		1.00\r\n"
			"IsApproved	boolean		TRUE\r\n"
			"TransactionType	long		1\r\n"
			"LocalApprovalDateTime	datetime		Jan 5, 1994 1:23 : 45 PM\r\n"
			"InputDate	datetime		Jan 5, 1994 1 : 23 : 45 PM\r\n"
			"Description	string	255	string sample value\r\n"
			"Date	datetime		Jan 5, 1994 1 : 23 : 45 PM\r\n"
			"InputName	string	50	string sample value\r\n"
			"PayAmount	currency		1.00\r\n"
			"First	string	50	string sample value\r\n"
			"Middle	string	50	string sample value\r\n"
			"Last	string	50	string sample value\r\n"
			"Signature	blob	\r\n"
			"HasSignature	boolean		TRUE\r\n";
			break;

		case 457: // (j.armen 2011-11-17 17:56) - PLID 44253 - TOPS Summary
			// (j.gruber 2014-03-07 14:25) - PLID 61263
			switch (nSubReport) {
				case 0:
					strReturn.Format("; Field definition file for table: ADORecordset\r\n"
						"PatID	long		1\r\n"
						"UserDefinedID	long		1\r\n"
						"Last	string	50	string sample value\r\n"
						"First	string	50	string sample value\r\n"
						"Middle	string	50	string sample value\r\n"
						"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"Gender	string	6	string sample value\r\n"
						"ApptDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"ServiceLocation	string	255	string sample value\r\n"
						"ICD9Code1	string	50	string sample value \r\n"
						"ICD9Code2	string	50	string sample value \r\n"
						"ICD9Code3	string	50	string sample value \r\n"
						"ICD9Code4	string	50	string sample value \r\n"
						"ICD10Code1	string	50	string sample value \r\n"
						"ICD10Code2	string	50	string sample value \r\n"
						"ICD10Code3	string	50	string sample value \r\n"
						"ICD10Code4	string	50	string sample value \r\n"
						"ApptPurpose	string	255	string sample value\r\n"
						"BillDesc	string	255	string sample value\r\n"
						"BillDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"BillInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"ApptInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"ProvID	long		1\r\n"
						"LocID	long		1\r\n"
						"BillID	long		1\r\n"
						"G1Custom1	string	255	string sample value\r\n"
						"G1Custom2	string	255	string sample value\r\n"
						"G1Custom3	string	255	string sample value\r\n"
						"G1Custom4	string	255	string sample value\r\n"
						"CustomText1	string	255	string sample value\r\n"
						"CustomText2	string	255	string sample value\r\n"
						"CustomText3	string	255	string sample value\r\n"
						"CustomText4	string	255	string sample value\r\n"
						"CustomText5	string	255	string sample value\r\n"
						"CustomText6	string	255	string sample value\r\n"
						"CustomList1	memo	string sample value\r\n"
						"CustomList2	memo	string sample value\r\n"
						"CustomList3	memo	string sample value\r\n"
						"CustomList4	memo	string sample value\r\n"
						"CustomList5	memo	string sample value\r\n"
						"CustomList6	memo	string sample value");
					break;
				case 1:
					strReturn.Format("; Field definition file for table: ADORecordset\r\n"
						"BillID	long		1\r\n"
						"Code	string	50	string sample value\r\n"
						"Name	string	255	string sample value");
					break;
			}
			break;
		case 625: // (j.armen 2011-11-17 17:56) - PLID 44253 - EMR Clients By Name
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"PatID	long		1\r\n"
				"ClientID	long		1\r\n"
				"CurrentStatus	short		1\r\n"
				"FCDDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"First	string	50	string sample value\r\n"
				"Middle	string	50	string sample value\r\n"
				"Last	string	50	string sample value\r\n"
				"Title	string	50	string sample value\r\n"
				"EMRSpecFirst	string	50	string sample value\r\n"
				"EMRSpecLast	string	50	string sample value\r\n"
				"EMRUserName	string	50	string sample value\r\n"
				"StatusName	string	255	string sample value\r\n"
				"EmrStatusID	long		1\r\n"
				"EMRSpecialistID	long		1\r\n"
				"EMRStatusNote	string	255	string sample value\r\n"
				"EMRFollowupDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"City	string	50	string sample value\r\n"
				"State	string	20	string sample value\r\n"
				"Specialty	memo	string sample value\r\n"
				"LastContactDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TypeName	string	255	string sample value");
			break;
		// (z.manning 2011-02-08 09:28) - PLID 42371 - CategoriesT.Name is now 100 characters
		case 491: // Provider Commissions (Payments)	// (j.jones 2009-11-23 17:47) - PLID 36326 - added commission ttx files
			//TES 6/15/2015 - PLID 65984 - Added CommissionBaseDollarAmount and CommissionRuleDollarAmount
			//TES 8/17/2015 - PLID 65984 - Added ApplyID
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"ID	long		1\r\n"
				"ApplyID	long		1\r\n"
				"ChargeAmount	currency		1.00\r\n"
				"TotalWithTax	currency		1.00\r\n"
				"AppliedAmount	currency		1.00\r\n"
				"NoShopFeeAmount	currency		1.00\r\n"
				"NoTaxTotal	currency		1.00\r\n"
				"NoTaxNoShopFeeAmount	currency		1.00\r\n"
				"ShopFee	currency		1.00\r\n"
				"PatID	long		1\r\n"
				"UserDefinedID	long		1\r\n"
				"PatName	string	255	string sample value\r\n"
				"ProvID	long		1\r\n"
				"ProvName	string	255	string sample value\r\n"
				"UseTieredCommissions	boolean		TRUE\r\n"
				"IgnoreShopFee	boolean		TRUE\r\n"
				"CommissionBasePercentage	number		1.00\r\n"
				"CommissionBaseDollarAmount	currency		1.00\r\n"
				"ServiceID	long		1\r\n"
				"ServiceName	string	255	string sample value\r\n"
				"Code	string	50	string sample value\r\n"
				"ChargeType	string	16	string sample value\r\n"
				"ChargeTypeID	long		1\r\n"
				"PayDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"PayInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Quantity	number		1.00\r\n"
				"ApplyDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"CategoryName	string	100	string sample value\r\n"
				"LocID	long		1\r\n"
				"LocName	string	255	string sample value\r\n"
				"CommissionRulePercentage	number		1.00\r\n"
				"CommissionRuleDollarAmount	currency		1.00\r\n"
				"CommissionRule	string	255	string sample value\r\n"
				"CommissionAmount	currency		1.00\r\n"
				"NoTaxCommissionAmount	currency		1.00\r\n"
				"ChargeDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"ChargeInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"BillDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"BillInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TotalProviderCommissions	currency		1.00\r\n"
				"TotalProviderCommissionsNoTax	currency		1.00\r\n"
				"TieredRulesApplied	memo	string sample value\r\n"
				"PlaceOfServiceID	long	1\r\n"
				"PlaceOfService	string	255 string sample value");
			break;

		case 544: // Provider Commissions (Charges)
			//TES 6/15/2015 - PLID 65983 - Added CommissionBaseDollarAmount and CommissionRuleDollarAmount
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"ID	long		1\r\n"
				"ChargeAmount	currency		1.00\r\n"
				"TotalWithTax	currency		1.00\r\n"
				"AppliedAmt	currency		1.00\r\n"
				"NoShopFeeAmount	currency		1.00\r\n"
				"NoTaxTotal	currency		1.00\r\n"
				"NoTaxNoShopFeeAmount	currency		1.00\r\n"
				"ShopFee	currency		1.00\r\n"
				"PatID	long		1\r\n"
				"UserDefinedID	long		1\r\n"
				"PatName	string	255	string sample value\r\n"
				"ProvID	long		1\r\n"
				"ProvName	string	255	string sample value\r\n"
				"UseTieredCommissions	boolean		TRUE\r\n"
				"IgnoreShopFee	boolean		TRUE\r\n"
				"CommissionBasePercentage	number		1.00\r\n"
				"CommissionBaseDollarAmount	currency		1.00\r\n"
				"ServiceID	long		1\r\n"
				"ServiceName	string	255	string sample value\r\n"
				"Code	string	50	string sample value\r\n"
				"ChargeType	string	16	string sample value\r\n"
				"ChargeTypeID	long		1\r\n"
				"ChargeDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"ChargeInputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Quantity	number		1.00\r\n"
				"LocID	long		1\r\n"
				"LocName	string	255	string sample value\r\n"
				"CommissionRulePercentage	number		1.00\r\n"
				"CommissionRuleDollarAmount	currency		1.00\r\n"
				"CommissionRule	string	255	string sample value\r\n"
				"CommissionAmount	currency		1.00\r\n"
				"NoTaxCommissionAmount	currency		1.00\r\n"
				"CategoryName	string	100	string sample value\r\n"
				"TotalProviderCommissions	currency		1.00\r\n"
				"TotalProviderCommissionsNoTax	currency		1.00\r\n"
				"TieredRulesApplied	memo	string sample value\r\n"
				"PlaceOfServiceID	long	1\r\n"
				"PlaceOfService	string	255 string sample value");
			break;

		case 230:	// (j.jones 2012-03-26 10:31) - PLID 49197 - ebilling batch list
			// (r.goldschmidt 2014-12-15 17:51) - PLID 40152 - added location id/name and last sent date
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"PatID	long		1\r\n"
				"PatName	string	153	string sample value\r\n"
				"BillDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"BillDesc	string	255	string sample value\r\n"
				"BillAmount	currency		1.00\r\n"
				"CurrentSelect	boolean		TRUE\r\n"
				"ID	long		1\r\n"
				"FormType	long		1\r\n"
				"InsCoName	string	255	string sample value\r\n"
				"RespName	string	255	string sample value\r\n"
				"DocName	memo	1000	string sample value\r\n"
				"ClaimProviderName	memo	1000	string sample value\r\n"
				"CountOfChargesBatched	long		1\r\n"
				"CountOfCharges	long		1\r\n"
				"LocID	long		1\r\n"
				"LocName	string	255	string sample value\r\n"
				"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM\r\n");
			break;

		case 260: // (c.haag 2007-02-20 18:13) - PLID 24213 - ASAPS Survey
			// (j.jones 2009-10-19 16:39) - PLID 35994 - split up race and ethnicity
			// (j.gruber 2010-01-18 11:19) - PLID 24271 - added patient and appt locations
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
			"Name	string	255	string sample value\r\n"
			"ProcID	long		1\r\n"
			"PatName	string	255	string sample value\r\n"
			"PatID	long		1\r\n"
			"UserDefinedID	long		1\r\n"
			"TDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
			"Gender	byte		1\r\n"
			"Age	string	255	string sample value\r\n"
			"ProvID	long		1\r\n"
			"Race	string	255	string sample value\r\n"
			"CDCRace	string	255	string sample value\r\n"
			"CDCEthnicity	string	255	string sample value\r\n"
			"PatLocID	long		1\r\n"
			"PatLocationName	string	255	string sample value\r\n"
			"ApptLocID	long		1\r\n"
			"ApptLocationName	string	255	string sample value\r\n"
			"ItemID	long		1\r\n"
			"");
			break;

		case 288:  //appointments by patient coordinator

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
			"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"First	string	50	string sample value \r\n"
			"Middle	string	50	string sample value \r\n"
			"Last	string	50	string sample value \r\n"
			"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"LocID	long		1 \r\n"
			"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
			"Notes	memo	4000	string sample value \r\n"
			"Name	string	50	string sample value \r\n"
			"Item	memo	1000	string sample value \r\n"
			"SetID	long		1 \r\n"
			"HomePhone	string	20	string sample value \r\n"
			"Purpose	memo	1000	string sample value \r\n"
			"ID	long		1 \r\n"
			"PatName	string	153	string sample value \r\n"
			"ApptID	long		1 \r\n"
			"PatientID	long		1 \r\n"
			"PatID	long		1 \r\n"
			"PrivHome	boolean		TRUE \r\n"
			"PrivWork	boolean		TRUE \r\n"
			"PatCoordID	long		1 \r\n"
			"PatCoord	string	153	string sample value\r\n"
			"UserDefinedID	long		1 \r\n "
			"");
			break;

		case 442:	//Appointments by Referring Physician
			// (j.gruber 2012-12-10 10:26) - PLID 54122 - added PurposeShort and Location Name
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
			"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"First	string	50	string sample value \r\n"
			"Middle	string	50	string sample value \r\n"
			"Last	string	50	string sample value \r\n"
			"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"LocID	long		1 \r\n"
			"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
			"Notes	memo	4000	string sample value \r\n"
			"Name	string	50	string sample value \r\n"
			"Item	memo	1000	string sample value \r\n"
			"SetID	long		1 \r\n"
			"HomePhone	string	20	string sample value \r\n"
			"Purpose	memo	1000	string sample value \r\n"
			"ID	long		1 \r\n"
			"ResourceID	long		1 \r\n"
			"PatName	string	153	string sample value \r\n"
			"ApptID	long		1 \r\n"
			"PatientID	long		1 \r\n"
			"PatID	long		1 \r\n"
			"PrivHome	boolean		TRUE \r\n"
			"PrivWork	boolean		TRUE \r\n"
			"ResourceID	long		1 \r\n"
			"RefPhysName	string	255	string sample value \r\n"
			"PurposeShort	string	255	string sample value \r\n"
			"LocName	string	255	string sample value \r\n"
			"");
			break;
				
		case 278:  //Appointments By Purpose
			// (a.wilson 2012-3-20) PLID 49058 - added birthdate and userdefinedid
			strReturn.Format("; Field definition file for table: ADORecordset \r\n "
			"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n "
			"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n "
			"First	string	50	string sample value \r\n "
			"Middle	string	50	string sample value \r\n "
			"Last	string	50	string sample value \r\n "
			"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n "
			"LocID	long		1 \r\n "
			"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
			"Notes	memo	255	string sample value \r\n "
			"Name	string	50	string sample value \r\n "
			"ResourceName	memo	255	string sample value \r\n "
			"SetID	long		1 \r\n "
			"HomePhone	string	20	string sample value \r\n "
			"PurposeID	long		1 \r\n "
			"Purpose	string	100	string sample value \r\n "
			"ID	long		1 \r\n "
			"ResourceID	long		1 \r\n "
			"PatName	string	153	string sample value \r\n "
			"ApptID	long		1 \r\n "
			"PatientID	long		1 \r\n "
			"PatID	long		1 \r\n "
			"PrivHome	boolean		TRUE \r\n "
			"PrivWork	boolean		TRUE \r\n "
			"Email	string	50	string sample value \r\n "
			"UserDefinedID	long		1 \r\n "
			"BirthDate	datetime	Jan 5, 1994 1:23:45 PM"
			"");
			break;

		case 365:  //Billing Follow Up
			// (j.jones 2009-08-11 09:11) - PLID 28131 - added LocationID and name
			// (j.jones 2010-04-07 17:29) - PLID 15224 - removed ChargesT.EMG, obsolete field
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			// (r.farnworth 2013-05-28) PLID 52301 Increased Length of Employer to 150
			// (j.jones 2013-08-20 08:50) - PLID 42319 - added RespAssignmentDate
			// (j.gruber 2014-03-28 11:49) - PLID 61480 - updated for ICD-10
			// (r.farnworth 2015-03-09 17:03) - PLID 54249 - update DocAddress1 and DocAddress2 fields to 150 characters
			
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
			"BillID	long		1 \r\n"
			"PatientID	long		1 \r\n"
			"LocationID	long		1 \r\n"
			"LocName	string	255	string sample value \r\n"
			"TC	currency		1.00 \r\n"
			"TP	currency		1.00 \r\n"
			"Bal	currency		1.00 \r\n"
			"InsuredPartyID	long		1 \r\n"
			"HCFASetupGroupID	long		1 \r\n"
			"LastDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"PatName	string	153	string sample value \r\n"
			"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"InputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"LastTracerDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"PatID	long		1 \r\n"
			"ChargeDesc	string	255	string sample value \r\n"
			"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"RelatedToEmp	boolean		TRUE \r\n"
			"RelatedToAutoAcc	boolean		TRUE \r\n"
			"AccidentState	string	2	string sample value \r\n"
			"RelatedToOther	boolean		TRUE \r\n"
			"ConditionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"FirstConditionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"NoWorkFrom	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"NoWorkTo	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"HospFrom	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"HospTo	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"OutsideLab	boolean		TRUE \r\n"
			"OutsideLabCharges	currency		1.00 \r\n"
			"MedicaidResubmission	string	50	string sample value \r\n"
			"OriginalRefNo	string	50	string sample value \r\n"
			"PriorAuthNum	string	50	string sample value \r\n"
			"HCFABlock19	string	50	string sample value \r\n"
			"Note	string	4000	string sample value \r\n"
			"InputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"BillDesc	string	255	string sample value \r\n"
			"FormType	long		1 \r\n"
			"ICD9Code1	string	50	string sample value \r\n"
			"ICD9Code2	string	50	string sample value \r\n"
			"ICD9Code3	string	50	string sample value \r\n"
			"ICD9Code4	string	50	string sample value \r\n"
			"ICD10Code1	string	50	string sample value \r\n"
			"ICD10Code2	string	50	string sample value \r\n"
			"ICD10Code3	string	50	string sample value \r\n"
			"ICD10Code4	string	50	string sample value \r\n"
			"ICD9CodeDesc1	string	255	string sample value \r\n"
			"ICD9CodeDesc2	string	255	string sample value \r\n"
			"ICD9CodeDesc3	string	255	string sample value \r\n"
			"ICD9CodeDesc4	string	255	string sample value \r\n"
			"ICD10CodeDesc1	string	255	string sample value \r\n"
			"ICD10CodeDesc2	string	255	string sample value \r\n"
			"ICD10CodeDesc3	string	255	string sample value \r\n"
			"ICD10CodeDesc4	string	255	string sample value \r\n"
			"CPTModifier	string	10	string sample value \r\n"
			"CPTModifier2	string	10	string sample value \r\n"
			"WhichCodes	string	50	string sample value \r\n"
			"TaxRate	number		1.00 \r\n"
			"Quantity	number		1.00 \r\n"
			"ServiceDateFrom	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"ServiceDateTo	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"POSDesignation	string	50	string sample value \r\n"
			"TOS	string	50	string sample value \r\n"
			"EPSDT	string	50	string sample value \r\n"
			"COB	string	50	string sample value \r\n"
			"TaxRate2	number		1.00 \r\n"
			"Type	long		1 \r\n"
			"LineAmount	currency		1.00 \r\n"
			"LineDesc	string	255	string sample value \r\n"
			"LineDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"InputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"InputName	string	50	string sample value \r\n"
			"First	string	50	string sample value \r\n"
			"Middle	string	50	string sample value \r\n"
			"Last	string	50	string sample value \r\n"
			"Address1	string	150	string sample value \r\n"
			"Address2	string	150	string sample value \r\n"
			"City	string	50	string sample value \r\n"
			"State	string	20	string sample value \r\n"
			"Zip	string	20	string sample value \r\n"
			"Gender	byte		1 \r\n"
			"Suffix	string	5	string sample value \r\n"
			"Title	string	50	string sample value \r\n"
			"HomePhone	string	20	string sample value \r\n"
			"PrivHome	boolean		TRUE \r\n"
			"WorkPhone	string	20	string sample value \r\n"
			"PrivWork	boolean		TRUE \r\n"
			"Extension	string	10	string sample value \r\n"
			"CellPhone	string	20	string sample value \r\n"
			"OtherPhone	string	20	string sample value \r\n"
			"Email	string	50	string sample value \r\n"
			"Pager	string	20	string sample value \r\n"
			"Fax	string	20	string sample value \r\n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"SocialSecurity	string	11	string sample value \r\n"
			"FirstContactDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"PersonInputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"WarningMessage	string	255	string sample value \r\n"
			"DisplayWarning	boolean		TRUE \r\n"
			"PersonNote	string	2500	string sample value \r\n"
			"PersonCompany	string	50	string sample value \r\n"
			"EmergFirst	string	50	string sample value \r\n"
			"EmergLast	string	50	string sample value \r\n"
			"EmergHPhone	string	20	string sample value \r\n"
			"EmergWPhone	string	20	string sample value \r\n"
			"EmergRelation	string	50	string sample value \r\n"
			"Spouse	string	50	string sample value \r\n"
			"PrivCell	boolean		TRUE \r\n"
			"PrivFax	boolean		TRUE \r\n"
			"PrivOther	boolean		TRUE \r\n"
			"PrivPager	boolean		TRUE \r\n"
			"PrivEmail	boolean		TRUE \r\n"
			"InsCoLastName	string	50	string sample value \r\n"
			"InsCoFirstName	string	50	string sample value \r\n"
			"InsuranceAddress1	string	75	string sample value \r\n"
			"InsuranceAddress2	string	75	string sample value \r\n"
			"InsuranceCity	string	50	string sample value \r\n"
			"InsuranceState	string	20	string sample value \r\n"
			"InsuranceZip	string	20	string sample value \r\n"
			"InsurancePhone	string	20	string sample value \r\n"
			"InsuranceExt	string	10	string sample value \r\n"
			"InsuranceID	string	50	string sample value \r\n"
			"Employer	string	150	string sample value \r\n" 
			"PolicyGroupNum	string	50	string sample value \r\n"
			"InsuredFirstName	string	50	string sample value \r\n"
			"InsuredLastName	string	50	string sample value \r\n"
			"InsuredMiddleName	string	50	string sample value \r\n"
			"InsuredAddress1	string	75	string sample value \r\n"
			"InsuredAddress2	string	75	string sample value \r\n"
			"InsuredCity	string	50	string sample value \r\n"
			"InsuredState	string	20	string sample value \r\n"
			"InsuredZip	string	20	string sample value \r\n"
			"InsuredBirthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"LocName	string	255	string sample value \r\n"
			"LocAddress1	string	75	string sample value \r\n"
			"LocAddress2	string	75	string sample value \r\n"
			"LocCity	string	50	string sample value \r\n"
			"LocState	string	50	string sample value \r\n"
			"LocZip	string	50	string sample value \r\n"
			"LocPhone	string	20	string sample value \r\n"
			"LocPhone2	string	20	string sample value \r\n"
			"LocFax	string	50	string sample value \r\n"
			"LocTaxID	string	100	string sample value \r\n"
			"LocTollFreePhone	string	20	string sample value \r\n"
			"POSName	string	255	string sample value \r\n"
			"POSAddress1	string	75	string sample value \r\n"
			"POSAddress2	string	75	string sample value \r\n"
			"POSCity	string	50	string sample value \r\n"
			"POSState	string	50	string sample value \r\n"
			"POSZip	string	50	string sample value \r\n"
			"POSPhone	string	20	string sample value \r\n"
			"POSPhone2	string	20	string sample value \r\n"
			"POSFax	string	50	string sample value \r\n"
			"POSTaxID	string	100	string sample value \r\n"
			"POSTollFreePhone	string	20	string sample value \r\n"
			"DocFullName	string	203	string sample value \r\n"
			"DocFirstName	string	50	string sample value \r\n"
			"DocLastName	string	50	string sample value \r\n"
			"DocMiddleName	string	50	string sample value \r\n"
			"DocTitle	string	50	string sample value \r\n"
			"DocAddress1	string	150	string sample value \r\n"
			"DocAddress2	string	150	string sample value \r\n"
			"DocCity	string	50	string sample value \r\n"
			"DocState	string	20	string sample value \r\n"
			"DocZip	string	20	string sample value \r\n"
			"DocBirthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"DocEIN	string	30	string sample value \r\n"
			"DocUPIN	string	50	string sample value \r\n"
			"UserDefinedID	long		1 \r\n"
			"ChargeAmount	currency		1.00 \r\n"
			"ItemCode	string	50	string sample value\r\n"
			"LineID	long		1\r\n"
			"InsCoName	string	255	string sample value \r\n"
			"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"RespAssignmentDate	datetime		Jan 5, 1994 1:23:45 PM\r\n");
			break;

		case 443:	//Billing Followup List

			// (a.wilson 2014-07-18 08:33) - PLID 62519 - create defined ttx file.
			// (s.tullis 2014-06-27 16:55) - PLID 62578 - 

			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"ID	long		1 \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Last	string	50	string sample value\r\n"
				"Middle	string	50	string sample value\r\n"
				"First	string	50	string sample value\r\n"
				"FullName	string	153	string sample value\r\n"
				"Bal	currency		1.00 \r\n"
				"TotalCharges	currency		1.00 \r\n"
				"TotalPayments	currency		1.00 \r\n"
				"InputDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"InsCoName	string	255	string sample value\r\n"
				"InsPhone	string	20	string sample value\r\n"
				"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"RespTypeName	string	255	string sample value\r\n"
				"PriInsCoName	string	255	string sample value\r\n"
				"RespAssigmentDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"OnHold	string	3	string sample value\r\n"
				"BillStatus	string	255	string sample value\r\n"
				"StatusDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"StatusNote	memo	4000	string sample value \r\n"
				"LastStatusNoteDate	datetime		Jan 5, 1994 1:23:45 PM");
			break;

		case 541:	//EOB Preview

			// (j.jones 2008-12-16 12:24) - PLID 32317 - added birthdate, OHIP health card number, and OHIP
			// version code to the report
			// (j.jones 2009-07-06 17:15) - PLID 34776 - supported OverageWarning
			// (j.jones 2011-03-18 10:11) - PLID 42157 - added allowable fields

			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
			"PatientName	string	255	string sample value\r\n"
			"ChargeDate	string	255	string sample value\r\n"
			"ServiceCode	string	255	string sample value\r\n"
			"ChargeAmt	string	255	string sample value\r\n"
			"PayAmt	string	255	string sample value\r\n"
			"AdjAmt	string	255	string sample value\r\n"
			"PatResp	string	255	string sample value\r\n"
			"PatApplies	string	255	string sample value\r\n"
			"PatBal	string	255	string sample value\r\n"
			"InsBal	string	255	string sample value\r\n"
			"InsCoName	string	255	string sample value\r\n"
			"Payee	string	255	string sample value\r\n"
			"TotalPayment	string	255	string sample value\r\n"
			"BirthDate	string	255	string sample value\r\n"
			"OHIPHealthCardNum	string	255	string sample value\r\n"
			"OHIPVersionCode	string	255	string sample value\r\n"
			"OverageWarning	string	255	string sample value\r\n"
			"FeeSchedAllowable	string	255	string sample value\r\n"
			"EOBAllowable	string	255	string sample value\r\n");
			break;

		case 307:  //Consult to Surgery By...
		case 308:
		case 309:
		case 310:
		case 382: 
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				" PatID	long		1 \r\n"
				" UserDefinedID	long		1 \r\n"
				" PatName	string	153	string sample value\r\n"
				" Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" ConsEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" ConsDesc	memo	255	string sample value \r\n"
				" Purpose	string	255	string sample value \r\n"
				" SurgDesc	memo	255	string sample value \r\n"
				" SurgTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" SurgEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" LocID	long		1 \r\n"
				" LocName	string	255	string sample value \r\n"
				" RefName	string	50	string sample value \r\n"
				" CoordName	string	153	string sample value \r\n"
				" CreatedLoc	string	255	string sample value \r\n"
				" ResourceName	memo	255	string sample value\r\n" 
				" HomePhone	string	20	string sample value \r\n"
				" WorkPhone	string	20	string sample value \r\n"
				" Email	string	50	string sample value \r\n"
				" CellPhone	string	20	string sample value \r\n"
				" ConsType	string	50	string sample value \r\n"
				" TypeID	long		1 \r\n"
				" CreatedLogin	string	100	string sample value \r\n"
				" SurgType	string	50	string sample value \r\n"
				" PatientStatus	string	16	string sample value \r\n"
				" SurgeryPurpose	memo	255	string sample value \r\n"
				" SurgeryPurposeShort	string	255	string sample value \r\n"
				" Custom1	string	255	string sample value \r\n"
				" Custom2	string	255	string sample value \r\n"
				" Custom3	string	255	string sample value \r\n"
				" Custom4	string	255	string sample value ");
			break;
					
			

		case 311:  //Consult to Surgery By Resource

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				" PatID	long		1 \r\n"
				" UserDefinedID	long		1 \r\n"
				" PatName	string	153	string sample value \r\n"
				" Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" ConsEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" ConsDesc	memo	255	string sample value \r\n"
				" Purpose	memo	255	string sample value \r\n"
				" SurgDesc	memo	255	string sample value \r\n" 
				" SurgTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" SurgEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" LocID	long		1 \r\n"
				" LocName	string	255	string sample value \r\n"
				" RefName	string	50	string sample value \r\n"
				" CoordName	string	153	string sample value \r\n"
				" CreatedLoc	string	255	string sample value \r\n"
				" ResourceName	string	50	string sample value \r\n"
				" HomePhone	string	20	string sample value \r\n"
				" WorkPhone	string	20	string sample value \r\n"
				" Email	string	50	string sample value \r\n"
				" CellPhone	string	20	string sample value \r\n"
				" ConsType	string	50	string sample value \r\n"
				" TypeID	long		1 \r\n"
				" CreatedLogin	string	100	string sample value \r\n"
				" SurgType	string	50	string sample value \r\n"
				" PatientStatus	string	16	string sample value \r\n "
				" SurgeryPurpose	memo	255	string sample value \r\n"
				" SurgeryPurposeShort	string	255	string sample value \r\n"
				" Custom1	string	255	string sample value \r\n"
				" Custom2	string	255	string sample value \r\n"
				" Custom3	string	255	string sample value \r\n"
				" Custom4	string	255	string sample value");
			break;

					
		case 312:  //Consults Without Surgery By...

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	memo	255	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"ApptID	long	1 ");
		
			break;

			case 383:  //Consults Without Surgery By Type

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	memo	255	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	memo	255	string sample value");
		
			break;
					
		case 313:  //Consults Without Surgery By...

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	memo	255	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"ApptID	long	1 ");

			break;
					
		case 314:  //Consults Without Surgery By...

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	memo	255	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"ApptID	long	1 ");
				
			break;

		case 315:  //Consults Without Surgery By...

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	memo	255	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"ApptID	long	1 ");
		 break;
					
		case 316:  //Consults Without Surgery By...

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientName	string	153	string sample value \r\n"
					"PurposeName	string	255	string sample value \r\n"
					"TypeName	string	50	string sample value \r\n"
					"TypeID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"CreateLocName	string	255	string sample value \r\n"
					"ResourceName	string	50	string sample value \r\n"
					"CoordName	string	153	string sample value \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Notes	string	255	string sample value \r\n"
					"ApptID	long	1 ");					
			break;
		case 257:  //EMR Data By Patient Indiv
			// (d.singleton 2012-06-25 15:15) - PLID 51189 increase length of address 1, 2 to 150

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"DoctorName	memo	204	string sample value \r\n"
					"PatID	long		1 \r\n"
					"PatientName	string	204	string sample value \r\n"
					"PatAddress1	string	150	string sample value \r\n"
					"PatAddress2	string	150	string sample value \r\n"
					"PatCity	string	50	string sample value \r\n"
					"PatState	string	20	string sample value \r\n"
					"PatZip	string	20	string sample value \r\n"
					"PatientAge	long		1 \r\n"
					"PatientGender	byte		1 \r\n"
					"EMRID	long		1 \r\n"
					"ProcedureName	string	50	string sample value \r\n"
					"DetailID	long	1 \r\n"
					"DetailName	string	255	string sample value \r\n"
					"DetailData	memo	255	string sample value \r\n"
					"OrderID	long		1 \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"LocAddress1	string	75	string sample value \r\n"
					"LocAddress2	string	75	string sample value \r\n"
					"LocCity	string	50	string sample value \r\n"
					"LocState	string	50	string sample value \r\n"
					"LocZip	string	50	string sample value \r\n"
					"LocPhone	string	20	string sample value");
			break;
					
			
		case 381:	//No Show Patients(By Type)
		case 303:  //noshowpatsby...
			// (a.wilson 2012-3-20) PLID 49065 - adding birthdate.
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TypeID	long		1 \r\n"
					"TypeName	string	50	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"CreatedLoc	string	255	string sample value \r\n"
					"ReferralID	long		1 \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"CoordID	long		1 \r\n"
					"CoordName	string	153	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Notes	memo	255	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"PatID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"ApptID	long	1 \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM ");
			break;
					
		case 304:  //noshowpatsby...
			// (a.wilson 2012-3-20) PLID 49065 - adding birthdate.
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TypeID	long		1 \r\n"
					"TypeName	string	50	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"CreatedLoc	string	255	string sample value \r\n"
					"ReferralID	long		1 \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"CoordID	long		1 \r\n"
					"CoordName	string	153	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Notes	memo	255	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"PatID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"ApptID	long	1 \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM ");
			break;
					
		case 305: //noshowpatsby..
			// (a.wilson 2012-3-20) PLID 49065 - adding birthdate.
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TypeID	long		1 \r\n"
					"TypeName	string	50	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"CreatedLoc	string	255	string sample value \r\n"
					"ReferralID	long		1 \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"CoordID	long		1 \r\n"
					"CoordName	string	153	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Notes	memo	255	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"PatID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"ApptID	long	1 \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM ");
			break;
					
		case 306:  //noshowpatsby...
			// (a.wilson 2012-3-20) PLID 49065 - adding birthdate.
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TypeID	long		1 \r\n"
					"TypeName	string	50	string sample value \r\n"
					"PurposeName	memo	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"CreatedLoc	string	255	string sample value \r\n"
					"ReferralID	long		1 \r\n"
					"ReferralName	string	50	string sample value \r\n"
					"CoordID	long		1 \r\n"
					"CoordName	string	153	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Notes	memo	255	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"Email	string	50	string sample value \r\n"
					"PatID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"ApptID	long	1 \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM ");
			break;
					
		case 42:   //Patients By Appointments

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PurpName	memo	50	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"Name	string	50	string sample value \r\n"
					"ResourceID	long		1 \r\n"
					"Item	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProvID	long		1 \r\n"
					"Status	byte		1 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value");
			break;

		case 240:  //Patient Notes (PP)			
		case 183:  //Patient Notes
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			strReturn = "; Field definition file for table: ADORecordset\r\n"
					"First	string	50	string sample value\r\n"
					"Middle	string	50	string sample value\r\n"
					"Last	string	50	string sample value\r\n"
					"PatID	long		1\r\n"
					"UserDefinedID	long		1\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Time	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Category	string	255	string sample value\r\n"
					"Note	memo	4000	string sample value\r\n"
					"LocID	long		1\r\n"
					"Location	string	255	string sample value\r\n"
					"ProvID	long		1\r\n"
					"ProvName	string	255	string sample value\r\n"
					"ReferringPhysName	string	153	string sample value\r\n"
					"Address1	string	150	string sample value\r\n"
					"Address2	string	150	string sample value\r\n"
					"City	string	50	string sample value\r\n"
					"State	string	20	string sample value\r\n"
					"Zip	string	20	string sample value\r\n"
					"HomePhone	string	20	string sample value\r\n"
					"WorkPhone	string	20	string sample value\r\n"
					"Extension	string	10	string sample value\r\n"
					"CellPhone	string	20	string sample value\r\n"
					"PrimaryInsCo	string	255	string sample value\r\n"
					"SecondaryInsCo	string	255	string sample value\r\n"
					"Allergies	memo	1000	string sample value\r\n";
			break;

		case 700:
				// (j.gruber 2010-10-29 11:43) - PLID 35817 - patient messaging
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			strReturn = "; Field definition file for table: ADORecordset\r\n"
					"First	string	50	string sample value\r\n"
					"Middle	string	50	string sample value\r\n"
					"Last	string	50	string sample value\r\n"
					"PatID	long		1\r\n"
					"UserDefinedID	long		1\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Time	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Category	string	255	string sample value\r\n"
					"Note	memo	4000	string sample value\r\n"
					"LocID	long		1\r\n"
					"Location	string	255	string sample value\r\n"
					"ProvID	long		1\r\n"
					"ProvName	string	255	string sample value\r\n"
					"ReferringPhysName	string	153	string sample value\r\n"
					"Address1	string	150	string sample value\r\n"
					"Address2	string	150	string sample value\r\n"
					"City	string	50	string sample value\r\n"
					"State	string	20	string sample value\r\n"
					"Zip	string	20	string sample value\r\n"
					"HomePhone	string	20	string sample value\r\n"
					"WorkPhone	string	20	string sample value\r\n"
					"Extension	string	10	string sample value\r\n"
					"CellPhone	string	20	string sample value\r\n"
					"ThreadID	long		1\r\n"
					"Subject	string	255	string sample value\r\n"
					"Status	string	6	string sample value\r\n"
					"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"IsPatientCreated	boolean		TRUE\r\n";
					
			break;

		/*case 4:  //Individual patient notes

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Last	string	50	string sample value \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Time	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Description	string	50	string sample value \r\n"
					"Note	memo	255	string sample value \r\n"
					"Practice	string	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"Category	long		1 \r\n");
		break;*/
					
			// (s.tullis 2014-06-26 10:38) - PLID 35638 - would like patient cell phone as an available field in the PatInsInfo report			
		case 224:  //Patient Insurance Info
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			// (r.farnworth 2013-05-28) PLID 52301 Increased Length of GuarCompany to 150
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
				"PatID	long		1\r\n"
				"PatName	string	153	string sample value\r\n"
				"Address1	string	150	string sample value\r\n"
				"Address2	string	150	string sample value\r\n"
				"City	string	50	string sample value\r\n"
				"State	string	20	string sample value\r\n"
				"Zip	string	20	string sample value\r\n"
				"HomePhone	string	20	string sample value\r\n"
				"CellPhone	string	20	string sample value\r\n"
				"WorkPhone	string	20	string sample value\r\n"
				"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"SocialSecurity	string	11	string sample value\r\n"
				"Gender	string	6	string sample value\r\n"
				"MaritalStatus	string	7	string sample value\r\n"
				"PracticeName	string	255	string sample value\r\n"
				"Company	string	150	string sample value\r\n"
				"UserDefinedID	long		1\r\n"
				"GuarLast	string	50	string sample value\r\n"
				"GuarMiddle	string	50	string sample value\r\n"
				"GuarFirst	string	50	string sample value\r\n"
				"GuarAddr1	string	75	string sample value\r\n"
				"GuarAddr2	string	75	string sample value\r\n"
				"GuarCity	string	50	string sample value\r\n"
				"GuarState	string	20	string sample value\r\n"
				"GuarZip	string	20	string sample value\r\n"
				"GuarHPhone	string	20	string sample value\r\n"
				"GuarBDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"GuarCompany	string	150	string sample value\r\n" 
				"GuarNote	memo		memo sample data\r\n"
				"InsCoName	string	255	string sample value\r\n"
				"ContactLast	string	50	string sample value\r\n"
				"ContactFirst	string	50	string sample value\r\n"
				"InsAddr	string	75	string sample value\r\n"
				"InsAddr2	string	75	string sample value\r\n"
				"InsCity	string	50	string sample value\r\n"
				"InsState	string	20	string sample value\r\n"
				"InsZip	string	20	string sample value\r\n"
				"InsPhone	string	20	string sample value\r\n"
				"PlanName	string	255	string sample value\r\n"
				"PlanType	string	50	string sample value\r\n"
				"PolicyGroupNum	string	50	string sample value\r\n"
				"IDforInsurance	string	50	string sample value\r\n"
				"RespTypeID	long		1\r\n"
				"RespTypeName	string	255	string sample value\r\n"
				"InsPartyID	long		1\r\n"
				"");
			break;
					
		case 263:  //Procedures Billed By Date
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"Name	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ResourceID	long		1 \r\n"
					"Resource	memo	255	string sample value \r\n"
					"ProcedureID	long		1 \r\n"
					"Surgery	string	50	string sample value \r\n"
					"Amount	currency		1.00 \r\n"
					"BillID	long		1 \r\n"
					"ApptID	long	1 ");
			break;
					
		case 227:  //Quote

			switch (nSubReport) {

				case 0: 
				//TES 9/5/03: Don't forget to make sure that a.) the TopText and BottomText are memos, 
				//and b.) that ReportTitle and SubReportTitle have lengths of 255.  c)  UnitCost and 
				//ChOthrBillFee and are currency values.
				// (m.hancock 2006-11-02 15:01) - PLID 21274 - Added primary and secondary insured party deductible amounts.
				// (j.gruber 2006-12-29 15:14) - PLID 23972 - take deductible out
				// (j.gruber 2006-12-29 15:32) - PLID 23972 - add DeductibleLeftToMeet, OOPLeftToMeet, and CoInsurance
				// (j.gruber 2007-02-28 15:12) - PLID 24872 - added preop and surgery date and times to the report
				// (j.gruber 2007-02-28 15:13) - PLID 23407 - added linked prepayments subreport
				// (j.gruber 2007-04-05 16:45) - PLID 11944 - added discount categories
				// (j.gruber 2009-03-31 17:59) - PLID 33349 - added subreports and a few fields to the main report
				// (j.jones 2009-09-22 17:28) - PLID 35196 - added primary and secondary insurance allowed amounts
				// (j.gruber 2009-10-16 09:35) - PLID 35963 - secondary insurance name 
				// (j.gruber 2009-10-20 09:40) - PLID 36003 - added Charge Allowable
				// (j.jones 2009-10-23 10:09) - PLID 36011 - added insurance IDs
				// (j.gruber 2010-01-04 14:44) - PLID 18788 - added additional pat coord fields
				// (j.gruber 2010-02-02 14:56) - PLID 37171 - added discount fields
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
					// (j.gruber 2014-03-25 13:31) - PLID 61478 - updated for ICD-10
				strReturn.Format("; Field definition file for table: ADORecordset \r\r\n"
					"BillID	long		1 \r\n"
					"QuoteDescription	string	255	string sample value \r\n"
					"LineID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddr1	string	75	string sample value \r\n"
					"PracAddr2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"EmpName	string	152	string sample value \r\n"
					"OnLineAddress	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DoctorName	string	153	string sample value \r\n"
					"ItemCode	string	50	string sample value \r\n"
					"ItemSubCode	string	50	string sample value \r\n"
					"Description	string	255	string sample value \r\n"
					"Quantity	number		1.00 \r\n"
					"PercentOff	long		1 \r\n"
					"TaxRate	number		1.00 \r\n"
					"UnitCost	currency		1.00 \r\n"
					"PracBillFee	currency		1.00 \r\n"
					"OtherBillFee	currency		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"GetChargeTotalAmt	currency		1.00 \r\n"
					"PracOnlyLineTotal	currency		1.00 \r\n"
					"PracOnlyTax1Total	currency		1.00 \r\n"
					"PracOnlyTax2Total	currency		1.00 \r\n"
					"OtherOnlyTax1Total	currency		1.00 \r\n"
					"OtherOnlyTax2Total	currency		1.00 \r\n"
					"TotalLinkedPrepayments	currency		1.00 \r\n"
					"TopText	memo	3500	string sample value \r\n"
					"BottomText	memo	3500	string sample value \r\n"
					"ReportTitle	string	255	string sample value \r\n"
					"SubReportTitle	string	255	string sample value \r\n"
					"OrderID	long		1 \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"TotalAmount	currency		1.00 \r\n"
					"TotalCount	number		1.00 \r\n"
					"CurrentAmount	currency		1.00 \r\n"
					"CurrentCount	number		1.00 \r\n"
					"ChOthrBillFee	currency		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"PatFirst	string	50	string sample value \r\n"
					"PatMiddle	string	50	string sample value \r\n"
					"PatLast	string	50	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProcDescription	memo	3500	string sample \r\n"
					"SuppressDesc	boolean	TRUE\r\n"
					"IsCPTCode	boolean		TRUE \r\n"
					"IsInvItem	boolean		TRUE \r\n"
					"Anesthesia	boolean		TRUE \r\n"
					"FacilityFee	boolean		TRUE \r\n"
					"POSID	long	1 \r\n"
					"POSName	string	50	string sample value \r\n"				
					"AnesthesiaPayTo	string	200	string sample value \r\n"				
					"FacilityPayTo	string	200	string sample value \r\n"
					"SurgeryDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PrimaryInsCoName	string	255	string sample value \r\n"
					//"PriInsDeductible	currency		1.00 \r\n"
					//"SecInsDeductible	currency		1.00 \r\n"
					"AnesthStartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AnesthEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"FacilityStartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"FacilityEndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AnesthesiaMinutes	long		1 \r\n"
					"FacilityMinutes	long		1 \r\n"
					"DeductibleLeftToMeet	currency		1.00 \r\n"
					"CoInsurance	long		1 \r\n"
					"OOPLeftToMeet	currency		1.00 \r\n"
					"SurgeryDateTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PreopDateTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DiscountCategoryDescription	string	255	string sample value \r\n"
					"ChargeID	long		1 \r\n"
					"PrimaryInsuranceAllowable	currency		1.00 \r\n"
					"SecondaryInsuranceAllowable	currency		1.00 \r\n"
					"SecondaryInsCoName	string	255	string sample value \r\n"
					"ChargeAllowable	currency		1.00 \r\n"
					"PrimaryIDForInsurance	string	255	string sample value \r\n"
					"PrimaryPolicyGroupNum	string	255	string sample value \r\n"
					"SecondaryIDForInsurance	string	255	string sample value \r\n"
					"SecondaryPolicyGroupNum	string	255	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"					
					"PatCoordLast	string	50	string sample value \r\n"
					"PatCoordTitle	string	50	string sample value \r\n"
					"PatCoordWPhone	string	20	string sample value \r\n"
					"PatCoordExt	string	10	string sample value \r\n"
					"PatCoordEmail	string	50	string sample value \r\n"
					"PracPercentDiscountAmt	currency		1.00 \r\n"
					"OtherPercentDiscountAmt	currency		1.00 \r\n"
					"TotalDollarDiscount	currency		1.00 \r\n"
					"");
				break;

				case 1:

					switch (nSubReportID) {

						case 0:
							return _T("; Field definition file for table: ADORecordset \r\n"
								"ID	long		1 \r\n"
								"ChargeID	long		1 \r\n"
								"BillID	long		1 \r\n"
								"PercentOff	long		1 \r\n"
								"Amount	currency		1.00 \r\n"
								"DiscountCategoryDescription	string	255	string sample value \r\n");
						break;

						case 1:
							return _T("; Field definition file for table: ADORecordset \r\n"
								"ChargeID	long		1 \r\n"
								"BillID	long		1 \r\n"
								"DiscountCategoryDescription	string	255	string sample value \r\n"
								"DiscountAmt	currency		1.00 \r\n");
						break;

						case 2: 
					
							return _T("; Field definition file for table: ADORecordset \r\n"
								"Description	string	255	string sample value \r\n"
								"Amount	currency		1.00  \r\n"
								"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
								"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
								"QuoteID	long		1 \r\n");
						break;

						default:
							return _T("");
						break;
					}
				break;

					
				default :
				break;
			}
			break;

		case 608:
			// (j.gruber 2007-08-14 10:22) - PLID 25851 - package quote
			// (j.jones 2009-09-22 17:28) - PLID 35196 - added primary and secondary insurance allowed amounts
			// (j.jones 2009-10-23 10:09) - PLID 36011 - added insurance IDs
			// (j.gruber 2009-11-25 17:17) - PLID 36438 - added itemcode			
			switch (nSubReport) {

				case 0: 
			
				strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"QuoteID	long		1 \r\n"
					"TotalCount	long		1 \r\n"
					"TotalAmount	currency		1.00 \r\n"
					"CurrentCount	long		1 \r\n"
					"CurrentAmount	currency		1.00 \r\n"
					"Type	long		1 \r\n"
					"OriginalCurrentAmount	currency		1.00 \r\n"
					"OriginalCurrentCount	long		1 \r\n"
					"Amount	currency		1.00 \r\n"
					"PercentOff	long		1 \r\n"
					"Discount	currency		1.00 \r\n"
					"TaxRate	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"Quantity	number		1.00 \r\n"
					"PackageQtyRemaining	number		1.00 \r\n"
					"OriginalPackageQtyRemaining	number		1.00 \r\n"
					"LineDescription	string	255	string sample value \r\n"
					"QuoteDescription	string	255	string sample value \r\n"
					"PatientID	long		1 \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OthrBillFee	currency		1.00 \r\n"
					"ProcedureDescription	memo \r\n"
					"SuppressDesc	boolean \r\n"
					"PatFirst	string	50	string sample value \r\n"
					"PatMiddle	string	50	string sample value \r\n"
					"PatLast	string	50	string sample value \r\n"
					"PatAdd1	string	75	string sample value \r\n"
					"PatAdd2	string	75	string sample value \r\n"
					"PatCity	string	50	string sample value \r\n"
					"PatState	string	20	string sample value \r\n"
					"PatZip	string	20	string sample value \r\n"
					"PatID	number	1.00	\r\n"
					"ProvFirst	string	50	string sample value \r\n"
					"ProvMiddle	string	50	string sample value \r\n"
					"ProvLast	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"LocName	string	255	string sample value \r\n"
					"LocAdd1	string	75	string sample value \r\n"
					"LocAdd2	string	75	string sample value \r\n"
					"LocCity	string	50	string sample value \r\n"
					"LocState	string	50	string sample value \r\n"
					"LocZip	string	50	string sample value \r\n"
					"LocPhone	string	20	string sample value \r\n"
					"LocFax	string	50	string sample value \r\n"
					"LocWebsite	string	50	string sample value \r\n"
					"PosName	string	255	string sample value \r\n"
					"PosAdd1	string	75	string sample value \r\n"
					"PosAdd2	string	75	string sample value \r\n"
					"PosCity	string	50	string sample value \r\n"
					"PosState	string	50	string sample value \r\n"
					"PosZip	string	50	string sample value \r\n"
					"POSTPhone	string	20	string sample value \r\n"
					"POSTFax	string	50	string sample value \r\n"
					"POSTEmail	string	50	string sample value \r\n"
					"AnesthesiaPayTo	string	200	string sample value \r\n"
					"FacilityPayTo	string	200	string sample value \r\n"
					"IsCPTCode	long		1 \r\n"
					"IsProduct	long		1 \r\n"
					"IsAnesthesia	long		1 \r\n"
					"IsFacFee	long		1 \r\n"
					"CPTMultiplier1	number		1.00 \r\n"
					"CPTMultiplier2	number		1.00 \r\n"
					"CPTMultiplier3	number		1.00 \r\n"
					"CPTMultiplier4	number		1.00 \r\n"
					"TopText	memo 255	string sample value \r\n"
					"BottomText	memo	255	string sample value \r\n"
					"ReportTitle	string	255	string sample value \r\n"
					"SubReportTitle	string	255	string sample value \r\n"
					"Tax1Total	currency		1.00 \r\n"
					"Tax2Total	currency		1.00 \r\n"
					"PrimaryInsuranceAllowable	currency		1.00 \r\n"
					"SecondaryInsuranceAllowable	currency		1.00 \r\n"
					"PrimaryIDForInsurance	string	255	string sample value \r\n"
					"PrimaryPolicyGroupNum	string	255	string sample value \r\n"
					"SecondaryIDForInsurance	string	255	string sample value \r\n"
					"SecondaryPolicyGroupNum	string	255	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n");
					break;

				case 1:
					
					return _T("; Field definition file for table: ADORecordset \r\n"
						"Description	string	255	string sample value \r\n"
						"Amount	currency		1.00  \r\n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"QuoteID	long		1 \r\n ");						
					break;

					
				default :
				break;
			}
			break;


				
		case 380:
		case 17:  //Daily Schedule
			// (j.gruber 2008-09-17 13:03) - PLID 30284 - updated to add allocation report
			// (j.jones 2010-06-30 14:46) - PLID 39428 - added up to 6 insco names
			// (j.armen 2011-07-06 11:08) - PLID 44205 - Added Confirmed By
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			// (j.gruber 2012-09-11 09:54) - PLID 52033 - added apt insurance fields
			switch (nSubReport) {

				case 0 :
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
						"PatID	long		1 \r\n"
						"UserDefinedID	long		1 \r\n"
						"First	string	50	string sample value \r\n"
						"Middle	string	50	string sample value \r\n"
						"Last	string	50	string sample value \r\n"
						"Item	string	50	string sample value \r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM \r\n"
						"Notes	memo	5000	string sample value \r\n"
						"Type	string	50	string sample value \r\n"
						"Purpose	memo	1000	string sample value\r \n"
						"HomePhone	string	20	string sample value \r\n"
						"Email	string	50	string sample value \r\n"
						"Fax	string	20	string sample value \r\n"
						"Pager	string	20	string sample value\r\n"
						"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"StateText	string	255	string sample value \r\n"
						"WorkPhone	string	20	string sample value \r\n"
						"Confirmed	long		1 \r\n"
						"ConfirmedBy	string	50	string sample value \r\n"
						"PreferredContact	string	6	sample\r\n"
						"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"Duration	long	1\r\n"
						"CreatedLogin	string	100	string sample value\r\n"
						"ModifiedDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"ModifiedLogin	string	100 string sample value\r\n"
						"LastLM	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"PrivHome	boolean		TRUE \r\n"
						"PrivWork	boolean		TRUE \r\n"
						"ID	long		1 \r\n"
						"LocID	long		1 \r\n"
						"Location	string	255	string sample value \r\n"
						"ProvID	long		1 \r\n"
						"ResourceID	long		1 \r\n"
						"ShowState	long		1 \r\n"
						"Address1	string	150	string sample value \r\n"
						"Address2	string	150	string sample value \r\n"
						"City	string	50	string sample value \r\n"
						"State	string	20	string sample value \r\n"
						"Zip	string	20	string sample value \r\n"
						"ReferralSource	string	50	string sample value \r\n"
						"ReferringPhysician	string	203	string sample value \r\n"
						"Title	string	50	string sample value \r\n"
						"PrivFax	boolean		TRUE \r\n"
						"CellPhone	string	20	string sample value \r\n"
						"PrivCell	boolean		TRUE \r\n"
						"OtherPhone	string	20	string sample value \r\n"
						"PrivOther	boolean		TRUE \r\n"
						"PriCarePhysician	string	203	string sample value \r\n"
						"CustomText1	string	255	string sample value \r\n"
						"CustomText2	string	255	string sample value \r\n"
						"CustomText3	string	255	string sample value \r\n"
						"CustomText4	string	255	string sample value \r\n"
						"Age	string	2	string sample value \r\n"
						"PriInsCoName	string	255	string sample value \r\n"
						"SecInsCoName	string	255	string sample value \r\n"
						"ThirdInsCoName	string	255	string sample value \r\n"
						"FourthInsCoName	string	255	string sample value \r\n"
						"FifthInsCoName	string	255	string sample value \r\n"
						"SixthInsCoName	string	255	string sample value \r\n"
						"ApptID	long		1 \r\n"
						"PrimReferralSource	string	50	string sample value\r\n"
						"AuthNum	string	50	string sample value\r\n"
						"AllocationID	long		1 \r\n"					
						"ApptPriInsCoName	string	255	string sample value \r\n"
						"ApptSecInsCoName	string	255	string sample value \r\n"
						"ApptInsList	memo	\r\n"						
						"");
				break;

				case 1:
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"AllocationID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"ApptID	long		1 \r\n"
					"AllocationNotes	memo		memo sample data \r\n"
					"AllocationStatus	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllocationDetailID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductItemID	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"AllocationDetailStatus	long		1 \r\n"
					"AllocationDetailNotes	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UserDefinedID	long		1 \r\n"
					"FullName	string	255	string sample value \r\n"
					"PersonLocation	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ApptType	string	255	string sample value \r\n"
					"ApptPurpose	memo		string sample value \r\n"
					"StatusType	long	1 \r\n"
					"StatusText	string	255	string sample value \r\n"
					"AllocationStatusDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DetailStatusType	long	1 \r\n"
					"DetailStatusText	string	255	string sample value \r\n"
					"ProvName	string	255	string sample value \r\n"
					"ID	long		1 \r\n"
					);
				break;
			}
			break;
					
		case 63:  //Scheduled And not Billed

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"FullName	string	153	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Name	string	50	string sample value \r\n"
					"Purpose	memo	255	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"Item	string	50	string sample value \r\n"
					"ResourceID	long		1 \r\n"
					"SetID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"ApptID	long	1 ");

			break;

			case 699:  //Scheduled And not Billed
				// (j.gruber 2010-07-21 12:03) - PLID 37826

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"FullName	string	153	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Name	string	50	string sample value \r\n"
					"Purpose	memo	255	string sample value \r\n"
					"Notes	memo	255	string sample value \r\n"
					"Item	string	50	string sample value \r\n"
					"ResourceID	long		1 \r\n"
					"SetID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"ApptID	long	1 ");

			break;

		// (j.jones 2010-09-24 15:41) - PLID 40650 - added the adjustment reports

		case 120:	//Adjustments

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"DocName	string	255	string sample value \r\n"
				"ID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"ProvID	long		1 \r\n"
				"Amount	currency		1.00 \r\n"
				"RandomText	string	4	string sample value \r\n"
				"PatName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"ApplyID	long		1 \r\n"
				"LineID	long		1 \r\n"
				"Type	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value \r\n"
				"GroupID	long		1 \r\n"
				"Category	string	150	string sample value \r\n");

			break;


		case 172:	//Adjustments By Insurance Co

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"PatientID	long		1 \r\n"
				"SumOfAmount	currency		1.00 \r\n"
				"ProvID	long		1 \r\n"
				"FirstOfRandomText	string	4	string sample value \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"Insurance Co ID	long		1 \r\n"
				"InsName	string	255	string sample value \r\n"
				"FirstOfApplyID	long		1 \r\n"
				"FirstOfLineID	long		1 \r\n"
				"DocName	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 173:	//Adjustments By Insurance By CPT

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"PatientID	long		1 \r\n"
				"ApplyAmount	currency		1.00 \r\n"
				"ProvID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"ItemCode	string	50	string sample value \r\n"
				"PayAmt	currency		1.00 \r\n"
				"ChargeAmount	currency		1.00 \r\n"
				"ServiceDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ItemDesc	string	255	string sample value \r\n"
				"InsID	long		1 \r\n"
				"InsName	string	255	string sample value \r\n"
				"DocName	string	255	string sample value \r\n"
				"CPT Code	string	50	string sample value \r\n"
				"CPTID	long		1 \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 174:	//Adjustments By Service Code

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ProvID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"DocName	string	102	string sample value \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"CCType	string	50	string sample value \r\n"
				"CheckNo	string	50	string sample value \r\n"
				"Description	string	255	string sample value \r\n"
				"ApplyAmount	currency		1.00 \r\n"
				"Category	string	100	string sample value \r\n"
				"SubCategory	string	100	string sample value \r\n"
				"ParentID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Type	long		1 \r\n"
				"ItemCode	string	50	string sample value \r\n"
				"ChargeAmount	currency		1.00 \r\n"
				"PayAmount	currency		1.00 \r\n"
				"ServiceDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ItemDesc	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"CPTID	long		1 \r\n"
				"ChargeDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 175:	//Adjustments By Service Category

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ProvID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"DocName	string	255	string sample value \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"CCType	string	50	string sample value \r\n"
				"CheckNo	string	50	string sample value \r\n"
				"Description	string	255	string sample value \r\n"
				"ApplyAmount	currency		1.00 \r\n"
				"Category	string	100	string sample value \r\n"
				"SubCategory	string	100	string sample value \r\n"
				"ParentID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Type	long		1 \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"CatFilterID	long		1 \r\n"
				"ChargeDescription	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 215:	//Adjustments By Inv Item

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ProvID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"DocName	string	255	string sample value \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"CCType	string	50	string sample value \r\n"
				"CheckNo	string	50	string sample value \r\n"
				"Description	string	255	string sample value \r\n"
				"ApplyAmount	currency		1.00 \r\n"
				"Category	string	100	string sample value \r\n"
				"SubCategory	string	100	string sample value \r\n"
				"ParentID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Type	long		1 \r\n"
				"ItemCode	long		1 \r\n"
				"ChargeAmount	currency		1.00 \r\n"
				"PayAmount	currency		1.00 \r\n"
				"ServiceDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ItemDesc	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"CPTID	long		1 \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 216: //Adjustments By Insurance By Inv Item

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"PatientID	long		1 \r\n"
				"ApplyAmount	currency		1.00 \r\n"
				"ProvID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"ItemCode	long		1 \r\n"
				"PayAmt	currency		1.00 \r\n"
				"ChargeAmount	currency		1.00 \r\n"
				"ServiceDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ItemDesc	string	255	string sample value \r\n"
				"InsID	long		1 \r\n"
				"InsName	string	255	string sample value \r\n"
				"DocName	string	255	string sample value \r\n"
				"CPT Code	long		1 \r\n"
				"CPTID	long		1 \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 552:	//Adjustments by Adjustment Location

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"PatientID	long		1 \r\n"
				"SumOfAmount	currency		1.00 \r\n"
				"ProvID	long		1 \r\n"
				"FirstOfRandomText	string	4	string sample value \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"FirstOfApplyID	long		1 \r\n"
				"FirstOfLineID	long		1 \r\n"
				"DocName	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Name	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		case 565:	//Adjustments By Referring Physician

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"SumOfAmount	currency		1.00 \r\n"
				"ProvID	long		1 \r\n"
				"FirstOfRandomText	string	4	string sample value \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"FullName	string	255	string sample value \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PayMethod	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"FirstOfApplyID	long		1 \r\n"
				"FirstOfLineID	long		1 \r\n"
				"CheckNo	string	50	string sample value \r\n"
				"CCType	string	50	string sample value \r\n"
				"RefPhysID	long		1 \r\n"
				"RefPhysName	string	255	string sample value \r\n"
				"DocName	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo	4000	string sample value \r\n"
				"GroupCodeDesc	memo	4000	string sample value ");

			break;

		/*case 249:   //Scheduling Activity

			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"Confirmed	long	1 \r\n"
					"MoveUp	boolean		TRUE \r\n"
					"ShowState	byte		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Item	memo	255	string sample value \r\n"
					"Name	string	50	string sample value \r\n"
					"AptTypeID	long		1 \r\n"
					"Purpose	memo	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"Notes	memo	255	string sample value \r\n"
					"Status	byte		1 \r\n"
					"ItemID	long		1 \r\n"
					"ApptID	long	1 ");

			break;*/
			
		case 50:  //Surgeries By Time 
			// (f.gelderloos 2013-07-24 13:00) - PLID 33920 Added UserDefinedID field
			
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"First	string	50	string sample value \r\n"
				"Middle	string	50	string sample value \r\n"
				"Last	string	50	string sample value \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Notes	memo	4000	string sample value \r\n"
				"Name	string	50	string sample value \r\n"
				"Item	memo	1000	string sample value \r\n"
				"SetID	long		1 \r\n"
				"HomePhone	string	20	string sample value \r\n"
				"Purpose	memo	1000	string sample value \r\n"
				"ID	long		1 \r\n"
				"ResourceID	long		1 \r\n"
				"PatName	string	153	string sample value \r\n"
				"PatientID	long		1 \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"PatID	long		1 \r\n"
				"PrivHome	boolean		TRUE \r\n"
				"PrivWork	boolean		TRUE \r\n"
				"Email	string	50	string sample value \r\n"
				"InputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ApptID	long		1 \r\n"
				"CustomText1	string	255	string sample value \r\n"
				"CustomText2	string	255	string sample value \r\n"
				"CustomText3	string	255	string sample value \r\n"
				"CustomText4	string	255	string sample value \r\n"
				"PrimaryRefSource	string	255	string sample value \r\n"
				"PurposeShort	string	255	string sample value \r\n"
				"UserDefinedID	long		1 \r\n"
				"");

			break;
		case 23:  //Appointments By Type
			// (j.jones 2009-09-28 12:40) - PLID 35194 - added patient gender and birthdate, insurance company names,
			//and appt. length in minutes
			// (j.jones 2009-11-09 16:05) - PLID 36242 - added patient address fields, and insurance IDs
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
			// (r.goldschmidt 2014-02-03 17:06) - PLID 42818 - added appointment status field as ShowState
			strReturn.Format("; Field definition file for table: ADORecordset\r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"First	string	50	string sample value\r\n"
					"Middle	string	50	string sample value\r\n"
					"Last	string	50	string sample value\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"LocID	long		1\r\n"
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
					"Notes	memo	255	string sample value\r\n"
					"Name	string	50	string sample value\r\n"
					"Item	string	255	string sample value\r\n"
					"SetID	long		1\r\n"
					"HomePhone	string	20	string sample value\r\n"
					"Purpose	memo	255	string sample value\r\n"
					"ID	long		1\r\n"
					"ResourceID	long		1\r\n"
					"PatName	string	153	string sample value\r\n"
					"ApptID	long		1\r\n"
					"PatientID	long		1\r\n"
					"PatID	long		1\r\n"
					"UserDefinedID	long		1\r\n"
					"PrivHome	boolean		TRUE\r\n"
					"PrivWork	boolean		TRUE\r\n"
					"Email	string	50	string sample value\r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	50	string sample value \r\n"
					"Zip	string	50	string sample value \r\n"
					"ShowState		string	255	string sample value \r\n"
					"CustomText1	string	255	string sample value \r\n"
					"CustomText2	string	255	string sample value \r\n"
					"CustomText3	string	255	string sample value \r\n"
					"CustomText4	string	255	string sample value \r\n"
					"WorkPhone		string	255	string sample value \r\n"
					"CellPhone		string	255	string sample value \r\n"
					"AuthNums	string	255	string sample value \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Gender	string	50	string sample value \r\n"
					"PrimaryInsuranceCo	string	255	string sample value \r\n"
					"SecondaryInsuranceCo	string	255	string sample value \r\n"
					"PrimaryIDForInsurance	string	255	string sample value \r\n"
					"PrimaryPolicyGroupNum	string	255	string sample value \r\n"
					"SecondaryIDForInsurance	string	255	string sample value \r\n"
					"SecondaryPolicyGroupNum	string	255	string sample value \r\n"
					"DurationMinutes	long		1 \r\n"
					"");	
		break;

			

		case 416:

			// (j.gruber 2008-09-17 13:03) - PLID 30284 - updated to add allocation report
			// (z.manning 2009-02-24 08:57) - PLID 32809 - Added cell phone
			// (j.jones 2011-04-05 09:57) - PLID 39448 - added up to 6 insco names
			// (j.armen 2011-07-06 11:08) - PLID 44205 - Added confirmed by
			// (j.gruber 2012-09-11 10:03) - PLID 52033 - appointment insurance fields
			switch (nSubReport) {
				case 0: 
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Last	string	50	string sample value \r\n"
					"Item	string	50	string sample value \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Notes	memo	3000	string sample value \r\n"
					"Type	string	50	string sample value \r\n"
					"Purpose	memo	1000	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sampel value \r\n"
					"Email	string	50	string sample value \r\n"
					"Fax	string	20	string sample value \r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StateText	string	255	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"Confirmed	long		1 \r\n"
					"ConfirmedBy	string	50	string sample value \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PrivHome	boolean		TRUE \r\n"
					"PrivWork	boolean		TRUE \r\n"
					"PrivCell	boolean		TRUE \r\n"
					"ID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"ResourceID	long		1 \r\n"
					"PrivFax	boolean		TRUE \r\n"
					"CustomText1	string	255	string sample value \r\n"
					"CustomText2	string	255	string sample value \r\n"
					"CustomText3	string	255	string sample value \r\n"
					"CustomText4	string	255	string sample value \r\n"
					"AllocationID	long		1 \r\n"
					"PriInsCoName	string	255	string sample value \r\n"
					"SecInsCoName	string	255	string sample value \r\n"
					"ThirdInsCoName	string	255	string sample value \r\n"
					"FourthInsCoName	string	255	string sample value \r\n"
					"FifthInsCoName	string	255	string sample value \r\n"
					"SixthInsCoName	string	255	string sample value \r\n"
					"ApptPriInsCoName	string	255	string sample value \r\n"
					"ApptSecInsCoName	string	255	string sample value \r\n"
					"ApptInsList	memo	\r\n"	
					"");

				break;		

				case 1:
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"AllocationID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"ApptID	long		1 \r\n"
					"AllocationNotes	memo		memo sample data \r\n"
					"AllocationStatus	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllocationDetailID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductItemID	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"AllocationDetailStatus	long		1 \r\n"
					"AllocationDetailNotes	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UserDefinedID	long		1 \r\n"
					"FullName	string	255	string sample value \r\n"
					"PersonLocation	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ApptType	string	255	string sample value \r\n"
					"ApptPurpose	memo		string sample value \r\n"
					"StatusType	long	1 \r\n"
					"StatusText	string	255	string sample value \r\n"
					"AllocationStatusDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DetailStatusType	long	1 \r\n"
					"DetailStatusText	string	255	string sample value \r\n"
					"ProvName	string	255	string sample value \r\n"
					"ID	long		1 \r\n"
					);
				break;
			}			
		break;

		case 393:  //weekly schedule
		case 16: //weekly schedule from reports
			// (j.gruber 2008-09-17 13:03) - PLID 30284 - updated to add allocation report
			// (j.jones 2011-04-05 09:57) - PLID 39448 - added up to 6 insco names
			// (j.armen 2011-07-06 11:08) - PLID 44205 - Added confirmed by
			// (j.gruber 2012-09-11 10:02) - PLID 52033 appointment insurance fields
			switch (nSubReport) {
				case 0: 
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
						"PatID	long		1\r\n"
						"UserDefinedID	long		1\r\n"
						"First	string	50	string sample value\r\n"
						"Middle	string	50	string sample value\r\n"
						"Last	string	50	string sample value\r\n"
						"Item	string	50	string sample value\r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
						"Notes	memo	255	string sample value\r\n"
						"Type	string	50	string sample value\r\n"
						"Purpose	memo	255	string sample value\r\n"
						"HomePhone	string	20	string sample value\r\n"
						"Fax	string	20	string sample value\r\n"
						"WorkPhone	string	20	string sample value\r\n"
						"CellPhone	string	20	string sample value\r\n"
						"OtherPhone	string	20	string sample value\r\n"
						"Email	string	50	string sample value\r\n"
						"Pager	string	20	string sample value\r\n"
						"Confirmed	long		1\r\n"
						"ConfirmedBy	string	50	string sample value\r\n"
						"PreferredContact	string	6	sample\r\n"
						"StartTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"EndTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"Duration	long		1\r\n"
						"CreatedLogin	string	100	string sample value\r\n"
						"ModifiedDate	datetime	Jan 5, 1994 1:23:45 PM\r\n"
						"ModifiedLogin	string	100	string sample value\r\n"
						"LastLM	datetime	Jan 5, 1994 1:23:45 PM\r\n"
						"PrivHome	boolean		TRUE\r\n"
						"PrivWork	boolean		TRUE\r\n"
						"ID	long		1\r\n"
						"ProvID	long		1\r\n"
						"LocID	long		1\r\n"
						"Location	string	255	string sample value\r\n"
						"ShowState	long		1\r\n"
						"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"SetID	long		1\r\n"
						"PrivFax	boolean		TRUE\r\n"
						"StateText	string	50	string sample value\r\n"
						"CustomText1	string	255	string sample value \r\n"
						"CustomText2	string	255	string sample value \r\n"
						"CustomText3	string	255	string sample value \r\n"
						"CustomText4	string	255	string sample value \r\n"
						"ApptID	long	1 \r\n"
						"PrimReferralSource	string	50	string sample value\r\n"
						"AuthNum	string	50	string sample value\r\n"
						"AllocationID	long	1 \r\n"
						"PriInsCoName	string	255	string sample value \r\n"
						"SecInsCoName	string	255	string sample value \r\n"
						"ThirdInsCoName	string	255	string sample value \r\n"
						"FourthInsCoName	string	255	string sample value \r\n"
						"FifthInsCoName	string	255	string sample value \r\n"
						"SixthInsCoName	string	255	string sample value \r\n"
						"ApptPriInsCoName	string	255	string sample value \r\n"
						"ApptSecInsCoName	string	255	string sample value \r\n"
						"ApptInsList	memo	\r\n"	
						"");
				break;

				case 1:
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
					"AllocationID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"ApptID	long		1 \r\n"
					"AllocationNotes	memo		memo sample data \r\n"
					"AllocationStatus	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllocationDetailID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductItemID	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"AllocationDetailStatus	long		1 \r\n"
					"AllocationDetailNotes	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UserDefinedID	long		1 \r\n"
					"FullName	string	255	string sample value \r\n"
					"PersonLocation	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ApptType	string	255	string sample value \r\n"
					"ApptPurpose	memo		string sample value \r\n"
					"StatusType	long	1 \r\n"
					"StatusText	string	255	string sample value \r\n"
					"AllocationStatusDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DetailStatusType	long	1 \r\n"
					"DetailStatusText	string	255	string sample value \r\n"
					"ProvName	string	255	string sample value \r\n"
					"ID	long		1 \r\n"
					);
				break;
			}					

		break;

		case 394: //monthly schedule
		case 19: //monthly schedule from reports
			// (j.gruber 2008-09-17 13:03) - PLID 30284 - updated to add allocation report
			// (j.jones 2011-04-05 09:57) - PLID 39448 - added up to 6 insco names
			// (j.armen 2011-07-06 11:08) - PLID 44205 - Added confirmed by
			// (j.gruber 2012-09-11 10:02) - PLID  52033 - added app tins fields
			switch (nSubReport) {
				case 0: 

					strReturn.Format("; Field definition file for table: ADORecordset\r\n"
							"PatID	long	1\r\n"
							"UserDefinedID	long	1\r\n"
							"First	string	50	string sample value\r\n"
							"Middle	string	50	string sample value\r\n"
							"Last	string	50	string sample value\r\n"
							"Item	string	50	string sample value\r\n"
							"Date	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"Notes	memo	255	string sample value\r\n"
							"Type	string	50	string sample value\r\n"
							"Purpose	memo	255	string sample value\r\n"
							"HomePhone	string	20	string sample value\r\n"
							"WorkPhone	string	20	string sample value\r\n"
							"CellPhone	string	20	string sample value\r\n"
							"OtherPhone	string	20	string sample value\r\n"
							"Email	string	50	string sample value\r\n"
							"Pager	string	20	string sample value\r\n"
							"Confirmed	long	1\r\n"
							"ConfirmedBy	string	50	string sample value\r\n"
							"Fax	string	20	string sample value\r\n"
							"PreferredContact	string	6	sample\r\n"
							"StartTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"EndTime	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"Duration	long	1\r\n"
							"CreatedLogin	string	100	string sample value\r\n"
							"ModifiedDate	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"ModifiedLogin	string	100	string sample value\r\n"
							"LastLM	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"PrivHome	boolean	TRUE\r\n"
							"PrivWork	boolean	TRUE\r\n"
							"ID	long	1\r\n"
							"LocID	long	1\r\n"
							"Location	string	255	string sample value\r\n"
							"ShowState	byte	1\r\n"
							"BirthDate	datetime	Jan 5, 1994 1:23:45 PM\r\n"
							"ProvID	long	1\r\n"
							"SetID	long	1 \r\n"
							"PrivFax	boolean	TRUE\r\n"
							"StateText	string	50	string sample value\r\n"
							"CustomText1	string	255	string sample value\r\n"
							"CustomText2	string	255	string sample value\r\n"
							"CustomText3	string	255	string sample value\r\n"
							"CustomText4	string	255	string sample value\r\n"
							"ApptID	long	1\r\n"
							"PrimReferralSource	string	50	string sample value\r\n"
							"AuthNum	string	50	string sample value\r\n"
							"AllocationID	long	1\r\n"
							"PriInsCoName	string	255	string sample value \r\n"
							"SecInsCoName	string	255	string sample value \r\n"
							"ThirdInsCoName	string	255	string sample value \r\n"
							"FourthInsCoName	string	255	string sample value \r\n"
							"FifthInsCoName	string	255	string sample value \r\n"
							"SixthInsCoName	string	255	string sample value \r\n"
							"ApptPriInsCoName	string	255	string sample value \r\n"
							"ApptSecInsCoName	string	255	string sample value \r\n"
							"ApptInsList	memo	\r\n"	
							"");
				break;

					case 1:
					strReturn.Format("; Field definition file for table: ADORecordset \r\n"
						"AllocationID	long		1 \r\n"
						"PatID	long		1 \r\n"
						"LocID	long		1 \r\n"
						"ApptID	long		1 \r\n"
						"AllocationNotes	memo		memo sample data \r\n"
						"AllocationStatus	long		1 \r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"AllocationDetailID	long		1 \r\n"
						"ProductID	long		1 \r\n"
						"ProductItemID	long		1 \r\n"
						"Quantity	number		1.00 \r\n"
						"AllocationDetailStatus	long		1 \r\n"
						"AllocationDetailNotes	string	255	string sample value \r\n"
						"ProductName	string	255	string sample value \r\n"
						"SerialNum	string	255	string sample value \r\n"
						"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"UserDefinedID	long		1 \r\n"
						"FullName	string	255	string sample value \r\n"
						"PersonLocation	string	255	string sample value \r\n"
						"ProvID	long		1 \r\n"
						"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"ApptType	string	255	string sample value \r\n"
						"ApptPurpose	memo		string sample value \r\n"
						"StatusType	long	1 \r\n"
						"StatusText	string	255	string sample value \r\n"
						"AllocationStatusDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"DetailStatusType	long	1 \r\n"
						"DetailStatusText	string	255	string sample value \r\n"
						"ProvName	string	255	string sample value \r\n"
						"ID	long		1 \r\n"
					);
				break;
			}
			break;

		case 93:	//No Show patients by referral
			// (a.wilson 2012-3-20) PLID 49058 - added userdefinedid and birthdate.
			strReturn.Format("; Field definition file for table: ADORecordset \r\n"
				"PatName	string	153	string sample value\r\n "
				"RefName	string	50	string sample value \r\n"
				"Notes	memo	3000	string sample value \r\n"
				"Type	string	50	string sample value \r\n"
				"Purpose	memo	1000	string sample value \r\n"
				"Item	memo	1000	string sample value \r\n"
				"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatientID	long		1 \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"HomePhone	string	20	string sample value \r\n"
				"WorkPhone	string	20	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"PatID	long		1 \r\n"
				"ResourceID	long		1 \r\n"
				"PrivHome	boolean		TRUE \r\n"
				"PrivWork	boolean		TRUE \r\n"
				"TypeID	long		1\r\n"
				"ApptID	long	1 \r\n"
				"UserDefinedID	long	1 \r\n"
				"Birthdate	datetime		Jan 5, 1994 1:23:45 PM"
				"");
			break;

		case 488: //Applies Across Date
			strReturn = "; Field definition file for table: ADORecordset \n"
			"PatID	long		1 \n"
			"PatName	string	153	string sample value \n"
			"AppliedType	long		1 \n"
			"AppliedTotal	currency		1.00 \n"
			"AppliedDesc	string	255	string sample value \n"
			"AppliedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"AppliedIDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"AppliedLocName	string	255	string sample value \n"
			"ApplyToType	long		1 \n"
			"ApplyToTotal	currency		1.00 \n"
			"ApplyToDesc	string	255	string sample value \n"
			"ApplyToDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"ApplyToIDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"ApplyToLocName	string	255	string sample value \n"
			"DateOfApply	datetime		Jan 5, 1994 1:23:45 PM \n"
			"AmountOfApply	currency		1.00";
			break;

		case 184: //Patient Notes by Category
			// (j.dinatale 2011-10-10 17:11) - PLID 45899 - added city, state, and patient coordinator name to the list of available fields
			strReturn = "; Field definition file for table: ADORecordset \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"Last	string	50	string sample value \n"
			"PatID	long		1 \n"
			"UserDefinedID	long		1 \n"
			"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Time	string	30	string sample value \n"
			"Note	memo	4000	string sample value \n"
			"Category	string	50	string sample value \n"
			"LocID	long		1 \n"
			"Location	string	255	string sample value \n"
			"ProvID	long		1 \n"
			"CatID	long		1 \n"
			"ProvName	string	153	string sample value\n"
			"City	string	50	string sample value \n"
			"State	string	50	string sample value \n"
			"PtCoorFirst	string	50	string sample value \n"
			"PtCoorMiddle	string	50	string sample value \n"
			"PtCoorLast	string	50	string sample value \n";
			break;

		case 245: //order report
			//(e.lally 2007-05-08) PLID 24506 - Added barcode field
			// (j.gruber 2008-02-28 15:26) - PLID 29127 - added a bunch of fields including sold to/ship to, purchase order, contact name, payment information, catalog #, serial number, order destination type
			// (j.jones 2008-05-27 09:59) - PLID 30167 - added SupplierT.AccountName
			//TES 5/27/2008 - PLID 29455 - Added UserDefinedID, PatientInitials, and ApptDate
			// (j.jones 2008-06-19 15:48) - PLID 30446 - added PercentOff and Discount
			// (j.jones 2009-01-23 10:54) - PLID 32822 - added OrderMethod
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \r\n"
			"ID	long		1 \r\n"
			"Description	string	50	string sample value \r\n"
			"TrackingID	string	50	string sample value \r\n"
			"Name	string	255	string sample value \r\n"
			"Address1	string	150	string sample value \r\n"
			"Address2	string	150	string sample value \r\n"
			"City	string	50	string sample value \r\n"
			"State	string	50	string sample value \r\n"
			"Zip	string	50	string sample value \r\n"
			"Phone	string	20	string sample value \r\n"
			"Fax	string	50	string sample value \r\n"
			"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"Tax	number		1.00 \r\n"
			"OrderExtraCost	number		1.00 \r\n"
			"DateDue	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"Notes	memo	2000	string sample value \r\n"
			"Catalog	string	50	string sample value \r\n"
			"Company	string	150	string sample value \r\n"
			"SupAddr1	string	75	string sample value \r\n"
			"SupAddr2	string	75	string sample value \r\n"
			"SupCity	string	50	string sample value \r\n"
			"SupState	string	20	string sample value \r\n"
			"SupZip	string	20	string sample value \r\n"
			"CCNumber	string	50	string sample value \r\n"
			"CompanyID	string	50	string sample value \r\n"
			"SupFax	string	20	string sample value \r\n"
			"WorkPhone	string	20	string sample value \r\n"
			"AccountName	string	255	string sample value \r\n"
			"Product	string	255	string sample value \r\n"
			"UnitDesc	string	50	string sample value \r\n"
			"QuantityOrdered	number		1.00 \r\n"
			"DateReceived	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"Amount	currency		1.00 \r\n"
			"ExtraCost	currency		1.00 \r\n"
			"LineAmount	number		1.00 \r\n"
			"PercentOff	number		1.00 \r\n"
			"Discount	currency		1.00 \r\n"
			"UseUnitOfOrder	boolean		TRUE \r\n"
			"UnitOfOrderDesc	string	50	string sample value \r\n"
			"UnitOfUsageDesc	string	50	string sample value \r\n"
			"UOConversion	long		1 \r\n"
			"Barcode	string	80	string sample value \r\n"
			"PurchaseOrderNum	string	255	string sample value \r\n"
			"ContactName	memo		string sample value \r\n"
			"CCName	memo	255	string sample value \r\n"
			"CardName	string	50	string sample value \r\n"
			"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"ShippingMethod	memo	255	string sample value \r\n"
			"SoldToLocation	string	255	string sample value \r\n"
			"SoldToAdd1	string	75	string sample value \r\n"
			"SoldToAdd2	string	75	string sample value \r\n"
			"SoldToCity	string	50	string sample value \r\n"
			"SoldToState	string	50	string sample value \r\n"
			"SoldToZip	string	50	string sample value \r\n"
			"SoldToPhone	string	20	string sample value \r\n"
			"SoldToFax	string	50	string sample value \r\n"
			"ForStatus	number		1 \r\n"
			"UserDefinedID	long		1 \r\n"
			"PatientInitials	string	3	string sample value \r\n"
			"ApptDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"OrderMethod	string	255	string sample value \r\n"
			"VendorConfirmed	boolean		TRUE \r\n"
			"ConfirmationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
			"ConfirmationNumber	string	50	string sample value";
			break;

		case 223: //Patient General (PP)
			// (j.jones 2009-10-19 17:44) - PLID 35994 - split race and ethnicity
			// (j.dinatale 2010-08-30) - PLID 33266 - added primary and secondary insurance information
			// (j.gruber 2011-09-28 09:41) - PLID 45357 - add affiliate phys
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			// (b.savon 2014-03-24 08:01) - PLID 61477 - Modify Patient General (PP) for ICD-10.
			strReturn = "; Field definition file for table: ADORecordset \n"
			"PatID	long		1 \n"
			"UserDefinedID	long		1 \n"
			"CurrentStatus	short		1 \n"
			"MaritalStatus	string	10	string sample value \n"
			"SpouseName	string	30	string sample value \n"
			"Nickname	string	30	string sample value \n"
			"MainPhysician	long		1 \n"
			"Occupation	string	130	string sample value \n"
			"Company	string	150	string sample value \n"
			"Employment	long		1 \n"
			"EmployerFirst	string	50	string sample value \n"
			"EmployerMiddle	string	50	string sample value \n"
			"EmployerLast	string	50	string sample value \n"
			"EmployerAddress1	string	50	string sample value \n"
			"EmployerAddress2	string	50	string sample value \n"
			"EmployerCity	string	50	string sample value \n"
			"EmployerState	string	50	string sample value \n"
			"EmployerZip	string	50	string sample value \n"
			"TypeOfPatient	long		1 \n"
			"DefaultInjuryDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"ICD9Code1	string	50	string sample value \n"
			"ICD9Code2	string	50	string sample value \n"
			"ICD9Code3	string	50	string sample value \n"
			"ICD9Code4	string	50	string sample value \n"
			"ICD10Code1	string	50	string sample value \n"
			"ICD10Code2	string	50	string sample value \n"
			"ICD10Code3	string	50	string sample value \n"
			"ICD10Code4	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergRelation	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"InLocation	long		1 \n"
			"Location	long		1 \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"Last	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Gender	byte		1 \n"
			"Prefix	string	50	string sample value \n"
			"Suffix	string	5	string sample value \n"
			"Title	string	50	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"SocialSecurity	string	11	string sample value \n"
			"FirstContactDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"InputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"UserName	string	50	string sample value \n"
			"WarningMessage	string	1024	string sample value \n"
			"Note	memo		memo sample data \n"
			"DocName	string	153	string sample value \n"
			"RefPhysName	string	153	string sample value \n"
			"Practice	string	255	string sample value \n"
			"GroupName	string	100	string sample value \n"
			"ReferralName	string	50	string sample value \n"
			"PrivHome	boolean		TRUE \n"
			"PrivWork	boolean		TRUE \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n"
			"PrivFax	boolean		TRUE \n"
			"PrivOther	boolean		TRUE \n"
			"PrivPager	boolean		TRUE \n"
			"PrivEmail	boolean		TRUE \n"
			"PCPName	string	153	string sample value \n"
			"CoordName	string	153	string sample value \n"
			"PrivCell	boolean		TRUE \n"
			"Race	string	255	string sample value\n"
			"CDCRace	string	255	string sample value\n"
			"CDCEthnicity	string	255	string sample value\n"
			"PrimInsName	string	255	string sample value \n"
			"PrimInsPlanName	string	50	string sample value \n"
			"PrimInsID	string	50	string sample value \n"
			"PrimInsGroupNum	string	50	string sample value \n"
			"PrimInsInsuredPartyLastName	string	50	string sample value \n"
			"PrimInsInsuredPartyMiddleName	string	50	string sample value \n"
			"PrimInsInsuredPartyFirstName	string	50	string sample value \n"
			"PrimInsInsuredPartyRelationTo	string	60	string sample value \n"
			"PrimInsInsuredPartyGender	string	10	string sample value \n"
			"PrimInsInsuredPartyAddress1	string	150	string sample value \n"
			"PrimInsInsuredPartyAddress2	string	150	string sample value \n"
			"PrimInsInsuredPartyCity	string	50	string sample value \n"
			"PrimInsInsuredPartyState	string	20	string sample value \n"
			"PrimInsInsuredPartyZip	string	20	string sample value \n"
			"PrimInsInsuredPartySocSec	string	11	string sample value \n"
			"PrimInsInsuredPartyTitle	string	50	string sample value \n"
			"PrimInsInsuredPartyBirthDate	date		Jan 5, 1994 \n"
			"SecInsName	string	255	string sample value \n"
			"SecInsPlanName	string	50	string sample value \n"
			"SecInsID	string	50	string sample value \n"
			"SecInsGroupNum	string	50	string sample value \n"
			"SecInsInsuredPartyLastName	string	50	string sample value \n"
			"SecInsInsuredPartyMiddleName	string	50	string sample value \n"
			"SecInsInsuredPartyFirstName	string	50	string sample value \n"
			"SecInsInsuredPartyRelationTo	string	60	string sample value \n"
			"SecInsInsuredPartyGender	string	10	string sample value \n"
			"SecInsInsuredPartyAddress1	string	150	string sample value \n"
			"SecInsInsuredPartyAddress2	string	150	string sample value \n"
			"SecInsInsuredPartyCity	string	50	string sample value \n"
			"SecInsInsuredPartyState	string	20	string sample value \n"
			"SecInsInsuredPartyZip	string	20	string sample value \n"
			"SecInsInsuredPartySocSec	string	11	string sample value \n"
			"SecInsInsuredPartyTitle	string	50	string sample value \n"
			"SecInsInsuredPartyBirthDate	date		Jan 5, 1994 \n"
			"AffiliatePhysName	string	255	string sample value \n";
			break;

		case 448: //Contacts General - Providers (PP)
			//TES 9/8/2008 - PLID 27727 - Re-ordered fields, DefLocation is no longer contact-specific.
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \n"
			"ProviderID	long		1 \n"
			"Company	string	150	string sample value \n"
			"Last	string	50	string sample value \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"FullName	string	153	string sample value \n"
			"Prefix	string	50	string sample value \n"
			"Title	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Spouse	string	50	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Gender	string	6	string sample value \n"
			"SocialSecurity	string	11	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Note	memo		memo sample data \n"
			"DefLocation	string	255	string sample value \n"
			"Fed Employer ID	string	30	string sample value \n"
			"DEA Number	string	30	string sample value \n"
			"BCBS Number	string	50	string sample value \n"
			"Medicare Number	string	50	string sample value \n"
			"Medicaid Number	string	50	string sample value \n"
			"Workers Comp Number	string	50	string sample value \n"
			"Other ID Number	string	50	string sample value \n"
			"Other ID Description	string	50	string sample value \n"
			"UPIN	string	50	string sample value \n"
			"EIN	string	100	string sample value \n"
			"License	string	50	string sample value \n"
			"AccountNumber	long		1 \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n";
			break;

		case 449: //Contacts General - Users (PP)
			//TES 9/8/2008 - PLID 27727 - Added DefLocation
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \n"
			"ProviderID	long		1 \n"
			"Company	string	150	string sample value \n"
			"Last	string	50	string sample value \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"FullName	string	153	string sample value \n"
			"Prefix	string	50	string sample value \n"
			"Title	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Spouse	string	50	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Gender	string	6	string sample value \n"
			"SocialSecurity	string	11	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Note	memo		memo sample data \n"
			"DefLocation	string	255	string sample value \n"
			"NationalEmplNumber	string	30	string sample value \n"
			"PatientCoordinator	boolean		TRUE \n"
			"UserName	string	50	string sample value \n"
			"Administrator	boolean		TRUE \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n";
			break;

		case 450: //Contacts General - Suppliers (PP)
			//TES 9/8/2008 - PLID 27727 - Added DefLocation
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \n"
			"ProviderID	long		1 \n"
			"Company	string	150	string sample value \n"
			"Last	string	50	string sample value \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"FullName	string	153	string sample value \n"
			"Prefix	string	50	string sample value \n"
			"Title	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Spouse	string	50	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Gender	string	6	string sample value \n"
			"SocialSecurity	string	11	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Note	memo		memo sample data \n"
			"DefLocation	string	255	string sample value \n"
			"PaymentMethod	string	50	string sample value \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n";
			break;

		case 451: //Contacts General - Other Contacts (PP)
			//TES 9/8/2008 - PLID 27727 - Added DefLocation
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \n"
			"ProviderID	long		1 \n"
			"Company	string	150	string sample value \n"
			"Last	string	50	string sample value \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"FullName	string	153	string sample value \n"
			"Prefix	string	50	string sample value \n"
			"Title	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Spouse	string	50	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Gender	string	6	string sample value \n"
			"SocialSecurity	string	11	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Note	memo		memo sample data \n"
			"DefLocation	string	255	string sample value \n"
			"Nurse	boolean		TRUE \n"
			"Anesthesiologist	boolean		TRUE \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n";
			break;

		case 452: //Contacts General - Ref Phys (PP)
			//TES 9/8/2008 - PLID 27727 - Added DefLocation
			// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
			strReturn = "; Field definition file for table: ADORecordset \n"
			"ProviderID	long		1 \n"
			"Company	string	150	string sample value \n"
			"Last	string	50	string sample value \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"FullName	string	153	string sample value \n"
			"Prefix	string	50	string sample value \n"
			"Title	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Spouse	string	50	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"Gender	string	6	string sample value \n"
			"SocialSecurity	string	11	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Note	memo		memo sample data \n"
			"DefLocation	string	255	string sample value \n"
			"ReferringPhyID	string	50	string sample value \n"
			"UPIN	string	100	string sample value \n"
			"BlueShieldID	string	100	string sample value \n"
			"FedEmployerID	string	50	string sample value \n"
			"DEANumber	string	50	string sample value \n"
			"MedicareNumber	string	50	string sample value \n"
			"WorkersCompNumber	string	50	string sample value \n"
			"OtherIDNumber	string	50	string sample value \n"
			"License	string	50	string sample value \n"
			"MedicaidNumber	string	50	string sample value \n"
			"NPI	string	50	string sample value \n"
			"Field1Name	string	50	string sample value \n"
			"Field1	string	255	string sample value \n"
			"Field2Name	string	50	string sample value \n"
			"Field2	string	255	string sample value \n"
			"Field3Name	string	50	string sample value \n"
			"Field3	string	255	string sample value \n"
			"Field4Name	string	50	string sample value \n"
			"Field4	string	255	string sample value \n";
			break;

			/*case 42: // Patients By Appointments
				strReturn = "; Field definition file for table: ADORecordset \n "
					"UserDefinedID	long		1 \n "
					"PatID	long		1 \n "
					"PatName	string	153	string sample value \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n "
					"PurpName	memo	255	string sample value \n "
					"Notes	memo	255	string sample value \n "
					"Name	string	50	string sample value \n "
					"ResourceID	long		1 \n "
					"Item	memo	255	string sample value \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n "
					"ProvID	long		1 \n "
					"Status	byte		1 \n "
					"LocID	long		1 \n "
					"Location	string	255	string sample value \n ";
			break;*/
			case 358: // Actual Surgery Income
				strReturn = "; Field definition file for table: ADORecordset \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Hours	number		1.00 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Name	string	50	string sample value \n"
					"Item	memo	1000	string sample value \n"
					"SetID	long		1 \n"
					"HomePhone	string	20	string sample value \n"
					"Purpose	memo	1000	string sample value \n"
					"AptTypeID	long		1 \n"
					"ResourceID	long		1 \n"
					"PatID	long		1 \n"
					"ProvID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"DocName	string	153	string sample value \n"
					"ProcedureName	string	1000	string sample value \n"
					"TotalLessDiscounts	currency		1.00 \n"
					"Discounts	currency		1.00 \n"
					"Total	currency		1.00 \n"
					"TotalPracLessDiscounts	currency		1.00 \n"
					"PracDiscounts	currency		1.00 \n"
					"TotalPrac	currency		1.00 \n"
					"TotalOutsideAmount	currency		1.00 \n"
					"OutsideDiscounts	currency		1.00 \n"
					"OutsideNetTotal	currency		1.00 \n"
					"BillAmount	currency		1.00 \n"
					"TotalAnesFee	currency		1.00 \n"
					"TotalFacFee	currency		1.00 \n"
					"InventoryFee	currency		1.00 \n"
					"TotalLessDiscountsNoTax	currency		1.00 \n"
					"DiscountsNoTax	currency		1.00 \n"
					"TotalNoTax	currency		1.00 \n"
					"TotalOutsideAmountNoTax	currency		1.00 \n"
					"TotalAnesFeeNoTax	currency		1.00 \n"
					"TotalFacFeeNoTax	currency		1.00 \n"
					"InventoryFeeNoTax	currency		1.00 \n"
					"TotalLessDiscountsTaxOnly	currency		1.00 \n"
					"DiscountsTaxOnly	currency		1.00 \n"
					"TotalTaxOnly	currency		1.00 \n"
					"TotalOutsideAmountTaxOnly	currency		1.00 \n"
					"TotalAnesFeeTaxOnly	currency		1.00 \n"
					"TotalFacFeeTaxOnly	currency		1.00 \n"
					"InventoryFeeTaxOnly	currency		1.00 \n"
					"TotalProcFees	currency		1.00 \n"
					"TotalProcFeesNoTax	currency		1.00 \n"
					"TotalProcFeesTaxOnly	currency		1.00 \n"
					"";
				
			break;
			case 339: // Patient Notes By User
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset\n"
					"First	string	50	string sample value\n"
					"Middle	string	50	string sample value\n"
					"Last	string	50	string sample value\n"
					"PatID	long		1\n"
					"UserDefinedID	long	 	1\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\n"
					"Time	string	30	string sample value\n"
					"Category	string	50	string sample value\n"
					"Note	memo	255	string sample value\n"
					"LocID	long		1\n"
					"Location	string	255	string sample value\n"
					"ProvID	long		1\n"
					"UserID	long		1\n"
					"UserName	string	50	string sample value\n"
					"ProvName	string	153	string sample value\n"
					"PatientStatus	string	100	string sample value\n"
					"UserActiveAlarmCount	long		1\n"
					"Address1	string	150	string sample value\n"
					"Address2	string	150	string sample value\n"
					"State	string	20	string sample value\n"
					"City	string	50	string sample value\n"
					"Zip	string	20	string sample value\n";


			break;
			case 110: //Patient To Do List
				// (c.haag 2008-07-29 10:47) - PLID 30565 - Updated for new todo structure
				//(b.spivey August 21, 2014) - PLID 57119 - Added BirthDate
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	string	6	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"AssignID	long	1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	2000	string sample value \n"
					"Patient	string	255	string sample value \n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"AssignedTo	memo	2000	string sample value \n"
					"StateID	long		1 \n"
					"EnteredByName	string	255	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	255	string sample value \n"
					"EnteredByID	long		1 \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TaskID	long		1 \n"
					"AssignFullName	memo	2000	string sample value \n"
					"AssignIDs	memo	2000	string sample value	\n";

			break;
			case 440://appointments by patient
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"First	string	50	string sample value  \n "
					"Middle	string	50	string sample value  \n "
					"Last	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo 255	string sample value \n "
					"Name	string	50	string sample value \n "
					"Item	memo	255	string sample value  \n "
					"AptTypeID	long		1  \n "
					"Status	byte		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"Purpose	memo 255	string sample value  \n "
					"ID	long		1  \n "
					"UserDefinedID	long		1  \n "
					"PatID	long		1  \n "
					"PrivHome	boolean		TRUE  \n "
					"PrivWork	boolean		TRUE  \n "
					"Status2	byte		1  \n "
					"ShowState	long		1  \n "
					"ApptID	long		1  \n "
					"";
			break;
			case 418://appointments by place of service
				strReturn = "; Field definition file for table: ADORecordset \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"First	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\n"
					"Notes	memo	3000	string sample value \n"
					"Name	string	50	string sample value \n"
					"Item	string	1000	string sample value \n"
					"SetID	long		1 \n"
					"HomePhone	string	20	string sample value \n"
					"Purpose	memo	1000	string sample value \n"
					"ID	long		1 \n"
					"ResourceID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"ApptID	long		1 \n"
					"PatientID	long		1 \n"
					"PatID	long		1 \n"
					"PrivHome	boolean		TRUE \n"
					"PrivWork	boolean		TRUE \n"
					"Email	string	50	string sample value \n"
					"LocName	string	255	string sample value \n"
					"UserDefinedID	long		1 \n"
					"";
			break;
			case 377://Appointments By Status 
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"First	string	50	string sample value  \n "
					"Middle	string	50	string sample value  \n "
					"Last	string	50	string sample value  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\n"
					"Notes	memo	255	string sample value  \n "
					"Name	string	50	string sample value  \n "
					"Item	string	255	string sample value  \n "
					"SetID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"Purpose	memo	255	string sample value  \n "
					"ID	long		1  \n "
					"ResourceID	long		1  \n "
					"PatName	string	153	string sample value  \n "
					"ApptID	long		1  \n "
					"PatientID	long		1  \n "
					"LocID	long		1  \n "
					"Location	string	255	string sample value  \n "
					"PatID	long		1  \n "
					"PrivHome	boolean		TRUE  \n "
					"PrivWork	boolean		TRUE  \n "
					"Email	string	50	string sample value  \n "
					"ShowState	string	255	string sample value  \n "
					"StateID	long		1  \n "
					"";
			break;
			case 427://Appointments By template
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"FullName	string	153	string sample value  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"LocID	long		1  \n "
					"Notes	string	255	string sample value  \n "
					"Type	string	50	string sample value  \n "
					"Item	string	255	string sample value  \n "
					"Purpose	string	255	string sample value  \n "
					"ResourceID	long		1  \n "
					"PatID	long		1  \n "
					"UserDefinedID	long		1  \n "
					"Location	string	255	string sample value  \n "
					"Name	string	50	string sample value  \n "
					"Color	long		1  \n "
					"Priority	long		1  \n "
					"ApptID	long		1  \n "
					"TemplateID	long		1  \n "
					"";
			break;
			case 193://Appointments Cancelled
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"UserDefinedID	long		1  \n "
					"PatID	long		1  \n "
					"PatName	string	153	string sample value  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"CancelledBy	string	50	string sample value  \n "
					"CancelledDate	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"ResourceID	long		1  \n "
					"Item	string	50	string sample value  \n "
					"Purpose	memo	255	string sample value  \n "
					"Name	string	50	string sample value  \n "
					"ApptTypeID	long		1  \n "
					"LocID	long		1  \n "
					"Location	string	255	string sample value  \n "
					"ApptID	long		1  \n "
					"CancelReason	memo	255	string sample value  \n "
					"Suppress	long		1  \n "
					"InputUser	string	100	string sample value  \n "
					"InputUserFirst	string	50	string sample value  \n "
					"InputUserMiddle	string	50	string sample value  \n "
					"InputUserLast	string	50	string sample value  \n "
					"CreatedDate	datetime		Jan 1, 2008 1:23:45 PM  \n ";
;
			break;
			case 90://Appointments Without Prepayments 
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PatID	long		1 \n"
					"PatientID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"Type	string	50	string sample value \n"
					"PurposeName	memo	255	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	255	string sample value \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Resource	string	50	string sample value \n"
					"ResourceID	long		1 \n"
					"ID	long		1 \n"
					"AptTypeID	long		1 \n"
					"LocID	long		1 \n"
					"Name	string	255	string sample value \n"
					"ApptID	long		1 \n ";				
			break;
			case 432://Appts Cancelled and not rescheduled
				// (s.dhole 2012-02-16 15:56) - PLID 44444 Added AptTypeID 
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n "
					"AptTypeID	long		1  \n ";
			break;
			case 317://Consults cancelled with no rescedule (by patient)
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n ";
			break;
			case 318://Consults cancelled with no rescedule (by Location)
				strReturn = "; Field definition file for table: ADORecordset   \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n ";
			break;
			case 319://Consults cancelled with no rescedule (by referral source)
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n ";
			break;
			case 320://Consults cancelled with no rescedule by Coordinator
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n ";
			break;
			case 384://Consults cancelled with no rescedule (By Type)
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"ApptID	long		1  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"Notes	memo	255	string sample value  \n "
					"TypeName	string	50	string sample value  \n "
					"PurposeName	memo	255	string sample value  \n "
					"RefName	string	50	string sample value  \n "
					"PatName	string	153	string sample value  \n "
					"CoordName	string	153	string sample value  \n "
					"CreatedLoc	string	255	string sample value  \n "
					"LocID	long		1  \n "
					"PatID	long		1  \n "
					"ReferralID	long		1  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"CellPhone	string	20	string sample value  \n "
					"Email	string	50	string sample value  \n "
					"CreatedLogin	string	100	string sample value  \n "
					"LocName	string	255	string sample value  \n "
					"CancelReason	memo	255	string sample value  \n ";
			break;
			case 94://Appointments requestiong moveup
			case 564: //print preview
				strReturn = "; Field definition file for table: ADORecordset  \n "
					"PatName	string	153	string sample value  \n "
					"SetID	long		1  \n "
					"Purpose	memo	255	string sample value  \n "
					"SetName	string	50	string sample value  \n "
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"HomePhone	string	20	string sample value  \n "
					"WorkPhone	string	20	string sample value  \n "
					"PatID	long		1  \n "
					"ID	long		1  \n "
					"Notes	memo	255	string sample value  \n "
					"MoveUp	boolean		TRUE  \n "
					"UserDefinedID	long		1  \n "
					"LocID	long		1  \n "
					"Location	string	255	string sample value  \n "
					"ResourceID	long		1  \n "
					"PrivHome	boolean		TRUE  \n "
					"PrivWork	boolean		TRUE  \n "
					"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM  \n "
					"ApptID	long		1  \n ";
			break;
			case 281://Consult By Procedures

				switch (nSubReport) {
					case 1:
						switch (nSubReportID) {
							case 0:
								strReturn = "; Field definition file for table: ADORecordset  \n"
									"ConsultID	long		1  \n"
									"ID	long		1  \n"
									"PatID	long		1  \n"
									"Purpose	string	100	string sample value  \n"
									"Date	datetime		Jan 5, 1994 1:23:45 PM  \n"
									"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n"
									"Notes	memo	255	string sample value  \n"
									"LocID	long		1  \n"
									"PurposeID	long		1 \n";

								return strReturn;
							break;
							default: 
								return "";
							break;
						}
					break;

					default:
						strReturn = "; Field definition file for table: ADORecordset  \n"
									"ID	long		1  \n"
									"PatID	long		1  \n"
									"UserDefinedID	long		1  \n"
									"PatName	string	153	string sample value  \n"
									"Date	datetime		Jan 5, 1994 1:23:45 PM  \n"
									"EndTime	datetime		Jan 5, 1994 1:23:45 PM  \n"
									"PurposeID	long		1  \n"
									"ConsPurposes	string	100	string sample value  \n"
									"ConsDesc	memo	255	string sample value  \n"
									"Purpose	string	100	string sample value  \n"
									"LocID	long		1  \n";
					break;
				}
			break;

			case 199: 		//New Patients By Appointment.
				
				switch (nSubReport) {
					case 1:
						switch (nSubReportID) {
							case 0:
								strReturn = "; Field definition file for table: ADORecordset \n"
									"PatID	long		1 \n"
									"PatName	string	153	string sample value \n"
									"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
									"RefID	long		1 \n"
									"RefName	string	50	string sample value \n"
									"UserDefinedID	long		1 \n"
									"LocID	long		1 \n"
									"Location	string	255	string sample value \n"
									"";

								return strReturn;
							break;
							default: 
								return "";
							break;
						}
					break;

					default:
						strReturn = "; Field definition file for table: ADORecordset \n"
							"PatID	long		1 \n"
							"PatName	string	153	string sample value \n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
							"ApptTypeID	long		1 \n"
							"ApptName	string	50	string sample value \n"
							"ApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"RefID	long		1 \n"
							"RefName	string	50	string sample value \n"
							"ID	long		1 \n"
							"Item	string	50	string sample value \n"
							"Purpose	memo	255	string sample value \n"
							"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"UserDefinedID	long		1 \n"
							"LocID	long		1 \n"
							"Location	string	255	string sample value \n"
							"ApptID	long		1 \n"
							"";
					break;
				}
			break;


			break;
			case 108: 		//Scheduled With Pending Balance.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"FullName	string	153	string sample value \n"
					"PatResp	currency		1.00 \n"
					"PriResp	currency		1.00 \n"
					"SecResp	currency		1.00 \n"
					"OtherResp	currency		1.00 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PurposeName	memo	255	string sample value \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	255	string sample value \n"
					"Status	byte		1 \n"
					"Item	string	50	string sample value \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ResourceID	long		1 \n"
					"ApptID	long		1 \n"
					"";
			break;
			case 249: 		//Scheduling Activity.
				// (j.armen 2011-07-06 11:08) - plid 44205 - added confirmed by
				strReturn = " Field definition file for table: ADORecordset \n"
					"PatID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"Confirmed	long		1 \n"
					"ConfirmedBy	string	50	string sample value \n"
					"MoveUp	boolean		TRUE \n"
					"ShowState	string	255	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Item	string	255	string sample value \n"
					"Name	string	50	string sample value \n"
					"AptTypeID	long		1 \n"
					"Purpose	memo	255	string sample value \n"
					"LocID	long		1 \n"
					"Notes	memo	255	string sample value \n"
					"Status	byte		1 \n"
					"ItemID	long		1 \n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"MDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ApptID	long		1 \n"
					"NextAppt	datetime		Jan 5, 1994 1:23:45 PM \n"
					"NextSurgDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"";
			break;
			/*case 500: 		//Scheduling Productivity by Res.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	100	string sample value \n"
					"ConsultsScheduled	long		1 \n"
					"ConsultsSeen	long		1 \n"
					"ConsultsBilled	long		1 \n"
					"TotalBilled	currency		1.00 \n"
					"TotalReceived	currency		1.00 \n"
					"SurgeriesScheduled	long		1 \n"
					"AppointmentsRequested long		1 \n "
					"";*/


			break;
			case 57: 		//Insurance Companies.
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				// (r.goldschmidt 2014-03-31 17:48) - PLID 39699 - Added Payer IDs as available fields
				// (r.farnworth 2015-03-30 17:47) - PLID 65162 - Added ConversionID
				strReturn = "; Field definition file for table: ADORecordset \n"
					"Name	string	255	string sample value \n"
					"Contact	string	153	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"Extension	string	10	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"Note	memo		memo sample data \n"
					"ContactPhone	string	20	string sample value \n"
					"ContactExt	string	10	string sample value \n"
					"ContactFax	string	20	string sample value \n"
					"PlanType	string	1000	string sample value \n"
					"UBPayerID	string	50	string sample value \n"
					"HCFAPayerID	string	50	string sample value \n"
					"EligibilityPayerID	string	50	string sample value \n"
					"ConversionID		string	50	string sample value \n"
					"";
			break;
			case 361: 		//Time log.
				// (j.gruber 2008-06-26 17:20) - PLID 26137 - added location
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserID	long		1 \n"
					"UserName	string	50	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CheckOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Diff	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CheckIn datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"LocationName	string	255	string sample value \n"
					"";
			break;
			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 345: 		//Audit Trail-Contacts.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;
			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 346: 		//Audit Trail-Insurance.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;
			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 348: 		//Audit Trail-Miscellaneous.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;
			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 347: 		//Audit Trail-Palm.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data\n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;
			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 344: 		//Audit Trail-Patients.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;

			case 221: //Contact Report
				strReturn = "; Field definition file for table: ADORecordset \n"
					" PersonID	long		1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM  \n"
					"Note	memo	string sample value  \n"
					"Name	string	153	string sample value  \n"
					"Category	string	50	string sample value  \n"
					"CatID	long		1 \n";
			break;

			case 222:   //Patient Appointments
				strReturn = "; Field definition file for table: ADORecordset \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"First	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"PatName	string	153	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	255	string sample value \n"
					"Name	string	50	string sample value \n"
					"Item	memo	255	string sample value \n"
					"AptTypeID	long		1 \n"
					"Status	byte		1 \n"
					"HomePhone	string	20	string sample value \n"
					"Purpose	memo 255	string sample value \n"
					"ID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"PrivHome	boolean		TRUE \n"
					"PrivWork	boolean		TRUE \n"
					"Status	byte		1 \n"
					"ShowState	long		1";
				break;
			case 534: //Peformance Indices
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"Name	string	100	string sample value \n"
					"PatientName	string	255	string sample value \n"
					"UserDefinedID	long		1 \n"
					"HomePhone	string	50	string sample value \n"
					"WorkPhone	string	50	string sample value \n"
					"CellPhone	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City		string	50	string sample value \n"
					"State		string	20	string sample value \n"
					"Zip		string	20	string sample value \n";
			break;

			case 445: // (c.haag 2011-06-16) - PLID 17539 - PracYakker Messages by Sender. Added
				// for memo field support.
				strReturn = "; Field definition file for table: ADORecordset \n"
					"MessageID	long		1 \n"
					"Regarding	string	255	string sample value \n"
					"Priority	string	255	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Sender	string	255	string sample value \n"
					"Recipient	string	255	string sample value \n"
					"Text	memo	3500	string sample value \n"
					"MessageGroupID	long		1 \n"
					"UserID	long		1 \n";
			break;

			case 490:
				strReturn = "; Field definition file for table: ADORecordset \n"
					"Text	memo	255	string sample value \n"
					"Regarding	string	153	string sample value \n"
					"Priority	string	6	string sample value \n"
					"DateSent	datetime		Jan 5, 1994 1:23:45 PM \n"
					"MessageGroupID	long		1 \n"
					"Sender	string	50	string sample value \n"
					"Recipient	string	50	string sample value "; 
			break;

			case 535:  //retained patients
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PersonID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"UnionType	string	20	string sample value \n"
					"LastProcDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProcedureName 	string	255	string sample value \n";
			break;

			case 536: //Unretained Patients
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PersonID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"LastProcDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProcedureName 	string	255	string sample value \n";
			break;

			case 453: //To Do Alarm:
				// (c.haag 2008-07-29 10:47) - PLID 30565 - Updated for new todo structure
				//(b.spivey August 21, 2014) - PLID 57119 - Added BirthDate
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	string	6	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"AssignID	long	1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	2000	string sample value \n"
					"Patient	string	255	string sample value \n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"AssignedTo	memo	2000	string sample value \n"
					"StateID	long		1 \n"
					"EnteredByName	string	255	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	50	string sample value \n"
					"EnteredByID	long		1 \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"UserName	string	255	string sample value \n "
					"TaskID	long	1 \n"
					"AssignFullName	memo	2000	string sample value \n"
					"AssignIDs	memo	2000	string sample value	\n";
			break;

			//(e.lally 2009-08-28) PLID 35330 - Depreciated and recreated under a new ID
			/*
			case 511: //Conversin rate by procedure
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PurposeID	long		1 \n"
					"Name	string	100	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Address1	string	75	string sample value \n"
					"Address2	string	75	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n" 
					"CellPhone	string	20	string sample value \n"
					"HadSurgery	long		1 \n"
					"HadConsult	long		1 \n";
			break;
			*/

			//(e.lally 2009-09-08) PLID 35332 - Depreciated and recreated under a new ID
			/*
			case 526: //Conversion Date By Rate
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"Name	string	100	string sample value \r\n"
					"MonthYear	string	100	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Last	string	50	string sample value \r\n"
					"Address1	string	75	string sample value \r\n"
					"Address2	string	75	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"HomePhone	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"CellPhone	string	20	string sample value \r\n"
					"UnionType	long		1 \r\n"
					"HadSurgery	long		1 \r\n";
			break;
			*/

			case 543: //Time Scheduled Productivity
				// (d.moore 2007-07-25) - PLID 17519 - Added appointment type field.
				// (j.gruber 2009-07-09 12:01) - PLID 20398 - added countofappts
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Resource	string	100	string sample value \r\n"
					"MinutesScheduled	long		1 \r\n"
					"MinutesOpen	long		1 \r\n"
					"ApptType	string	100	string sample value \r\n"
					"CountOfAppts	long		1 \r\n";

			break;

			case 15:	//Contact To Do List
				// (c.haag 2008-07-29 10:47) - PLID 30565 - Updated for new todo structure
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	byte		1 \n"
					"Contact	string	255	string sample value \n"
					"Notes	memo	2000	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TaskID	long		1 \n"
					"AssignID	long	1 \n"
					"AssignName	memo	2000	string sample value \n"
					"StateID	long		1 \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	255	string sample value \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PatID	long		1 \n"
					"AssignFullName	memo	2000	string sample value \n"
					"AssignIDs	memo	2000	string sample value	\n";
				break;

			case 74:	//Patients by Login
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2 and company
				// (b.savon 2014-03-24 09:17) - PLID 61454 - Modify Patients by Login for ICD-10.
				strReturn = "; Field definition file for table: ADORecordset \n"
			"UserDefinedID	long		1 \n"
			"PatID	long		1 \n"
			"PatName	string	153	string sample value \n"
			"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
			"PersonID	long		1 \n"
			"CurrentStatus	short		1 \n"
			"MaritalStatus	string	10	string sample value \n"
			"SpouseName	string	30	string sample value \n"
			"Occupation	string	130	string sample value \n"
			"EmployeeID	long		1 \n"
			"ReferralID	long		1 \n"
			"Nickname	string	30	string sample value \n"
			"ProvID	long		1 \n"
			"Company	string	150	string sample value \n"
			"EmployerFirst	string	50	string sample value \n"
			"EmployerMiddle	string	50	string sample value \n"
			"EmployerLast	string	50	string sample value \n"
			"EmployerAddress1	string	50	string sample value \n"
			"EmployerAddress2	string	50	string sample value \n"
			"EmployerCity	string	50	string sample value \n"
			"EmployerState	string	50	string sample value \n"
			"EmployerZip	string	50	string sample value \n"
			"TypeOfPatient	long		1 \n"
			"DefaultInjuryDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"ICD9Code1	string	50	string sample value \n"
			"ICD9Code2	string	50	string sample value \n"
			"ICD9Code3	string	50	string sample value \n"
			"ICD9Code4	string	50	string sample value \n"
			"ICD10Code1	string	50	string sample value \n"
			"ICD10Code2	string	50	string sample value \n"
			"ICD10Code3	string	50	string sample value \n"
			"ICD10Code4	string	50	string sample value \n"
			"FinancialNotes	memo		memo sample data \n"
			"SuppressStatement	boolean		TRUE \n"
			"DefaultReferringPhyID	long		1 \n"
			"MirrorID	string	17	string sample value \n"
			"ImageIndex	long		1 \n"
			"InformID	long		1 \n"
			"EmergFirst	string	50	string sample value \n"
			"EmergLast	string	50	string sample value \n"
			"EmergRelation	string	50	string sample value \n"
			"EmergHPhone	string	20	string sample value \n"
			"EmergWPhone	string	20	string sample value \n"
			"Archived	boolean		TRUE \n"
			"First	string	50	string sample value \n"
			"Middle	string	50	string sample value \n"
			"Last	string	50	string sample value \n"
			"Address1	string	150	string sample value \n"
			"Address2	string	150	string sample value \n"
			"City	string	50	string sample value \n"
			"State	string	20	string sample value \n"
			"Zip	string	20	string sample value \n"
			"Gender	byte		1 \n"
			"Prefix	string	50	string sample value \n"
			"Suffix	string	5	string sample value \n"
			"Title	string	50	string sample value \n"
			"HomePhone	string	20	string sample value \n"
			"WorkPhone	string	20	string sample value \n"
			"Extension	string	10	string sample value \n"
			"CellPhone	string	20	string sample value \n"
			"OtherPhone	string	20	string sample value \n"
			"Email	string	50	string sample value \n"
			"Pager	string	20	string sample value \n"
			"Fax	string	20	string sample value \n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"SocialSecurity	string	11	string sample value \n"
			"FirstContactDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"InputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
			"WarningMessage	memo	1024	string sample value \n"
			"DisplayWarning	boolean		TRUE \n"
			"Note	memo		memo sample data \n"
			"UserID	long		1 \n"
			"LoginName	string	50	string sample value \n"
			"LocID	long		1 \n"
			"Location	string	255	string sample value \n"
			"PrivFax	boolean		TRUE \n"
			"PrivOther	boolean		TRUE \n"
			"PrivPager	boolean		TRUE \n"
			"PrivEmail	boolean		TRUE";
				break;
			case 372:	//Patient To Do List by Assign To
				// (c.haag 2008-07-30 11:49) - PLID 30565 - Changed for new todo structure
				//(b.spivey August 21, 2014) - PLID 57119 - Added BirthDate
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	string	6	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"AssignID	long		1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	2000	string sample value \n"
					"Patient	string	255	string sample value \n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"AssignedTo	string	255	string sample value \n"
					"StateID	long		1 \n"
					"EnteredByName	string	255	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	255	string sample value \n"
					"EnteredByID	long		1 \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"FullAssignName	string	255	string sample value \n";
				break;
			case 408:	//Patient To Do List by Entered By
				// (c.haag 2008-07-29 10:47) - PLID 30565 - Updated for new todo structure
				//(b.spivey August 21, 2014) - PLID 57119 - Added BirthDate
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	string	6	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"AssignID	long	1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	2000	string sample value \n"
					"Patient	string	255	string sample value \n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"AssignedTo	memo	2000	string sample value \n"
					"StateID	long		1 \n"
					"EnteredByName	string	255	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	255	string sample value \n"
					"EnteredByID	long		1 \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TaskID	long		1 \n"
					"AssignFullName	memo	2000	string sample value \n"
					"AssignIDs	memo	2000	string sample value	\n";
				break;
			case 419:	//Patient To Do List by Category
				// (c.haag 2008-07-29 10:47) - PLID 30565 - Updated for new todo structure
				//(b.spivey August 21, 2014) - PLID 57119 - Added BirthDate
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TaskType	string	255	string sample value \n"
					"Task	string	50	string sample value \n"
					"Priority	string	6	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"AssignID	long	1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	2000	string sample value \n"
					"Patient	string	255	string sample value \n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Done	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"AssignedTo	memo	2000	string sample value \n"
					"StateID	long		1 \n"
					"EnteredByName	string	255	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"Email	string	255	string sample value \n"
					"EnteredByID	long		1 \n"
					"RemindDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TaskID	long		1 \n"
					"AssignFullName	memo	2000	string sample value \n"
					"AssignIDs	memo	2000	string sample value	\n";
				break;

				// (z.manning 2008-12-02 14:41) - PLID 32187 - Added InputUsername and address fields
			case 291:	//Patients by Tracking Step
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"StepTemplateID	long		1 \n"
					"LadderName	string	50	string sample value \n"
					"LadderID	long		1 \n"
					"ProcID	long		1 \n"
					"ProcName	string	100	string sample value \n"
					"ProcList	memo	1000	string sample value \n"
					"Name	string	153	string sample value \n"
					"PatID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"PtStepID	string	50	string sample value \n"
					"PtStepName	string	50	string sample value \n"
					"LocID	long		1 \n"
					"ProvID	long		1 \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProvName	string	153	string sample value \n"
					"ReferralName	string	50	string sample value \n"
					"StepOrder	long		1 \n"
					"ID	long		1 \n"
					"MasterID	long		1 \n"
					"MasterName	string	100	string sample value \n"
					"InputUsername	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value";
				break;
				
			case 287:	//Appointments by Input Date
				strReturn = 
					"; Field definition file for table: ADORecordset \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"First	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"ApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ArrivalTime	datetime	Jan 5, 1994 1:23:45 PM\n"
					"Notes	memo	3000	string sample value \n"
					"Name	string	50	string sample value \n"
					"Item	memo	1000	string sample value \n"
					"SetID	long		1 \n"
					"HomePhone	string	20	string sample value \n"
					"AptTypeID	long		1 \n"
					"ResourceID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"ApptID	long		1 \n"
					"PatientID	long		1 \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value \n"
					"PatID	long		1 \n"
					"PrivHome	boolean		TRUE \n"
					"PrivWork	boolean		TRUE \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CreatedLogin	string	100	string sample value \n"
					"PurposeString	memo	1000	string sample value \n"
					"PrimaryReferralSource	string	50	string sample value \n"
					"";
				break;
			case 396:	//PIC Report
				// (j.jones 2009-08-18 12:35) - PLID 35139 - added case history information
				// (j.gruber 2011-09-22 12:12) - PLID 45350 - added more consult and surgery info
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"LadderID	long		1 \n"
					"LadderDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProcInfoID	long		1 \n"
					"SurgeonName	string	153	string sample value \n"
					"NurseName	string	153	string sample value \n"
					"AnesthName	string	153	string sample value \n"
					"PatCoordName	string	153	string sample value \n"
					"PatientName	string	153	string sample value \n"
					"Anesthesia	string	255	string sample value \n"
					"ArrivalTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LadderName	memo	1000	string sample value \n"
					"PatID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"CnsltDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CnsltStart	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CnsltEnd	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CnsltType	string	50	string sample value \n"
					"CnsltPurpShort	string	255	string sample value \n"
					"CnsltPurpMemo	memo		memo sample data \n"
					"CnsltArrivalTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CnsltResourceShort	string	255	string sample value \n"
					"CnsltResourceMemo	memo		memo sample data \n"
					"SurgDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"SurgStart	datetime		Jan 5, 1994 1:23:45 PM \n"
					"SurgEnd	datetime		Jan 5, 1994 1:23:45 PM \n"
					"SurgType	string	50	string sample value \n"
					"SurgPurpShort	string	255	string sample value \n"
					"SurgPurpMemo	memo		memo sample data \n"					
					"SurgResourceShort	string	255	string sample value \n"
					"SurgResourceMemo	memo		memo sample data \n"
					"ReferralName	string	50	string sample value \n"
					"ReferralID	long		1 \n"
					"QuoteTotal	currency		1.00 \n"
					"BillTotal	currency		1.00 \n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TotalApplied	currency		1.00 \n"
					"BillBalance	currency		1.00 \n"
					"TotalPays	currency		1.00 \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"Note	memo		memo sample data \n"
					"FirstContactDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProvID	long		1 \n"
					"LadderStatus	long		1 \n"
					"LocID	long		1 \n"
					"Gen1Note	memo		memo sample data\n"
					"CaseHistoryName	memo		memo sample data\n"
					"CaseHistorySurgeryDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CaseHistoryCompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CaseHistoryTotalPrice	currency		1.00 \n"
					"CaseHistoryTotalCost	currency		1.00 \n"
					"HasHiddenPersonCosts	long		1";
				break;
			case 341:	//Case History
				// (j.jones 2008-07-01 12:58) - PLID 30581 - added HideTotalCost
				strReturn = "; Field definition file for table: ADORecordset \n"
					"CaseID	long		1 \n"
					"SurgName	string	512	string sample value \n"
					"PatID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"ProvID	long		1 \n"
					"ProvName	string	153	string sample value \n"
					"ProcedureName	memo	4000	string sample value \n"
					"SurgDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	4000	string sample value \n"
					"ItemName	memo	1000	string sample value \n"
					"ItemTypeName	string	255	string sample value \n"
					"Amount	currency		1.00 \n"
					"Cost	currency		1.00 \n"
					"Quantity	number		1.00 \n"
					"CompletedVal	long		1 \n"
					"LocID	long		1 \n"
					"LocationName	string	255	string sample value \n"
					"HideTotalCost	long		1 ";
				break;
			case 556:	//Preference Cards
				// (j.jones 2008-07-01 11:52) - PLID 30581 - added HideTotalCost
				// (j.jones 2009-08-24 10:44) - PLID 35124 - converted to the PreferenceCardsT structure
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PreferenceCardID	long		1 \n"
					"PreferenceCardName	string	255	string sample value \n"
					"PreferenceCardDescription	memo	1000	string sample value \n"
					"Amount	currency		1.00 \n"
					"Quantity	number		1.00 \n"
					"LineTotal	currency		1.00 \n"
					"Billable	boolean		TRUE \n"
					"Cost	currency		1.00 \n"
					"DetailDescription	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"ProvName	string	255	string sample value \n"
					"ItemType	string	255	string sample value \n"
					"HideTotalCost	long		1 ";
				break;

			// (j.jones 2009-09-17 09:24) - PLID 16703 - split into two reports
			case 539:	//Case History Cost / Profit Analysis By Provider
			case 678:	//Case History Cost / Profit Analysis By Procedure
				// (j.jones 2009-08-19 15:30) - PLID 35124 - removed PayToPractice
				// (j.jones 2009-09-14 11:15) - PLID 35383 - overhauled so we can link with bills
				// (j.jones 2009-09-17 09:29) - PLID 16703 - split details into a subreport,
				// added ProcedureIDs, ProcedureNameAbridged, HoursScheduled, and cost totals
				switch(nSubReport) {
					case 1: 
						//subreport
						strReturn = "; Field definition file for table: ADORecordset \n"
							"ID	long		1 \n"
							"PatID	long		1 \n"
							"ProvID	long		1 \n"
							"LocID	long		1 \n"
							"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"CompletedVal	long		1 \n"
							"BillID	long		1 \n"
							"BillDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"BillInputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"BillDescription	string	255	string sample value \n"
							"LineType	long		1 \n"
							"ItemTypeName	string	9	string sample value \n"
							"ItemDesc	string	255	string sample value \n"
							"Quantity	number		1.00 \n"
							"Amount	currency		1.00 \n"
							"Cost	currency		1.00 \n"
							"TotalAmountPreTax	currency		1.00 \n"
							"TotalAmount	currency		1.00 \n"
							"TotalCost	currency		1.00 ";
						break;
					default:
						strReturn = "; Field definition file for table: ADORecordset \n"
							"ID	long		1 \n"
							"Name	string	512	string sample value \n"
							"PatName	string	255	string sample value \n"
							"PatID	long		1 \n"
							"ProvID	long		1 \n"
							"ProvName	string	255	string sample value \n"
							"LocID	long		1 \n"
							"LocName	string	255	string sample value \n"
							"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"ProcedureName	memo 	4000	string sample value \n"
							"ProcedureNameAbridged	string	255	string sample value \n"
							"ProcedureIDs	string	255	string sample value \n"
							"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"CompletedVal	long		1 \n"						
							"TotalCaseCost	currency		1.00 \n"
							"TotalCaseAmountPreTax	currency		1.00 \n"
							"TotalCaseAmount	currency		1.00 \n"
							"HoursScheduled	number		1.00 \n"
							"CaseCostPerHour	currency		1.00 ";
					break;
				}
				break;

			case 387:	//Individual Case Histories
				// (j.jones 2008-07-01 14:27) - PLID 30581 - added HideTotalCost
				// (j.gruber 2008-07-09 11:56) - PLID 30645 - added anes type, diag codes, and persontype
				// (d.thompson 2014-03-27) - PLID 61270 - Added fields for ICD-10
				strReturn = "; Field definition file for table: ADORecordset \n"
					"CaseID	long		1 \n"
					"SurgName	string	512	string sample value \n"
					"PatID	long		1 \n"
					"PatName	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"ProvName	string	255	string sample value \n"
					"ProcedureName	memo	4000	string sample value \n"
					"SurgDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	4000	string sample value \n"
					"ItemName	string	255	string sample value \n"
					"ItemTypeName	string	255	string sample value \n"
					"Amount	currency		1.00 \n"
					"Cost	currency		1.00 \n"
					"Quantity	number		1.00 \n"
					"LogPreopIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogPreopOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogOpRoomIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogOpRoomOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogRecoveryIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogRecoveryOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogAnesthesiaIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogAnesthesiaOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogFacilityIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogFacilityOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"CompletedVal	long		1 \n"
					"PreOpDuration	long		1 \n"
					"OpRoomDuration	long		1 \n"
					"AnesthesiaDuration	long		1 \n"
					"RecoveryDuration	long		1 \n"
					"LogSurgeonIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogSurgeonOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Log23HourRoomIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Log23HourRoomOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"SurgeonDuration	long		1 \n"
					"Duration23HourRoom	long		1 \n"
					"LocID	long		1 \n"
					"LocationName	string	255	string sample value \n"
					"HideTotalCost	long		1 \n"
					"AnesType	memo	1000	string sample value \n"
					"ICD9PreDx1Code	string	50	string sample value \n"
					"ICD9PreDx1Desc	string	50	string sample value \n"
					"ICD9PreDx2Code	string	255	string sample value \n"
					"ICD9PreDx2Desc	string	50	string sample value \n"
					"ICD9PreDx3Code	string	255	string sample value \n"
					"ICD9PreDx3Desc	string	50	string sample value \n"
					"ICD9PreDx4Code	string	50	string sample value \n"
					"ICD9PreDx4Desc	string	255	string sample value \n"
					"ICD9PostDx1Code	string	50	string sample value \n"
					"ICD9PostDx1Desc	string	255	string sample value \n"
					"ICD9PostDx2Code	string	50	string sample value \n"
					"ICD9PostDx2Desc	string	255	string sample value \n"
					"ICD9PostDx3Code	string	50	string sample value \n"
					"ICD9PostDx3Desc	string	255	string sample value \n"
					"ICD9PostDx4Code	string	50	string sample value \n"
					"ICD9PostDx4Desc	string	255	string sample value \n"
					"ICD10PreDx1Code	string	50	string sample value \n"
					"ICD10PreDx1Desc	string	255	string sample value \n"
					"ICD10PreDx2Code	string	50	string sample value \n"
					"ICD10PreDx2Desc	string	255	string sample value \n"
					"ICD10PreDx3Code	string	50	string sample value \n"
					"ICD10PreDx3Desc	string	255	string sample value \n"
					"ICD10PreDx4Code	string	50	string sample value \n"
					"ICD10PreDx4Desc	string	255	string sample value \n"
					"ICD10PostDx1Code	string	50	string sample value \n"
					"ICD10PostDx1Desc	string	255	string sample value \n"
					"ICD10PostDx2Code	string	50	string sample value \n"
					"ICD10PostDx2Desc	string	255	string sample value \n"
					"ICD10PostDx3Code	string	50	string sample value \n"
					"ICD10PostDx3Desc	string	255	string sample value \n"
					"ICD10PostDx4Code	string	50	string sample value \n"
					"ICD10PostDx4Desc	string	255	string sample value \n"
					"PersonType	long		1 \n"
					"ApptDateTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					;
				break;
			case 492:	//Patient Flow
				strReturn = "; Field definition file for table: ADORecordset \n"
					"CaseDescription	string	512	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProcedureName	memo	4000	string sample value \n"
					"PatID	long		1 \n"
					"ProvID	long		1 \n"
					"LocID	long		1 \n"
					"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Completed	long		1 \n"
					"PatName	string	255	string sample value \n"
					"ProvName	string	255	string sample value \n"
					"LogPreOpIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogPreOpOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogAnesthesiaIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogAnesthesiaOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogSurgeonIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogSurgeonOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogOpRoomIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogOpRoomOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogRecoveryIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"LogRecoveryOut	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Log23HourRoomIn	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Log23HourRoomOut	datetime		Jan 5, 1994 1:23:45 PM";
				break;
			case 446:	//Patient Financial History
			case 231:	//Patient Financial History (PP)
				strReturn = "; Field definition file for table: ADORecordset \n"
					"PatName	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"TopID	long		1 \n"
					"MiddleID	long		1 \n"
					"ItemLevel	long		1 \n"
					"PatID	long		1 \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Description	memo	320	string sample value \n"
					"ChargeAmount	currency		1.00 \n"
					"PayAmount	currency		1.00 \n"
					"AdjAmount	currency		1.00 \n"
					"RefAmount	currency		1.00 \n"
					"Type	long		1 \n"
					"TopDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ProvId	long		1 \n"
					"ProvFirst	string	50	string sample value \n"
					"ProvMiddle	string	50	string sample value \n"
					"ProvLast	string	50	string sample value \n"
					"ProvTitle	string	50	string sample value \n"
					"PatID	long		1 \n"
					"PercentOff	long		1 \n"
					"DiscountAmt	currency		1.00 \n"
					"DiscountCategoryDescription	string	255	string sample value ";
				break;
			case 197:	//Printed Superbills
				strReturn = "; Field definition file for table: ADORecordset \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Notes	memo	3000	string sample value \n"
					"Purpose	memo	1000	string sample value \n"
					"PurposeSet	string	50	string sample value \n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Resource	memo	1000	string sample value \n"
					"ResourceID	long		1 \n"
					"SuperBillID	long		1 \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"PatName	string	153	string sample value \n"
					"LocID	long		1 \n"
					"Location	string	255	string sample value";
				break;
			case 502:	//Revenue by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				// (j.jones 2012-06-19 11:20) - PLID 48481 - changed Payments and Cost to currency
				// (d.thompson 2013-01-21) - PLID 54697 - Added email
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"Payments	currency		1.00 \n"
					"Cost	currency		1.00 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"Email	string	50	string sample value \n";
				break;
			//(e.lally 2009-09-17) PLID 35053 - Depreciated and recreated under a new ID
			/*
			case 504:	//Conversion Rate by Referral Source
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	75	string sample value \n"
					"Address2	string	75	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"HadConsult	long		1 \n"
					"HasSurgery	long		1 \n"
					"";
				break;
				*/
			case 505:	//Patients by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"HadConsult	long		1 \n"
					"HasSurgery	long		1 \n"
					"";
				break;
			case 506:	//Cancellations and No Shows by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"UnionType	long		1 \n"
					"";
				break;
			case 507:	//Inquiries to Consults by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"PersonID	long		1 \n"
					"ReferralID	long		1 \n"
					"Name	string	50	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"UnionType	long		1 \n"
					"";
				break;
			case 508:	//Prospects to Consults by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ReferralID	long		1 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"";
				break;
			case 509:	//Performed Vs. Closed by Referral Source
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ProcsClosed	long		1 \n"
					"ProcsPerformed	long		1 \n"
					"ReferralID	long		1 \n"
					"Name	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"First	string	50	string sample value \n"
					"Last	string	50	string sample value \n"
					"Middle	string	50	string sample value \n"
					"Address1	string	150	string sample value \n"
					"Address2	string	150	string sample value \n"
					"City	string	50	string sample value \n"
					"State	string	20	string sample value \n"
					"Zip	string	20	string sample value \n"
					"HomePhone	string	20	string sample value \n"
					"WorkPhone	string	20	string sample value \n"
					"CellPhone	string	20	string sample value \n"
					"UnionType	long		1 \n"
					"";
				break;

			case 353:	//Patient Statements 7.0
			case 354: // (v.maida 2016-02-04 11:29) - PLID 68176 - Individual Patient Statements 7.0
			case 436:	//Patient Statements 7.0 by Last Sent
				// (j.gruber 2009-11-06 13:42) - PLID 36217 - added provider NPI to statement
				// (j.gruber 2009-11-30 09:14) - PLID 36430 - addded CPTCode
				// (j.gruber 2009-12-24 13:17) - PLID 17122 - added CPTModifiers
				// (j.gruber 2010-06-14 16:08) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:17) - PLID 40557 - increased the size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				// (j.gruber 2014-03-03 16:33) - PLID 61144 - changed which codes/diag codes structure
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				// (r.farnworth 2015-03-09 17:03) - PLID 54249 - update RespAdd1, RespAdd2, DocAddress1, and DocAddress2 fields to 150 characters
				strReturn = "; Field definition file for table: ADORecordset \n"
					"ID	long		1 \r\n"
					"PatientID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Type	long		1 \r\n"
					"Total	currency		1.00 \r\n"
					"Description	memo	308	string sample value \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Insurance	currency		1.00 \r\n"
					"Last	string	50	string sample value \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PatForward	string	152	string sample value \r\n"
					"PatComma	string	153	string sample value \r\n"
					"DocName	string	101	string sample value \r\n"
					"DocAddress1	string	150	string sample value \r\n"
					"DocAddress2	string	150	string sample value \r\n"
					"DocCity	string	50	string sample value \r\n"
					"DocState	string	20	string sample value \r\n"
					"DocZip	string	20	string sample value \r\n"
					"ProvTaxID	string	30	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddress1	string	75	string sample value \r\n"
					"PracAddress2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"ProvID2	long		1 \r\n"
					"BillId	long		1 \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"BillDescription	string	255	string sample value \r\n"
					"Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"WhichCodes9	string	255	string sample value \r\n"
					"WhichCodes10	string	255	string sample value \r\n"
					"WhichCodesBoth	string	255	string sample value \r\n"
					"Location	long		1 \r\n"
					"StatementType	long		1 \r\n"
					"GroupFixID	long		1 \r\n"
					"Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					/*"PatTotResp	currency		1.00 \r\n"
					"InsTotResp	currency		1.00 \r\n"*/
					"Age	long		1 \r\n"
					"TransProv	string	102	string sample value \r\n"
					"Prepayment	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"Thirty	currency		1.00 \r\n"
					"Sixty	currency		1.00 \r\n"
					"Ninety	currency		1.00 \r\n"
					"NinetyPlus	currency		1.00 \r\n"
					"ProvEIN	string	100	string sample value \r\n"
					"ProvLicense	string	50	string sample value \r\n"
					"ProvUPIN	string	50	string sample value \r\n"
					"ProvDEA	string	30	string sample value \r\n"
					"ProvBCBS	string	50	string sample value \r\n"
					"ProvMedicare	string	50	string sample value \r\n"
					"ProvMedicaid	string	50	string sample value \r\n"
					"ProvWorkersComp	string	50	string sample value \r\n"
					"ProvOtherID	string	50	string sample value \r\n"
					"ProvOtherIDDesc	string	50	string sample value \r\n"
					"DocName2	string	203	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"SuppressStatement	boolean		TRUE \r\n"
					"PatID2	long		1 \r\n"
					"StatementNote	memo	2000	string sample value \r\n"
					"PriInsCo	string	255	string sample value \r\n"
					"PriGuarForward	string	152	string sample value \r\n"
					"PriGuarComma	string	153	string sample value \r\n"
					"PriInsFirst	string	50	string sample value \r\n"
					"PriInsMiddle	string	50	string sample value \r\n"
					"PriInsLast	string	50	string sample value \r\n"
					"PersonID	long		1 \r\n"
					"SecInsCo	string	255	string sample value \r\n"
					"SecGuarForward	string	152	string sample value \r\n"
					"SecGuarComma	string	153	string sample value \r\n"
					"SecInsfirst	string	50	string sample value \r\n"
					"SecInsMiddle	string	50	string sample value \r\n"
					"SecInsLast	string	50	string sample value \r\n"
					"PersID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"RespID	long		1 \r\n"
					"RespFirst	string	50	string sample value \r\n"
					"RespMiddle	string	50	string sample value \r\n"
					"RespLast	string	50	string sample value \r\n"
					"RespAdd1	string	150	string sample value \r\n"
					"RespAdd2	string	150	string sample value \r\n"
					"RespCity	string	50	string sample value \r\n"
					"RespState	string	20	string sample value \r\n"
					"RespZip	string	20	string sample value \r\n"
					"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatPhone	string	20	string sample value \r\n"
					"FullChargeNoTax	currency		1.00 \r\n"
					"ChargeTax1	number		1.00 \r\n"
					"ChargeTax2	number		1.00 \r\n"
					"TaxRate1	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"RespPartyCount	long		1 \r\n"
					"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastPatientPaymentAmount	currency		1.00 \r\n"
					"LastInsurancePaymentAmount	currency		1.00 \r\n"
					"CCType	string	50	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CheckNo	string	50	string sample value \r\n"
					"BankNo	string	50	string sample value \r\n"
					"CheckAcctNo	string	50	string sample value \r\n"
					"CCHoldersName	string	50	string sample value \r\n"
					"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CCAuthNo	string	50	string sample value \r\n"
					"BankRoutingNum	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"PercentOff	number		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"DiscountCategoryDesc	string	255	string sample value \r\n"
					"ProviderNPI	string	50	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n"
					"CPTModifier1	string	10	string sample value \r\n"
					"CPTModifier2	string	10	string sample value \r\n"
					"CPTModifier3	string	10	string sample value \r\n"
					"CPTModifier4	string	10	string sample value \r\n"
					"BillStatementNote	memo	308	string sample value \r\n"
					"LineItemStatementNote	memo	308	string sample value \r\n"
					"SuppressBillStatementNote	long		1 \r\n"
					"SuppressLineItemStatementNote	long		1 \r\n";
				break;

			case 485:	//Patient Statements 7.0 by Provider
			case 486:  // (v.maida 2016-02-04 13:50) - PLID 68176 - Individual Patient Statements 7.0 by Provider
				// (j.gruber 2009-11-06 13:43) - PLID 36217 - added provider NPI
				// (j.gruber 2009-11-30 09:14) - PLID 36430 - added cptcode
				// (j.gruber 2009-12-24 13:18) - PLID 17122 - added cptmodifiers
				// (j.gruber 2010-06-14 16:08) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:18) - PLID 40557 - increased size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 11:12) - PLID 49522 - increased the length of address1 and address2
				// (j.gruber 2014-03-04 13:15) - PLID 61156 - updated for ICD10, diag and whichcodes refactor
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				// (r.farnworth 2015-03-09 17:03) - PLID 54249 - updated RespAdd1 and RespAdd2 to 150 characters
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"PatientID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Type	long		1 \r\n"
					"Total	currency		1.00 \r\n"
					"Description	memo	308	string sample value \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Insurance	currency		1.00 \r\n"
					"Last	string	50	string sample value \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PatForward	string	152	string sample value \r\n"
					"PatComma	string	153	string sample value \r\n"
					"DocName	string	101	string sample value \r\n"
					"DocAddress1	string	150	string sample value \r\n"
					"DocAddress2	string	150	string sample value \r\n"
					"DocCity	string	50	string sample value \r\n"
					"DocState	string	20	string sample value \r\n"
					"DocZip	string	20	string sample value \r\n"
					"ProvTaxID	string	30	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddress1	string	75	string sample value \r\n"
					"PracAddress2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"ProvID2	long		1 \r\n"
					"BillId	long		1 \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"BillDescription	string	255	string sample value \r\n"
					"Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"WhichCodes9	string	255	string sample value \r\n"
					"WhichCodes10	string	255	string sample value \r\n"
					"WhichCodesBoth	string	255	string sample value \r\n"
					"Location	long		1 \r\n"
					"StatementType	long		1 \r\n"
					"GroupFixID	long		1 \r\n"
					"Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					/*"PatTotResp	currency		1.00 \r\n"
					"InsTotResp	currency		1.00 \r\n"*/
					"Age	long		1 \r\n"
					"TransProv	string	102	string sample value \r\n"
					"Prepayment	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"Thirty	currency		1.00 \r\n"
					"Sixty	currency		1.00 \r\n"
					"Ninety	currency		1.00 \r\n"
					"NinetyPlus	currency		1.00 \r\n"
					"ProvEIN	string	100	string sample value \r\n"
					"ProvLicense	string	50	string sample value \r\n"
					"ProvUPIN	string	50	string sample value \r\n"
					"ProvDEA	string	30	string sample value \r\n"
					"ProvBCBS	string	50	string sample value \r\n"
					"ProvMedicare	string	50	string sample value \r\n"
					"ProvMedicaid	string	50	string sample value \r\n"
					"ProvWorkersComp	string	50	string sample value \r\n"
					"ProvOtherID	string	50	string sample value \r\n"
					"ProvOtherIDDesc	string	50	string sample value \r\n"
					"DocName2	string	203	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"SuppressStatement	boolean		TRUE \r\n"
					"PatID2	long		1 \r\n"
					"StatementNote	memo	2000	string sample value \r\n"
					"PriInsCo	string	255	string sample value \r\n"
					"PriGuarForward	string	152	string sample value \r\n"
					"PriGuarComma	string	153	string sample value \r\n"
					"PriInsFirst	string	50	string sample value \r\n"
					"PriInsMiddle	string	50	string sample value \r\n"
					"PriInsLast	string	50	string sample value \r\n"
					"PersonID	long		1 \r\n"
					"SecInsCo	string	255	string sample value \r\n"
					"SecGuarForward	string	152	string sample value \r\n"
					"SecGuarComma	string	153	string sample value \r\n"
					"SecInsfirst	string	50	string sample value \r\n"
					"SecInsMiddle	string	50	string sample value \r\n"
					"SecInsLast	string	50	string sample value \r\n"
					"PersID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"RespID	long		1 \r\n"
					"RespFirst	string	50	string sample value \r\n"
					"RespMiddle	string	50	string sample value \r\n"
					"RespLast	string	50	string sample value \r\n"
					"RespAdd1	string	150	string sample value \r\n"
					"RespAdd2	string	150	string sample value \r\n"
					"RespCity	string	50	string sample value \r\n"
					"RespState	string	20	string sample value \r\n"
					"RespZip	string	20	string sample value \r\n"
					"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatPhone	string	20	string sample value \r\n"
					"FullChargeNoTax	currency		1.00 \r\n"
					"ChargeTax1	number		1.00 \r\n"
					"ChargeTax2	number		1.00 \r\n"
					"TaxRate1	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"TransProvAdd1	string	75	string sample value \r\n"
					"TransProvAdd2	string	75	string sample value \r\n"
					"TransProvCity	string	50	string sample value \r\n"
					"TransProvState	string	20	string sample value \r\n"
					"TransProvZip	string	20	string sample value \r\n"
					"TransProvFirst	string	50	string sample value \r\n"
					"TransProvMiddle	string	50	string sample value \r\n"
					"TransProvLast	string	50	string sample value \r\n"
					"TransProvID	long		1 \r\n"
					"RespPartyCount	long		1 \r\n"
					"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastPatientPaymentAmount	currency		1.00 \r\n"
					"LastInsurancePaymentAmount	currency		1.00 \r\n"
					"CCType	string	50	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CheckNo	string	50	string sample value \r\n"
					"BankNo	string	50	string sample value \r\n"
					"CheckAcctNo	string	50	string sample value \r\n"
					"CCHoldersName	string	50	string sample value \r\n"
					"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CCAuthNo	string	50	string sample value \r\n"
					"BankRoutingNum	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"PercentOff	number		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"DiscountCategoryDesc	string	255	string sample value \r\n"
					"ProviderNPI	string	50	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n"
					"CPTModifier1	string	10	string sample value \r\n"
					"CPTModifier2	string	10	string sample value \r\n"
					"CPTModifier3	string	10	string sample value \r\n"
					"CPTModifier4	string	10	string sample value \r\n"
					"BillStatementNote	memo	308	string sample value \r\n"
					"LineItemStatementNote	memo	308	string sample value \r\n"
					"SuppressBillStatementNote	long		1 \r\n"
					"SuppressLineItemStatementNote	long		1 \r\n";
				break;

			// (j.jones 2012-12-18 16:17) - PLID 54247 - properly made these cases be the same, as they use the same report file
			case 355:	//Patient Statements 7.0 by Location
			case 356:   // (v.maida 2016-02-04 13:50) - PLID 68176 - Individual Patient Statements 7.0 by Location
			case 437:	//Patient Statements 7.0 by Location by Last Sent
				// (j.gruber 2009-11-30 09:15) - PLID 36430 - added CPTcode
				// (j.gruber 2009-12-24 13:18) - PLID 17122 added CPT Modifiers
				// (j.gruber 2010-06-14 16:09) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:19) - PLID 40557 - increased the size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 12:03) - PLID 49522 increased size of address1 and 2
				// (j.gruber 2014-03-04 11:37) - PLID 61155 - updated for ICD10, diag and whichcodes updates
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"PatientID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Type	long		1 \r\n"
					"Total	currency		1.00 \r\n"
					"Description	memo	308	string sample value \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Insurance	currency		1.00 \r\n"
					"Last	string	50	string sample value \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PatForward	string	152	string sample value \r\n"
					"PatComma	string	153	string sample value \r\n"
					"DocName	string	101	string sample value \r\n"
					"DocAddress1	string	150	string sample value \r\n"
					"DocAddress2	string	150	string sample value \r\n"
					"DocCity	string	50	string sample value \r\n"
					"DocState	string	20	string sample value \r\n"
					"DocZip	string	20	string sample value \r\n"
					"ProvTaxID	string	30	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddress1	string	75	string sample value \r\n"
					"PracAddress2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"ProvID2	long		1 \r\n"
					"BillId	long		1 \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"BillDescription	string	255	string sample value \r\n"
					"Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"WhichCodes9	string	255	string sample value \r\n"
					"WhichCodes10	string	255	string sample value \r\n"
					"WhichCodesBoth	string	255	string sample value \r\n"
					"Location	long		1 \r\n"
					"StatementType	long		1 \r\n"
					"GroupFixID	long		1 \r\n"
					"Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					/*"PatTotResp	currency		1.00 \r\n"
					"InsTotResp	currency		1.00 \r\n"*/
					"Age	long		1 \r\n"
					"TransProv	string	102	string sample value \r\n"
					"Prepayment	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"Thirty	currency		1.00 \r\n"
					"Sixty	currency		1.00 \r\n"
					"Ninety	currency		1.00 \r\n"
					"NinetyPlus	currency		1.00 \r\n"
					"ProvEIN	string	100	string sample value \r\n"
					"ProvLicense	string	50	string sample value \r\n"
					"ProvUPIN	string	50	string sample value \r\n"
					"ProvDEA	string	30	string sample value \r\n"
					"ProvBCBS	string	50	string sample value \r\n"
					"ProvMedicare	string	50	string sample value \r\n"
					"ProvMedicaid	string	50	string sample value \r\n"
					"ProvWorkersComp	string	50	string sample value \r\n"
					"ProvOtherID	string	50	string sample value \r\n"
					"ProvOtherIDDesc	string	50	string sample value \r\n"
					"DocName2	string	203	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"SuppressStatement	boolean		TRUE \r\n"
					"PatID2	long		1 \r\n"
					"StatementNote	memo	2000	string sample value \r\n"
					"PriInsCo	string	255	string sample value \r\n"
					"PriGuarForward	string	152	string sample value \r\n"
					"PriGuarComma	string	153	string sample value \r\n"
					"PriInsFirst	string	50	string sample value \r\n"
					"PriInsMiddle	string	50	string sample value \r\n"
					"PriInsLast	string	50	string sample value \r\n"
					"PersonID	long		1 \r\n"
					"SecInsCo	string	255	string sample value \r\n"
					"SecGuarForward	string	152	string sample value \r\n"
					"SecGuarComma	string	153	string sample value \r\n"
					"SecInsfirst	string	50	string sample value \r\n"
					"SecInsMiddle	string	50	string sample value \r\n"
					"SecInsLast	string	50	string sample value \r\n"
					"PersID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"RespID	long		1 \r\n"
					"RespFirst	string	50	string sample value \r\n"
					"RespMiddle	string	50	string sample value \r\n"
					"RespLast	string	50	string sample value \r\n"
					"RespAdd1	string	150	string sample value \r\n"
					"RespAdd2	string	150	string sample value \r\n"
					"RespCity	string	50	string sample value \r\n"
					"RespState	string	20	string sample value \r\n"
					"RespZip	string	20	string sample value \r\n"
					"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatPhone	string	20	string sample value \r\n"
					"FullChargeNoTax	currency		1.00 \r\n"
					"ChargeTax1	number		1.00 \r\n"
					"ChargeTax2	number		1.00 \r\n"
					"TaxRate1	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"RespPartyCount	long		1 \r\n"
					"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastPatientPaymentAmount	currency		1.00 \r\n"
					"LastInsurancePaymentAmount	currency		1.00 \r\n"
					"CCType	string	50	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CheckNo	string	50	string sample value \r\n"
					"BankNo	string	50	string sample value \r\n"
					"CheckAcctNo	string	50	string sample value \r\n"
					"CCHoldersName	string	50	string sample value \r\n"
					"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CCAuthNo	string	50	string sample value \r\n"
					"BankRoutingNum	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"PercentOff	number		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"DiscountCategoryDesc	string	255	string sample value \r\n"
					"ProviderNPI	string	50	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n"
					"CPTModifier1	string	10	string sample value \r\n"
					"CPTModifier2	string	10	string sample value \r\n"
					"CPTModifier3	string	10	string sample value \r\n"
					"CPTModifier4	string	10	string sample value \r\n"
					"BillStatementNote	memo	308	string sample value \r\n"
					"LineItemStatementNote	memo	308	string sample value \r\n"
					"SuppressBillStatementNote	long		1 \r\n"
					"SuppressLineItemStatementNote	long		1 \r\n";
				break;

			case 169:	//Patient Statements
			case 234:   // (v.maida 2016-02-04 12:23) - PLID 68176 - Individual Patient Statements
			case 434:	//Patient Statements by Last Sent
				// (j.gruber 2009-11-30 09:15) - PLID 36430 - added CPTCode
				// (j.gruber 2009-12-24 13:19) - PLID 17122 - added cpt modifiers
				// (j.gruber 2010-06-14 16:09) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:19) - PLID 40557 - increase the size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 12:03) - PLID 49522 increased size of address1 and 2
				// (j.gruber 2014-03-03 15:12) - PLID 61144 - ICD10 changes and whichCodes
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"PatientID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Type	long		1 \r\n"
					"Total	currency		1.00 \r\n"
					"Description	memo	308	string sample value \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Insurance	currency		1.00 \r\n"
					"Last	string	50	string sample value \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PatForward	string	152	string sample value \r\n"
					"PatComma	string	153	string sample value \r\n"
					"DocName	string	101	string sample value \r\n"
					"DocAddress1	string	150	string sample value \r\n"
					"DocAddress2	string	150	string sample value \r\n"
					"DocCity	string	50	string sample value \r\n"
					"DocState	string	20	string sample value \r\n"
					"DocZip	string	20	string sample value \r\n"
					"ProvTaxID	string	30	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddress1	string	75	string sample value \r\n"
					"PracAddress2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"ProvID2	long		1 \r\n"
					"BillId	long		1 \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"BillDescription	string	255	string sample value \r\n"
					"Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"WhichCodes9	string	255	string sample value \r\n"
					"WhichCodes10	string	255	string sample value \r\n"
					"WhichCodesBoth	string	255	string sample value \r\n"
					"Location	long		1 \r\n"
					"StatementType	long		1 \r\n"
					"GroupFixID	long		1 \r\n"
					"Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					/*"PatTotResp	currency		1.00 \r\n"
					"InsTotResp	currency		1.00 \r\n"*/
					"Age	long		1 \r\n"
					"TransProv	string	102	string sample value \r\n"
					"Prepayment	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"Thirty	currency		1.00 \r\n"
					"Sixty	currency		1.00 \r\n"
					"Ninety	currency		1.00 \r\n"
					"NinetyPlus	currency		1.00 \r\n"
					"ProvEIN	string	100	string sample value \r\n"
					"ProvLicense	string	50	string sample value \r\n"
					"ProvUPIN	string	50	string sample value \r\n"
					"ProvDEA	string	30	string sample value \r\n"
					"ProvBCBS	string	50	string sample value \r\n"
					"ProvMedicare	string	50	string sample value \r\n"
					"ProvMedicaid	string	50	string sample value \r\n"
					"ProvWorkersComp	string	50	string sample value \r\n"
					"ProvOtherID	string	50	string sample value \r\n"
					"ProvOtherIDDesc	string	50	string sample value \r\n"
					"DocName2	string	203	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"SuppressStatement	boolean		TRUE \r\n"
					"PatID2	long		1 \r\n"
					"StatementNote	memo	2000	string sample value \r\n"
					"PriInsCo	string	255	string sample value \r\n"
					"PriGuarForward	string	152	string sample value \r\n"
					"PriGuarComma	string	153	string sample value \r\n"
					"PriInsFirst	string	50	string sample value \r\n"
					"PriInsMiddle	string	50	string sample value \r\n"
					"PriInsLast	string	50	string sample value \r\n"
					"PersonID	long		1 \r\n"
					"SecInsCo	string	255	string sample value \r\n"
					"SecGuarForward	string	152	string sample value \r\n"
					"SecGuarComma	string	153	string sample value \r\n"
					"SecInsfirst	string	50	string sample value \r\n"
					"SecInsMiddle	string	50	string sample value \r\n"
					"SecInsLast	string	50	string sample value \r\n"
					"PersID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"RespID	long		1 \r\n"
					"RespFirst	string	50	string sample value \r\n"
					"RespMiddle	string	50	string sample value \r\n"
					"RespLast	string	50	string sample value \r\n"
					"RespAdd1	string	150	string sample value \r\n"
					"RespAdd2	string	150	string sample value \r\n"
					"RespCity	string	50	string sample value \r\n"
					"RespState	string	20	string sample value \r\n"
					"RespZip	string	20	string sample value \r\n"
					"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatPhone	string	20	string sample value \r\n"
					"FullChargeNoTax	currency		1.00 \r\n"
					"ChargeTax1	number		1.00 \r\n"
					"ChargeTax2	number		1.00 \r\n"
					"TaxRate1	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"RespPartyCount	long		1 \r\n"
					"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastPatientPaymentAmount	currency		1.00 \r\n"
					"LastInsurancePaymentAmount	currency		1.00 \r\n"
					"CCType	string	50	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CheckNo	string	50	string sample value \r\n"
					"BankNo	string	50	string sample value \r\n"
					"CheckAcctNo	string	50	string sample value \r\n"
					"CCHoldersName	string	50	string sample value \r\n"
					"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CCAuthNo	string	50	string sample value \r\n"
					"BankRoutingNum	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"PercentOff	number		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"DiscountCategoryDesc	string	255	string sample value \r\n"
					"ProviderNPI	string	50	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n"
					"CPTModifier1	string	10	string sample value \r\n"
					"CPTModifier2	string	10	string sample value \r\n"
					"CPTModifier3	string	10	string sample value \r\n"
					"CPTModifier4	string	10	string sample value \r\n"
					"BillStatementNote	memo	308	string sample value \r\n"
					"LineItemStatementNote	memo	308	string sample value \r\n"
					"SuppressBillStatementNote	long		1 \r\n"
					"SuppressLineItemStatementNote	long		1 \r\n";			
					
				break;


			case 337:  //Patient Statements by Location
			case 338:  // (v.maida 2016-02-04 13:50) - PLID 68176 - Individual Patient Statements by Location
			// (j.gruber 2007-02-20 15:05) - PLID 24747 - this should've been here all along
			case 435:  //Patient Statements by Location By Last Sent
				// (j.gruber 2009-11-30 09:15) - PLID 36430 - added CPTCode
				// (j.gruber 2009-12-24 13:19) - PLID 17122 - added CPT Modifiers
				// (j.gruber 2010-06-14 16:09) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:20) - PLID 40557 - increase the size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 12:03) - PLID 49522 increased size of address1 and 2
				// (j.gruber 2014-03-04 11:36) - PLID 61155 - update for ICD10 and diag and whichcodes refactor
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				strReturn = " ; Field definition file for table: ADORecordset \r\n"
				" ID	long		1 \r\n"
				" PatientID	long		1 \r\n"
				" PatID	long		1 \r\n"
				" Type	long		1 \r\n"
				" Total	currency		1.00 \r\n "
				" Description	memo	308	string sample value \r\n"
				" TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" Insurance	currency		1.00 \r\n "
				" Last	string	50	string sample value \r\n "
				" First	string	50	string sample value \r\n "
				" Middle	string	50	string sample value \r\n "
				" Address1	string	150	string sample value \r\n "
				" Address2	string	150	string sample value \r\n "
				" City	string	50	string sample value \r\n "
				" State	string	20	string sample value \r\n "
				" Zip	string	20	string sample value \r\n "
				" PatForward	string	152	string sample value \r\n "
				" PatComma	string	153	string sample value \r\n "
				" DocName	string	152	string sample value \r\n "
				" DocAddress1	string	150	string sample value \r\n "
				" DocAddress2	string	150	string sample value \r\n "
				" DocCity	string	50	string sample value \r\n "
				" DocState	string	20	string sample value \r\n "
				" DocZip	string	20	string sample value \r\n "
				" ProvTaxID	string	30	string sample value \r\n "
				" PracName	string	255	string sample value \r\n "
				" PracAddress1	string	75	string sample value \r\n "
				" PracAddress2	string	75	string sample value \r\n "
				" PracCity	string	50	string sample value \r\n "
				" PracState	string	50	string sample value \r\n "
				" PracZip	string	50	string sample value \r\n "
				" PracPhone	string	20	string sample value \r\n "
				" PracFax	string	50	string sample value \r\n "
				" ProvID2	long		1 \r\n "
				" BillId	long		1 \r\n "
				" BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" BillDescription	string	255	string sample value \r\n "
				" Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" ICD9Code1	string	50	string sample value \r\n"
				" ICD9Code2	string	50	string sample value \r\n"
				" ICD9Code3	string	50	string sample value \r\n"
				" ICD9Code4	string	50	string sample value \r\n"
				" ICD10Code1	string	50	string sample value \r\n"
				" ICD10Code2	string	50	string sample value \r\n"
				" ICD10Code3	string	50	string sample value \r\n"
				" ICD10Code4	string	50	string sample value \r\n"
				" WhichCodes9	string	255	string sample value \r\n"
				" WhichCodes10	string	255	string sample value \r\n"
				" WhichCodesBoth	string	255	string sample value \r\n"
				" Location	long		1 \r\n "
				" StatementType	long		1 \r\n "
				" GroupFixID	long		1 \r\n "
				" Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				/*" PatTotResp	currency		1.00 \r\n "
				" InsTotResp	currency		1.00 \r\n "*/
				" Age	long		1 \r\n "
				" TransProv	string	101	string sample value \r\n "
				" Prepayment	long		1 \r\n "
				" Quantity	number		1.00 \r\n "
				" Thirty	currency		1.00 \r\n "
				" Sixty	currency		1.00 \r\n "
				" Ninety	currency		1.00 \r\n "
				" NinetyPlus	currency		1.00 \r\n "
				" ProvEIN	string	100	string sample value \r\n "
				" ProvLicense	string	50	string sample value \r\n "
				" ProvUPIN	string	50	string sample value \r\n "
				" ProvDEA	string	30	string sample value \r\n "
				" ProvBCBS	string	50	string sample value \r\n "
				" ProvMedicare	string	50	string sample value \r\n "
				" ProvMedicaid	string	50	string sample value \r\n "
				" ProvWorkersComp	string	50	string sample value \r\n "
				" ProvOtherID	string	50	string sample value \r\n "
				" ProvOtherIDDesc	string	50	string sample value \r\n "
				" DocName2	string	203	string sample value \r\n "
				" ProvID	long		1 \r\n "
				" SuppressStatement	boolean		TRUE \r\n "
				" PatID2	long		1 \r\n "
				" StatementNote	memo	2000	string sample value \r\n "
				" PriInsCo	string	255	string sample value \r\n "
				" PriGuarForward	string	152	string sample value \r\n "
				" PriGuarComma	string	153	string sample value \r\n "
				" PriInsFirst	string	50	string sample value \r\n "
				" PriInsMiddle	string	50	string sample value \r\n "
				" PriInsLast	string	50	string sample value \r\n "
				" PersonID	long		1 \r\n "
				" SecInsCo	string	255	string sample value \r\n "
				" SecGuarForward	string	152	string sample value \r\n "
				" SecGuarComma	string	153	string sample value \r\n "
				" SecInsfirst	string	50	string sample value \r\n "
				" SecInsMiddle	string	50	string sample value \r\n "
				" SecInsLast	string	50	string sample value \r\n "
				" PersID	long		1 \r\n "
				" LocID	long		1 \r\n "
				" RespID	long		1 \r\n "
				" RespFirst	string	50	string sample value \r\n "
				" RespMiddle	string	50	string sample value \r\n "
				" RespLast	string	50	string sample value \r\n "
				" RespAdd1	string	150	string sample value \r\n "
				" RespAdd2	string	150	string sample value \r\n "
				" RespCity	string	50	string sample value \r\n "
				" RespState	string	20	string sample value \r\n "
				" RespZip	string	20	string sample value \r\n "
				" LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n "
				" PatPhone	string	20	string sample value \r\n "
				" FullChargeNoTax	currency		1.00 \r\n "
				" ChargeTax1	number		1.00 \r\n "
				" ChargeTax2	number		1.00 \r\n "
				" TaxRate1	number		1.00 \r\n "
				" TaxRate2	number		1.00 \r\n "
				" RespPartyCount	long		1 \r\n"
				"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"LastPatientPaymentAmount	currency		1.00 \r\n"
				"LastInsurancePaymentAmount	currency		1.00 \r\n"
				"CCType	string	50	string sample value \r\n"
				"CCNumber	string	50	string sample value \r\n"
				"CheckNo	string	50	string sample value \r\n"
				"BankNo	string	50	string sample value \r\n"
				"CheckAcctNo	string	50	string sample value \r\n"
				"CCHoldersName	string	50	string sample value \r\n"
				"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"CCAuthNo	string	50	string sample value \r\n"
				"BankRoutingNum	string	50	string sample value \r\n"
				"PatCoordFirst	string	50	string sample value \r\n"
				"PatCoordMiddle	string	50	string sample value \r\n"
				"PatCoordLast	string	50	string sample value \r\n"
				"PercentOff	number		1.00 \r\n"
				"DiscountAmt	currency		1.00 \r\n"
				"DiscountCategoryDesc	string	255	string sample value \r\n"
				"ProviderNPI	string	50	string sample value \r\n"
				"CPTCode	string	50	string sample value \r\n"
				"CPTModifier1	string	10	string sample value \r\n"
				"CPTModifier2	string	10	string sample value \r\n"
				"CPTModifier3	string	10	string sample value \r\n"
				"CPTModifier4	string	10	string sample value \r\n"
				"BillStatementNote	memo	308	string sample value \r\n"
				"LineItemStatementNote	memo	308	string sample value \r\n"
				"SuppressBillStatementNote	long		1 \r\n"
				"SuppressLineItemStatementNote	long		1 \r\n";
				break;
				
			case 483:	//Patient Statements by Provider
			case 484:  // (v.maida 2016-02-04 13:50) - PLID 68176 - Individual Patient Statements by Provider
				// (j.gruber 2009-11-30 09:16) - PLID 36430 - added CPTCode
				// (j.gruber 2009-12-24 13:19) - PLID 17122 - added CPT Modifiers
				// (j.gruber 2010-06-14 16:10) - PLID 36484 - billing notes
				// (d.lange 2010-09-16 15:20) - PLID 40557 - increase the size of CCAuthNo from 30 to 50
				// (d.singleton 2012-06-05 12:03) - PLID 49522 increased size of address1 and 2
				// (j.gruber 2014-03-04 13:14) - PLID 61156  -ICD10 updates and diag and whichcodes refactor
				// (j.gruber 2014-04-23 09:06) - PLID 61873 - updated diag fields to 255 characters
				strReturn = "; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"PatientID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"Type	long		1 \r\n"
					"Total	currency		1.00 \r\n"
					"Description	memo	308	string sample value \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Insurance	currency		1.00 \r\n"
					"Last	string	50	string sample value \r\n"
					"First	string	50	string sample value \r\n"
					"Middle	string	50	string sample value \r\n"
					"Address1	string	150	string sample value \r\n"
					"Address2	string	150	string sample value \r\n"
					"City	string	50	string sample value \r\n"
					"State	string	20	string sample value \r\n"
					"Zip	string	20	string sample value \r\n"
					"PatForward	string	152	string sample value \r\n"
					"PatComma	string	153	string sample value \r\n"
					"DocName	string	101	string sample value \r\n"
					"DocAddress1	string	150	string sample value \r\n"
					"DocAddress2	string	150	string sample value \r\n"
					"DocCity	string	50	string sample value \r\n"
					"DocState	string	20	string sample value \r\n"
					"DocZip	string	20	string sample value \r\n"
					"ProvTaxID	string	30	string sample value \r\n"
					"PracName	string	255	string sample value \r\n"
					"PracAddress1	string	75	string sample value \r\n"
					"PracAddress2	string	75	string sample value \r\n"
					"PracCity	string	50	string sample value \r\n"
					"PracState	string	50	string sample value \r\n"
					"PracZip	string	50	string sample value \r\n"
					"PracPhone	string	20	string sample value \r\n"
					"PracFax	string	50	string sample value \r\n"
					"ProvID2	long		1 \r\n"
					"BillId	long		1 \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"BillDescription	string	255	string sample value \r\n"
					"Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ICD9Code1	string	50	string sample value \r\n"
					"ICD9Code2	string	50	string sample value \r\n"
					"ICD9Code3	string	50	string sample value \r\n"
					"ICD9Code4	string	50	string sample value \r\n"
					"ICD10Code1	string	50	string sample value \r\n"
					"ICD10Code2	string	50	string sample value \r\n"
					"ICD10Code3	string	50	string sample value \r\n"
					"ICD10Code4	string	50	string sample value \r\n"
					"WhichCodes9	string	255	string sample value \r\n"
					"WhichCodes10	string	255	string sample value \r\n"
					"WhichCodesBoth	string	255	string sample value \r\n"
					"Location	long		1 \r\n"
					"StatementType	long		1 \r\n"
					"GroupFixID	long		1 \r\n"
					"Appdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ARDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					/*"PatTotResp	currency		1.00 \r\n"
					"InsTotResp	currency		1.00 \r\n"*/
					"Age	long		1 \r\n"
					"TransProv	string	102	string sample value \r\n"
					"Prepayment	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"Thirty	currency		1.00 \r\n"
					"Sixty	currency		1.00 \r\n"
					"Ninety	currency		1.00 \r\n"
					"NinetyPlus	currency		1.00 \r\n"
					"ProvEIN	string	100	string sample value \r\n"
					"ProvLicense	string	50	string sample value \r\n"
					"ProvUPIN	string	50	string sample value \r\n"
					"ProvDEA	string	30	string sample value \r\n"
					"ProvBCBS	string	50	string sample value \r\n"
					"ProvMedicare	string	50	string sample value \r\n"
					"ProvMedicaid	string	50	string sample value \r\n"
					"ProvWorkersComp	string	50	string sample value \r\n"
					"ProvOtherID	string	50	string sample value \r\n"
					"ProvOtherIDDesc	string	50	string sample value \r\n"
					"DocName2	string	203	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"SuppressStatement	boolean		TRUE \r\n"
					"PatID2	long		1 \r\n"
					"StatementNote	memo	2000	string sample value \r\n"
					"PriInsCo	string	255	string sample value \r\n"
					"PriGuarForward	string	152	string sample value \r\n"
					"PriGuarComma	string	153	string sample value \r\n"
					"PriInsFirst	string	50	string sample value \r\n"
					"PriInsMiddle	string	50	string sample value \r\n"
					"PriInsLast	string	50	string sample value \r\n"
					"PersonID	long		1 \r\n"
					"SecInsCo	string	255	string sample value \r\n"
					"SecGuarForward	string	152	string sample value \r\n"
					"SecGuarComma	string	153	string sample value \r\n"
					"SecInsfirst	string	50	string sample value \r\n"
					"SecInsMiddle	string	50	string sample value \r\n"
					"SecInsLast	string	50	string sample value \r\n"
					"PersID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"RespID	long		1 \r\n"
					"RespFirst	string	50	string sample value \r\n"
					"RespMiddle	string	50	string sample value \r\n"
					"RespLast	string	50	string sample value \r\n"
					"RespAdd1	string	150	string sample value \r\n"
					"RespAdd2	string	150	string sample value \r\n"
					"RespCity	string	50	string sample value \r\n"
					"RespState	string	20	string sample value \r\n"
					"RespZip	string	20	string sample value \r\n"
					"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatPhone	string	20	string sample value \r\n"
					"FullChargeNoTax	currency		1.00 \r\n"
					"ChargeTax1	number		1.00 \r\n"
					"ChargeTax2	number		1.00 \r\n"
					"TaxRate1	number		1.00 \r\n"
					"TaxRate2	number		1.00 \r\n"
					"TransProvAdd1	string	75	string sample value \r\n"
					"TransProvAdd2	string	75	string sample value \r\n"
					"TransProvCity	string	50	string sample value \r\n"
					"TransProvState	string	20	string sample value \r\n"
					"TransProvZip	string	20	string sample value \r\n"
					"TransProvFirst	string	50	string sample value \r\n"
					"TransProvMiddle	string	50	string sample value \r\n"
					"TransProvLast	string	50	string sample value \r\n"
					"TransProvID	long		1 \r\n"
					"RespPartyCount	long		1 \r\n"
					"LastPatientPaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastInsurancePaymentDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LastPatientPaymentAmount	currency		1.00 \r\n"
					"LastInsurancePaymentAmount	currency		1.00 \r\n"
					"CCType	string	50	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CheckNo	string	50	string sample value \r\n"
					"BankNo	string	50	string sample value \r\n"
					"CheckAcctNo	string	50	string sample value \r\n"
					"CCHoldersName	string	50	string sample value \r\n"
					"CCExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CCAuthNo	string	50	string sample value \r\n"
					"BankRoutingNum	string	50	string sample value \r\n"
					"PatCoordFirst	string	50	string sample value \r\n"
					"PatCoordMiddle	string	50	string sample value \r\n"
					"PatCoordLast	string	50	string sample value \r\n"
					"PercentOff	number		1.00 \r\n"
					"DiscountAmt	currency		1.00 \r\n"
					"DiscountCategoryDesc	string	255	string sample value \r\n"
					"ProviderNPI	string	50	string sample value \r\n"
					"CPTCode	string	50	string sample value \r\n"
					"CPTModifier1	string	10	string sample value \r\n"
					"CPTModifier2	string	10	string sample value \r\n"
					"CPTModifier3	string	10	string sample value \r\n"
					"CPTModifier4	string	10	string sample value \r\n"
					"BillStatementNote	memo	308	string sample value \r\n"
					"LineItemStatementNote	memo	308	string sample value \r\n"
					"SuppressBillStatementNote	long		1 \r\n"
					"SuppressLineItemStatementNote	long		1 \r\n";
				break;

			case 392:	//Ladders
				// (j.jones 2008-12-02 15:37) - PLID 32266 - changed UserName to be a 1000 character memo field
				return _T("; Field definition file for table: ADORecordset \n"
					"StepTemplateID	long		1 \n"
					"LadderTemplateID	long		1 \n"
					"Name	string	50	string sample value \n"
					"StepName	string	50	string sample value \n"
					"Action	long		1 \n"
					"Note	memo	2000	string sample value \n"
					"Skippable	string	3	string sample value \n"
					"UserName	memo 1000	string sample value \n"
					"StepOrder	long		1 \n"
					"ActivateType	long		1 \n"
					"ActivateInterval	long		1 \n"
					"ActionText	memo	2000	string sample value \n"
					"CriteriaInfo	memo	2000	string sample value \n"
					"ActivationInfo	memo	2000	string sample value\n");
				break;

				// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
				// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			case 547:	//Audit Trail - EMR
				return _T("; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n");
				break;

			case 391:	//AR Split by Responsibility
				// (j.gruber 2008-07-01 11:40) - PLID 26389 - added last pay info fields
				// (d.thompson 2009-03-18) - PLID 33171 - Added resp type fields
				//TES 4/7/2011 - PLID 33741 - Added PlaceOfServiceID, PlaceOfService
				// (d.thompson 2014-03-31) - PLID 61447 - Added ICD-10 fields
				// (j.gruber 2014-10-16) - PLID 63900 - Added IDate field
				switch(nSubReport) {
				case 1: 
					switch (nSubReportID) {
					case 1://Line Item Notes.
						return _T("; Field definition file for table: ADORecordset \n"
							"LineID	long		1 \n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Note	memo	4000	string sample value \n"
							"");
						break;
					default://Bill notes.
						return _T("; Field definition file for table: ADORecordset \n"
							"BillID	long		1 \n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Note	memo	4000	string sample value \n"
							"");
						break;			
					}
					break;
				default:
					return _T("; Field definition file for table: ADORecordset \n"
							"LineID	long		1 \n"
							"UserDefinedID	long		1 \n"
							"PatID	long		1 \n"
							"FullName	string	153	string sample value \n"
							"Description	string	255	string sample value \n"
							"Diff	currency		1.00 \n"
							"ProvID	long		1 \n"
							"DocName	string	153	string sample value \n"
							"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"BillID	long		1 \n"
							"BillDesc	string	255	string sample value \n"
							"UserDefID	long		1 \n"
							"LocID	long		1 \n"
							"Location	string	255	string sample value \n"
							"POSID	long		1 \n"
							"PlaceOfService	string	255	string sample value \n"
							"PriorAuthNum	string	50	string sample value \n"
							"Code	string	50	string sample value \n"
							"ICD9Code1	string	50	string sample value \r\n"
							"ICD9Code2	string	50	string sample value \r\n"
							"ICD9Code3	string	50	string sample value \r\n"
							"ICD9Code4	string	50	string sample value \r\n"
							"ICD10Code1	string	50	string sample value \r\n"
							"ICD10Code2	string	50	string sample value \r\n"
							"ICD10Code3	string	50	string sample value \r\n"
							"ICD10Code4	string	50	string sample value \r\n"
							"InsName	string	255	string sample value \n"
							"ADate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"BillNoteID	long		1 \n"
							"LineNoteID	long		1 \n"
							"LastPayDate	datetime		Jan 5, 1994 1:23:45 PM\n"
							"LastPayDesc	string	255	string sample value\n"
							"LastPayRespType	string	255	string sample value\n"
							"LastPayInputDate	datetime		Jan 5, 1994 1:23:45 PM\n"
							"LastPayAmount	currency		1.00\n"
							"RespTypePriority	long		1\n"
							"RespTypeName	string	255	string sample value\n"
							"");
					break;
				}
				break;
				
				case 567:  //Lab Results Form
					// (c.haag 2009-06-22 11:52) - PLID 34189 - LabReport
					// (j.jones 2009-09-18 09:11) - PLID 24629 - added ProviderNames field,
					// and added a provider info subreport
					// (j.jones 2009-10-19 17:51) - PLID 35994 - split race & ethnicity		
					//(e.lally 2009-11-12) PLID 36273 - Put the general 1 provider fields back in and renamed the subreport fields for lab providers
						//to LabProvider[field].
					//TES 5/14/2010 - PLID 38664 - Added Primary Care Physician and Referring Physician info
					//TES 9/7/2010 - PLID 40379 - Added AcknowledgedByUser and AcknowledgedDate to the Results subreport
					// (c.haag 2010-09-08 11:35) - PLID 38494 - Added custom fields
					// (d.lange 2011-01-14 14:32) - PLID 29065 - Added Biopsy Type
					//TES 4/25/2011 - PLID 43427 - Added DatePerformed to the results subreport
					//TES 4/28/2011 - PLID 43426 - Added DateReceivedByLab to the results subreport
					//TES 4/29/2011 - PLID 43484 - Added ClientAccountNumber to the results subreport
					//TES 5/2/2011 - PLID 43428 - Added OrderStatus
					//TES 5/5/2011 - PLID 43575 - Add FillerOrderNumber
					//TES 5/9/2011 - PLID 41077 - Added ResultValueAsString to the results subreport
					//TES 7/11/2011 - PLID 36445 - Added CC fields
					//TES 7/12/2011 - PLID 44107 - Added LOINC fields
					//(a.wilson 2011-9-28) PLID 43338 - added the datesigned field and the signatureimage for results
					// (a.wilson 2012-07-12 10:57) - PLID 51507 - Verified certain fields are minimum length.
					//TES 5/17/2013 - PLID 56286 - Added PerformingLab fields to the Results subreport
					//TES 9/10/2013 - PLID 58511 - Added LabWasReplaced and ResultWasReplaced
					switch (nSubReport) {
					case 1:
						//subreports

						switch (nSubReportID) {
							case 1:
								return _T("; Field definition file for table: ADORecordset \n"
									"LabID	long		1 \n"
									"PatID	long		1 \n"
									"FormNumberTextID	string	255	string sample value \n"
									"SlideTextID	string	255	string sample value \n"
									"DiagnosisDesc	memo		memo sample data \n"
									"ClinicalDiagnosisDesc	memo		memo sample data \n"
									"DateReceived	datetime		Jan 5, 1994 1:23:45 PM \n"
									"FlagName	string	255	string sample value \n"
									"ResultName	string	255	string sample value \n"
									"ResultReceived	datetime		Jan 5, 1994 1:23:45 PM \n"
									"ResultValue	memo		memo sample data \n"
									"ResultUnits	string	255	string sample value \n"
									"ResultReference	string	255	string sample value \n"
									"ResultStatus	string	255	string sample value \n"
									"ResultComments	string	255	string sample value \n"
									"FullResultComments	memo		memo sample data \n"
									"AcknowledgedByUser	string	50	string sample value \n"
									"AcknowledgedDate	datetime	Jan 5, 1994 1:23:45 PM \n"
									"DatePerformed	datetime	Jan 5, 1994 1:23:45 PM \n"
									"DateReceivedByLab	datetime	Jan 5, 1994 1:23:45 PM \n"
									"ClientAccountNumber	string	255	string sample value \n"
									"ResultValueAsString	string	255	string sample value \n"
									"ResultDateSigned	datetime		Jan 5, 1994 1:23:45 PM \n"
									"ResultSignatureImage	blob \n"
									"PerformingLabLocName	string	255	string sample value \n"
									"PerformingLabLocAddress1	string	255	string sample value \n"
									"PerformingLabLocAddress2	string	255	string sample value \n"
									"PerformingLabLocCity	string	255	string sample value \n"
									"PerformingLabLocState	string	255	string sample value \n"
									"PerformingLabLocZip	string	255	string sample value \n"
									"PerformingLabLocMainPhone	string	255	string sample value \n"
									"PerformingLabLocOtherPhone	string	255	string sample value \n"
									"PerformingLabLocFax	string	255	string sample value \n"
									"PerformingLabLocEmail	string	255	string sample value \n"		
									"ResultWasReplaced	boolean		TRUE \n"
									"");
							break;

							case 0:
								return _T("; Field definition file for table: ADORecordset \n"
									"LabID	long		1 \n"
									"PatID	long		1 \n"
									"LabProviderFirst	string	255	string sample value \n"
									"LabProviderMiddle	string	255	string sample value \n"
									"LabProviderLast	string	255	string sample value \n"
									"LabProviderTitle	string	255	string sample value \n"
									"LabProviderAddress1	string	255	string sample value \n"
									"LabProviderAddress2	string	255	string sample value \n"
									"LabProviderCity	string	255	string sample value \n"
									"LabProviderState	string	255	string sample value \n"
									"LabProviderZip	string	255	string sample value \n"
									"LabProviderWorkPhone	string	255	string sample value \n"
									"LabProviderExtension	string	255	string sample value \n"
									"LabProviderHomePhone	string	255	string sample value \n"
									"LabProviderCellPhone	string	255	string sample value \n"
									"LabProviderSSN	string	255	string sample value \n"
									"LabProviderEmail	string	255	string sample value \n"
									"");
							break;
						}
					default:
						//TES 8/3/2009 - PLID 33910 - Added LabProcedure
						// (j.jones 2009-09-11 14:58) - PLID 35503 - added LastApptDate and Instructions
						//(e.lally 2009-11-12) PLID 36273 - Put the general 1 provider fields back in and renamed the providerNames field
							//to LabProviderNames.
						//(a.wilson 2011-9-28) PLID 43338 - added the datesigned field
						// (r.gonet 01/15/2013) - PLID 34824 - Added the first lab ordering provider to the main report.
						// (r.gonet 01/15/2013) - PLID 41799 - Added individual patient name fields.
						// (r.gonet 01/15/2013) - PLID 54642 - Added Responsible Party fields.
						//TES 2/25/2013 - PLID 54876 - Added Performing Lab fields
						//TES 2/26/2013 - PLID 55321 - Added MedicalDirector
						return _T("; Field definition file for table: ADORecordset \n"
							"LabID	long		1 \n"
							"PatID	long		1 \n"
							"UserDefinedID	long		1 \n"
							"PatientName	string	255	string sample value \n"
							"PatientFirst	string	255	string sample value \n"
							"PatientMiddle	string	255	string sample value \n"
							"PatientLast	string	255	string sample value \n"
							"Gender	byte		1 \n"
							"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Address1	string	255	string sample value \n"
							"Address2	string	255	string sample value \n"
							"City	string	255	string sample value \n"
							"State	string	255	string sample value \n"
							"Zip	string	255	string sample value \n"
							"Suffix	string	255	string sample value \n"
							"Title	string	255	string sample value \n"
							"HomePhone	string	255	string sample value \n"
							"WorkPhone	string	255	string sample value \n"
							"Extension	string	255	string sample value \n"
							"CellPhone	string	255	string sample value \n"
							"OtherPhone	string	255	string sample value \n"
							"Email	string	255	string sample value \n"
							"Pager	string	255	string sample value \n"
							"Fax	string	255	string sample value \n"
							"SSN	string	255	string sample value \n"
							"EmergFirst	string	255	string sample value \n"
							"EmergLast	string	255	string sample value \n"
							"EmergHPhone	string	255	string sample value \n"
							"EmergWPhone	string	255	string sample value \n"
							"EmergRelation	string	255	string sample value \n"
							"MaritalStatus	string	255	string sample value \n"
							"Company	string	255	string sample value \n"
							"Occupation	string	255	string sample value \n"
							"EmployerFirst	string	255	string sample value \n"
							"EmployerMiddle	string	255	string sample value \n"
							"EmployerLast	string	255	string sample value \n"
							"EmployerAddress1	string	255	string sample value \n"
							"EmployerAddress2	string	255	string sample value \n"
							"EmployerCity	string	255	string sample value \n"
							"EmployerState	string	255	string sample value \n"
							"EmployerZip	string	255	string sample value \n"
							"Race	string	255	string sample value \n"
							"CDCRace	string	255	string sample value \n"
							"CDCEthnicity	string	255	string sample value \n"
							"FormNumberTextID	string	255	string sample value \n"
							"BiopsyDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"InputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"ClinicalData	memo		memo sample data \n"
							"Specimen	string	255	string sample value \n"
							"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"CompletedBy	string	255	string sample value \n"
							"AnatomyLocation	string	255	string sample value \n"
							"BiopsyType	string	100	string	sample	value \n"
							"ToBeOrdered	string	255	string sample value \n"
							"Type	byte		1 \n"
							"MelanomaHistory	boolean		TRUE \n"
							"PreviousBiopsy	boolean		TRUE \n"
							"SignatureImage	blob \n"
							"InitialDiagnosis	memo		memo sample data \n"
							"CC_Patient	boolean		TRUE \n"
							"CC_RefPhys	boolean		TRUE \n"
							"CC_PCP	boolean		TRUE \n"
							"LOINC_Code	string	255	string sample value \n"
							"LOINC_Description	string	255	string sample value \n"
							"ProviderFirst	string	255	string sample value \n"
							"ProviderMiddle	string	255	string sample value \n"
							"ProviderLast	string	255	string sample value \n"
							"ProviderTitle	string	255	string sample value \n"
							"ProviderAddress1	string	255	string sample value \n"
							"ProviderAddress2	string	255	string sample value \n"
							"ProviderCity	string	255	string sample value \n"
							"ProviderState	string	255	string sample value \n"
							"ProviderZip	string	255	string sample value \n"
							"ProviderWorkPhone	string	255	string sample value \n"
							"ProviderExtension	string	255	string sample value \n"
							"ProviderHomePhone	string	255	string sample value \n"
							"ProviderCellPhone	string	255	string sample value \n"
							"ProviderSSN	string	255	string sample value \n"
							"ProviderEmail	string	255	string sample value \n"
							"ProviderFax	string	20	string sample value \n"
							"LabProviderNames	memo		memo sample data \n"
							"PriLabProviderID	long		1 \n"
							"PriLabProviderFirst	string	255	string sample value \n"
							"PriLabProviderMiddle	string	255	string sample value \n"
							"PriLabProviderLast	string	255	string sample value \n"
							"PriLabProviderTitle	string	255	string sample value \n"
							"PriLabProviderAddress1	string	255	string sample value \n"
							"PriLabProviderAddress2	string	255	string sample value \n"
							"PriLabProviderCity	string	255	string sample value \n"
							"PriLabProviderState	string	255	string sample value \n"
							"PriLabProviderZip	string	255	string sample value \n"
							"PriLabProviderWorkPhone	string	255	string sample value \n"
							"PriLabProviderExtension	string	255	string sample value \n"
							"PriLabProviderHomePhone	string	255	string sample value \n"
							"PriLabProviderCellPhone	string	255	string sample value \n"
							"PriLabProviderSSN	string	255	string sample value \n"
							"PriLabProviderEmail	string	255	string sample value \n"
							"PriLabProviderNPI	string	50	string sample value \n"
							"PriLabProviderUPIN	string	50	string sample value \n"
							"PracLocName	string	255	string sample value \n"
							"PracLocAddress1	string	255	string sample value \n"
							"PracLocAddress2	string	255	string sample value \n"
							"PracLocCity	string	255	string sample value \n"
							"PracLocState	string	255	string sample value \n"
							"PracLocZip	string	255	string sample value \n"
							"PracLocMainPhone	string	255	string sample value \n"
							"PracLocOtherPhone	string	255	string sample value \n"
							"PracLocFax	string	255	string sample value \n"
							"PracLocEmail	string	255	string sample value \n"
							"LabLocName	string	255	string sample value \n"
							"LabLocAddress1	string	255	string sample value \n"
							"LabLocAddress2	string	255	string sample value \n"
							"LabLocCity	string	255	string sample value \n"
							"LabLocState	string	255	string sample value \n"
							"LabLocZip	string	255	string sample value \n"
							"LabLocMainPhone	string	255	string sample value \n"
							"LabLocOtherPhone	string	255	string sample value \n"
							"LabLocFax	string	255	string sample value \n"
							"LabLocEmail	string	255	string sample value \n"
							"PerformingLabLocName	string	255	string sample value \n"
							"PerformingLabLocAddress1	string	255	string sample value \n"
							"PerformingLabLocAddress2	string	255	string sample value \n"
							"PerformingLabLocCity	string	255	string sample value \n"
							"PerformingLabLocState	string	255	string sample value \n"
							"PerformingLabLocZip	string	255	string sample value \n"
							"PerformingLabLocMainPhone	string	255	string sample value \n"
							"PerformingLabLocOtherPhone	string	255	string sample value \n"
							"PerformingLabLocFax	string	255	string sample value \n"
							"PerformingLabLocEmail	string	255	string sample value \n"
							"MedicalDirector	string	255	string sample value \n"
							"InsuredPartyID	long		1 \n"
							"InsuranceCoName	string	255	string sample value \n"
							"PolicyID	string	255	string sample value \n"
							"GroupNum	string	255	string sample value \n"
							"PlanName	string	255	string sample value \n"
							"RelationToPatient	string	255	string sample value \n"
							"InsuredFirstName	string	255	string sample value \n"
							"InsuredMiddleName	string	255	string sample value \n"
							"InsuredLastName	string	255	string sample value \n"
							"InsuredFullName	string	255	string sample value \n"
							"InsuredAddress1	string	255	string sample value \n"
							"InsuredAddress2	string	255	string sample value \n"
							"InsuredCity	string	255	string sample value \n"
							"InsuredState	string	255	string sample value \n"
							"InsuredZip	string	255	string sample value \n"
							"InsuredHomePhone	string	255	string sample value \n"
							"InsuredWorkPhone	string	255	string sample value \n"
							"InsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"InsuredSSN	string	255	string sample value \n"
							"PriInsCoName	string	255	string sample value \n"
							"PriInsCoAddress1	string	255	string sample value \n"
							"PriInsCoAddress2	string	255	string sample value \n"
							"PriInsCoCity	string	255	string sample value \n"
							"PriInsCoState	string	255	string sample value \n"
							"PriInsCoZip	string	255	string sample value \n"
							"PriPolicyID	string	255	string sample value \n"
							"PriGroupNum	string	255	string sample value \n"
							"PriPlanName	string	255	string sample value \n"
							"PriRelationToPatient	string	255	string sample value \n"
							"PriInsuredFirstName	string	255	string sample value \n"
							"PriInsuredMiddleName	string	255	string sample value \n"
							"PriInsuredLastName	string	255	string sample value \n"
							"PriInsuredFullName	string	255	string sample value \n"
							"PriInsuredAddress1	string	255	string sample value \n"
							"PriInsuredAddress2	string	255	string sample value \n"
							"PriInsuredCity	string	255	string sample value \n"
							"PriInsuredState	string	255	string sample value \n"
							"PriInsuredZip	string	255	string sample value \n"
							"PriInsuredHomePhone	string	255	string sample value \n"
							"PriInsuredWorkPhone	string	255	string sample value \n"
							"PriInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"PriInsuredSSN	string	255	string sample value \n"
							"SecInsCoName	string	255	string sample value \n"
							"SecInsCoAddress1	string	255	string sample value \n"
							"SecInsCoAddress2	string	255	string sample value \n"
							"SecInsCoCity	string	255	string sample value \n"
							"SecInsCoState	string	255	string sample value \n"
							"SecInsCoZip	string	255	string sample value \n"
							"SecPolicyID	string	255	string sample value \n"
							"SecGroupNum	string	255	string sample value \n"
							"SecPlanName	string	255	string sample value \n"
							"SecRelationToPatient	string	255	string sample value \n"
							"SecInsuredFirstName	string	255	string sample value \n"
							"SecInsuredMiddleName	string	255	string sample value \n"
							"SecInsuredLastName	string	255	string sample value \n"
							"SecInsuredFullName	string	255	string sample value \n"
							"SecInsuredAddress1	string	255	string sample value \n"
							"SecInsuredAddress2	string	255	string sample value \n"
							"SecInsuredCity	string	255	string sample value \n"
							"SecInsuredState	string	255	string sample value \n"
							"SecInsuredZip	string	255	string sample value \n"
							"SecInsuredHomePhone	string	255	string sample value \n"
							"SecInsuredWorkPhone	string	255	string sample value \n"
							"SecInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"SecInsuredSSN	string	255	string sample value \n"
							"TerInsCoName	string	255	string sample value \n"
							"TerInsCoAddress1	string	255	string sample value \n"
							"TerInsCoAddress2	string	255	string sample value \n"
							"TerInsCoCity	string	255	string sample value \n"
							"TerInsCoState	string	255	string sample value \n"
							"TerInsCoZip	string	255	string sample value \n"
							"TerPolicyID	string	255	string sample value \n"
							"TerGroupNum	string	255	string sample value \n"
							"TerPlanName	string	255	string sample value \n"
							"TerRelationToPatient	string	255	string sample value \n"
							"TerInsuredFirstName	string	255	string sample value \n"
							"TerInsuredMiddleName	string	255	string sample value \n"
							"TerInsuredLastName	string	255	string sample value \n"
							"TerInsuredFullName	string	255	string sample value \n"
							"TerInsuredAddress1	string	255	string sample value \n"
							"TerInsuredAddress2	string	255	string sample value \n"
							"TerInsuredCity	string	255	string sample value \n"
							"TerInsuredState	string	255	string sample value \n"
							"TerInsuredZip	string	255	string sample value \n"
							"TerInsuredHomePhone	string	255	string sample value \n"
							"TerInsuredWorkPhone	string	255	string sample value \n"
							"TerInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"TerInsuredSSN	string	255	string sample value \n"
							"PriRespPartyRelationToPatient	string	255	string sample value \n"
							"PriRespPartyFirstName	string	255	string sample value \n"
							"PriRespPartyMiddleName	string	255	string sample value \n"
							"PriRespPartyLastName	string	255	string sample value \n"
							"PriRespPartyFullName	string	255	string sample value \n"
							"PriRespPartyAddress1	string	255	string sample value \n"
							"PriRespPartyAddress2	string	255	string sample value \n"
							"PriRespPartyCity	string	255	string sample value \n"
							"PriRespPartyState	string	255	string sample value \n"
							"PriRespPartyZip	string	255	string sample value \n"
							"PriRespPartyPhone	string	255	string sample value \n"
							"PriRespPartyBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"PriRespPartySSN	string	255	string sample value \n"
							"PriRespPartyEmployer	string	255	string sample value \n"
							"PCPFirst	string	50	string sample value \n"
							"PCPMiddle	string	50	string sample value \n"
							"PCPLast	string	50	string sample value \n"
							"PCPTitle	string	50	string sample value \n"
							"PCPAddress1	string	150	string sample value \n"
							"PCPAddress2	string	150	string sample value \n"
							"PCPCity	string	50	string sample value \n"
							"PCPState	string	20	string sample value \n"
							"PCPZip	string	20	string sample value \n"
							"PCPWorkPhone	string	20	string sample value \n"
							"PCPExtension	string	10	string sample value \n"
							"PCPHomePhone	string	20	string sample value \n"
							"PCPCellPhone	string	20	string sample value \n"
							"PCPSSN	string	11	string sample value \n"
							"PCPEmail	string	50	string sample value \n"
							"PCPFax	string	20	string sample value \n"
							"RefPhysFirst	string	50	string sample value \n"
							"RefPhysMiddle	string	50	string sample value \n"
							"RefPhysLast	string	50	string sample value \n"
							"RefPhysTitle	string	50	string sample value \n"
							"RefPhysAddress1	string	150	string sample value \n"
							"RefPhysAddress2	string	150	string sample value \n"
							"RefPhysCity	string	50	string sample value \n"
							"RefPhysState	string	20	string sample value \n"
							"RefPhysZip	string	20	string sample value \n"
							"RefPhysWorkPhone	string	20	string sample value \n"
							"RefPhysExtension	string	10	string sample value \n"
							"RefPhysHomePhone	string	20	string sample value \n"
							"RefPhysCellPhone	string	20	string sample value \n"
							"RefPhysSSN	string	11	string sample value \n"
							"RefPhysEmail	string	50	string sample value \n"
							"RefPhysFax	string	20	string sample value \n"
							"LabProcedure	string	100	string sample value \n"
							"LastApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Instructions	memo		memo sample data \n"
							"Custom1	string	255	string sample value \n"
							"Custom2	string	255	string sample value \n"
							"Custom3	string	255	string sample value \n"
							"Custom4	string	255	string sample value \n"
							"OrderStatus	string	255	string sample value \n"
							"FillerOrderNumber	string	255	string sample value \n"
							"DateSigned	datetime		Jan 5, 1994 1:23:45 PM \n"
							"LabWasReplaced	boolean		TRUE \n"
							"");
						break;
						}
					break;

				case 654: // (c.haag 2010-09-08 11:50) - PLID 38494 - Lab Specimen Labels
						  // (d.lange 2011-01-14 12:18) - PLID 29065 - Added Biopsy Type
						  // (a.wilson 2012-07-12 10:58) - PLID 51507 - Verified certain fields are minimum length.
					return _T("; Field definition file for table: ADORecordset \n"
							"LabID	long		1 \n"
							"FormNumberTextID	string	255	string sample value \n"
							"Specimen	string	255	string sample value \n"
							"PatID	long		1 \n"
							"LocationID	long		1 \n"
							"AnatomyID	long		1 \n"
							"AnatomySide	long		1 \n"
							"BiopsyDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"InputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"LabLocationID	long		1 \n"
							"ClinicalData	memo		memo sample data \n"
							"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"InsuredPartyID	long		1 \n"
							"PatientFirst	string	255	string sample value \n"
							"PatientMiddle	string	255	string sample value \n"
							"PatientLast	string	255	string sample value \n"
							"PicID	long		1 \n"
							"LabProcedureID	long		1 \n"
							"SignatureImageFile	string	255	string sample value \n"
							"SignatureInkData	blob		 \n"
							"Type	byte		1 \n"
							"ToBeOrdered	string	255	string sample value \n"
							"Providers	string	255	string sample value \n"
							"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Address1	string	255	string sample value \n"
							"Address2	string	255	string sample value \n"
							"City	string	255	string sample value \n"
							"State	string	255	string sample value \n"
							"Zip	string	255	string sample value \n"
							"HomePhone	string	255	string sample value \n"
							"WorkPhone	string	255	string sample value \n"
							"CellPhone	string	255	string sample value \n"
							"AnatomicLocation	string	255	string sample value \n"
							"AnatomicLocationQualifier	string	255	string sample value \n"
							"BiopsyType	string	100	sample	value \n"
							"Location	string	255	string sample value \n"
							"ReceivingLocation	string	255	string sample value \n"
							"CompletingUser	string	255	string sample value \n"
							"IDForInsurance	string	255	string sample value \n"
							"PolicyGroupNum	string	255	string sample value \n"
							"PlanName	string	255	string sample value \n"
							"RespTypeID	long		1 \n"
							"InsCoName	string	255	string sample value \n"
							"InsCoAddress1	string	255	string sample value \n"
							"InsCoAddress2	string	255	string sample value \n"
							"InsCoCity	string	255	string sample value \n"
							"InsCoState	string	255	string sample value \n"
							"InsCoZip	string	255	string sample value \n"
							"AssistantFirst	string	255	string sample value \n"
							"AssistantLast	string	255	string sample value \n"
							"PatientID	long		1 \n"
							"InitialDiagnosis	memo		memo sample data \n"
							"LastApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Instructions	memo		memo sample data \n"
							"Gender	byte		1 \n"
							"SSN	string	11	string sample value \n"
							"PriIDForInsurance	string	255	string sample value \n"
							"PriPolicyGroupNum	string	255	string sample value \n"
							"PriPlanName	string	255	string sample value \n"
							"PriRespTypeID	long		1 \n"
							"PriInsCoName	string	255	string sample value \n"
							"PriInsCoAddress1	string	255	string sample value \n"
							"PriInsCoAddress2	string	255	string sample value \n"
							"PriInsCoCity	string	255	string sample value \n"
							"PriInsCoState	string	255	string sample value \n"
							"PriInsCoZip	string	255	string sample value \n"
							"SecIDForInsurance	string	255	string sample value \n"
							"SecPolicyGroupNum	string	255	string sample value \n"
							"SecPlanName	string	255	string sample value \n"
							"SecRespTypeID	long		1 \n"
							"SecInsCoName	string	255	string sample value \n"
							"SecInsCoAddress1	string	255	string sample value \n"
							"SecInsCoAddress2	string	255	string sample value \n"
							"SecInsCoCity	string	255	string sample value \n"
							"SecInsCoState	string	255	string sample value \n"
							"SecInsCoZip	string	255	string sample value \n"
							"Custom1	string	255	string sample value \n"
							"Custom2	string	255	string sample value \n"
							"Custom3	string	255	string sample value \n"
							"Custom4	string	255	string sample value \n");
					break;

				case 658:	// (j.jones 2009-09-18 09:51) - PLID 24629 - Lab Request Form
					// (j.jones 2009-10-19 17:50) - PLID 35994 - split race and ethnicity
					//(e.lally 2009-11-12) PLID 36273 - Put the general 1 provider fields back in and renamed the subreport fields for lab providers
						//to LabProvider[field].
					//TES 5/13/2010 - PLID 38649 - Added AnatomicLocation, AnatomicQualifier, and AnatomicSide as individual fields
					//TES 5/14/2010 - PLID 38664 - Added Primary Care Physician and Referring Physician info
					// (c.haag 2010-09-08 11:35) - PLID 38494 - Added custom fields
					// (d.lange 2011-01-14 12:06) - PLID 29065 - Added Biopsy type
					//TES 5/2/2011 - PLID 43428 - Added OrderStatus
					//TES 6/15/2011 - PLID 41922 - Added ProviderUPIN, ProviderNPI, PCPUPIN, PCPNPI, RefPhysUPIN, and RefPhysNPI to the main report,
					//	and LabProviderUPIN and LabProviderNPI to the providers subreport
					//TES 7/11/2011 - PLID 36445 - Added CC fields
					//TES 7/12/2011 - PLID 44107 - Added LOINC fields
					//(a.wilson 2011-9-28) PLID 43338 - adding the signeddate field
					// (r.gonet 10/11/2011) - PLID 46437 - Added Barcode fields
					// (r.gonet 10/16/2011) - PLID 45967 - Added support for a dynamic number of custom fields.
					// (r.gonet 10/19/2011) - PLID 46039 - Added the HL7 third party insurance code.
					// (a.wilson 2012-07-12 10:55) - PLID 51507 - Verified certain fields are minimum length.
					// (r.gonet 01/15/2013) - PLID 41864 - Added HL7 Sending/Receiving Application/Facility codes with the intention of SendingFacilityCode
					//  being the most useful as it is usually the Lab's Client Account Number.
					// (r.gonet 01/15/2013) - PLID 34824 - Added fields for the first lab provider to the main report.
					// (r.gonet 01/15/2013) - PLID 41799 - Added individual patient name fields.
					// (r.gonet 01/15/2013) - PLID 54642 - Added Responsible Party fields.
					// (b.spivey, July 10, 2013) - PLID 39073 - Added MedAssistant
					// (j.jones 2014-05-13 10:23) - PLID 60605 - moved MedAssistant to be after the custom fields
					switch (nSubReport) {
					case 1:
						//subreport
						return _T("; Field definition file for table: ADORecordset \n"
							"LabID	long		1 \n"
							"PatID	long		1 \n"
							"LabProviderFirst	string	255	string sample value \n"
							"LabProviderMiddle	string	255	string sample value \n"
							"LabProviderLast	string	255	string sample value \n"
							"LabProviderTitle	string	255	string sample value \n"
							"LabProviderAddress1	string	255	string sample value \n"
							"LabProviderAddress2	string	255	string sample value \n"
							"LabProviderCity	string	255	string sample value \n"
							"LabProviderState	string	255	string sample value \n"
							"LabProviderZip	string	255	string sample value \n"
							"LabProviderWorkPhone	string	255	string sample value \n"
							"LabProviderExtension	string	255	string sample value \n"
							"LabProviderHomePhone	string	255	string sample value \n"
							"LabProviderCellPhone	string	255	string sample value \n"
							"LabProviderSSN	string	255	string sample value \n"
							"LabProviderEmail	string	255	string sample value \n"
							"LabProviderNPI	string	50	string sample value \n"
							"LabProviderUPIN	string	50	string sample value \n"
							"");
						break;

					default:
						{
							// (r.gonet 10/16/2011) - PLID 45967 - Generate the TTX content for the lab custom fields that the user has configured
							//  to go on this custom report. If this is not a custom report, then ignore what I just said.
							CString strLabCustomFields = "";
							if(nDefaultCustomReport != -1) {
								_RecordsetPtr prs = CreateParamRecordset(
									"SELECT LabReqCustomFieldsT.ReportFieldName, LabCustomFieldsT.DataTypeID "
									"FROM LabReqCustomFieldsT "
									"	JOIN LabCustomFieldsT ON LabReqCustomFieldsT.LabCustomFieldID = LabCustomFieldsT.ID "
									"WHERE LabReqCustomFieldsT.CustomReportNumber = {INT}; ",
									nDefaultCustomReport);
								while(!prs->eof) {
									CString strReportFieldName = VarString(prs->Fields->Item["ReportFieldName"]->Value);
									// (r.gonet 10/16/2011) - PLID 45967 - Each lab custom field may be a different type, so support that in the TTX.
									ELabCustomFieldType lcftType = (ELabCustomFieldType)VarLong(prs->Fields->Item["DataTypeID"]->Value);
									if(lcftType == lcftBool) {
										strLabCustomFields += FormatString("CF_%s	boolean		TRUE \n", strReportFieldName);
									} else if(lcftType == lcftInteger) {
										strLabCustomFields += FormatString("CF_%s	long		1 \n", strReportFieldName);
									} else if(lcftType == lcftFloat) {
										strLabCustomFields += FormatString("CF_%s	number		1.0 \n", strReportFieldName);
									} else if(lcftType == lcftText) {
										strLabCustomFields += FormatString("CF_%s	string	255	string sample value \n", strReportFieldName);
									} else if(lcftType == lcftMemo) {
										strLabCustomFields += FormatString("CF_%s	memo		memo sample value \n", strReportFieldName);
									} else if(lcftType == lcftDateTime) {
										strLabCustomFields += FormatString("CF_%s	datetime		Jan 5, 1994 1:23:45 PM \n", strReportFieldName);
									} else if(lcftType == lcftSingleSelectList) {
										// (r.gonet 10/16/2011) - PLID 45967 - Currently, we only support text values for lists
										strLabCustomFields += FormatString("CF_%s	string	255	string sample values \n", strReportFieldName);
									}
									prs->MoveNext();
								}
								prs->Close();
							}
							CString strTTXContent = _T("; Field definition file for table: ADORecordset \n"
								"LabID	long		1 \n"
								"PatID	long		1 \n"
								"UserDefinedID	long		1 \n"
								"PatientName	string	255	string sample value \n"
								"PatientFirst	string	255	string sample value \n"
								"PatientMiddle	string	255	string sample value \n"
								"PatientLast	string	255	string sample value \n"
								"Gender	byte		1 \n"
								"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"Address1	string	255	string sample value \n"
								"Address2	string	255	string sample value \n"
								"City	string	255	string sample value \n"
								"State	string	255	string sample value \n"
								"Zip	string	255	string sample value \n"
								"Suffix	string	255	string sample value \n"
								"Title	string	255	string sample value \n"
								"HomePhone	string	255	string sample value \n"
								"WorkPhone	string	255	string sample value \n"
								"Extension	string	255	string sample value \n"
								"CellPhone	string	255	string sample value \n"
								"OtherPhone	string	255	string sample value \n"
								"Email	string	255	string sample value \n"
								"Pager	string	255	string sample value \n"
								"Fax	string	255	string sample value \n"
								"SSN	string	255	string sample value \n"
								"EmergFirst	string	255	string sample value \n"
								"EmergLast	string	255	string sample value \n"
								"EmergHPhone	string	255	string sample value \n"
								"EmergWPhone	string	255	string sample value \n"
								"EmergRelation	string	255	string sample value \n"
								"MaritalStatus	string	255	string sample value \n"
								"Company	string	255	string sample value \n"
								"Occupation	string	255	string sample value \n"
								"EmployerFirst	string	255	string sample value \n"
								"EmployerMiddle	string	255	string sample value \n"
								"EmployerLast	string	255	string sample value \n"
								"EmployerAddress1	string	255	string sample value \n"
								"EmployerAddress2	string	255	string sample value \n"
								"EmployerCity	string	255	string sample value \n"
								"EmployerState	string	255	string sample value \n"
								"EmployerZip	string	255	string sample value \n"
								"Race	string	255	string sample value \n"
								"CDCRace	string	255	string sample value \n"
								"CDCEthnicity	string	255	string sample value \n"
								"FormNumberTextID	string	255	string sample value \n"
								"BiopsyDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"InputDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"ClinicalData	memo		memo sample data \n"
								"Specimen	string	255	string sample value \n"
								"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"CompletedBy	string	255	string sample value \n"
								"AnatomyLocation	string	255	string sample value \n"
								"BiopsyType	string	100	string	sample	value \n"
								"ToBeOrdered	string	255	string sample value \n"
								"Type	byte		1 \n"
								"MelanomaHistory	boolean		TRUE \n"
								"PreviousBiopsy	boolean		TRUE \n"
								"SignatureImage	blob \n"
								"InitialDiagnosis	memo		memo sample data \n"
								"CC_Patient	boolean		TRUE \n"
								"CC_RefPhys	boolean		TRUE \n"
								"CC_PCP	boolean		TRUE \n"
								"LOINC_Code	string	255	string sample value \n"
								"LOINC_Description	string	255	string sample value \n"
								"ProviderFirst	string	255	string sample value \n"
								"ProviderMiddle	string	255	string sample value \n"
								"ProviderLast	string	255	string sample value \n"
								"ProviderTitle	string	255	string sample value \n"
								"ProviderAddress1	string	255	string sample value \n"
								"ProviderAddress2	string	255	string sample value \n"
								"ProviderCity	string	255	string sample value \n"
								"ProviderState	string	255	string sample value \n"
								"ProviderZip	string	255	string sample value \n"
								"ProviderWorkPhone	string	255	string sample value \n"
								"ProviderExtension	string	255	string sample value \n"
								"ProviderHomePhone	string	255	string sample value \n"
								"ProviderCellPhone	string	255	string sample value \n"
								"ProviderSSN	string	255	string sample value \n"
								"ProviderEmail	string	255	string sample value \n"
								"ProviderFax	string	20	string sample value \n"
								"ProviderNPI	string	50	string sample value \n"
								"ProviderUPIN	string	50	string sample value \n"
								"LabProviderNames	memo		memo sample data \n"
								"PriLabProviderID	long		1 \n"
								"PriLabProviderFirst	string	255	string sample value \n"
								"PriLabProviderMiddle	string	255	string sample value \n"
								"PriLabProviderLast	string	255	string sample value \n"
								"PriLabProviderTitle	string	255	string sample value \n"
								"PriLabProviderAddress1	string	255	string sample value \n"
								"PriLabProviderAddress2	string	255	string sample value \n"
								"PriLabProviderCity	string	255	string sample value \n"
								"PriLabProviderState	string	255	string sample value \n"
								"PriLabProviderZip	string	255	string sample value \n"
								"PriLabProviderWorkPhone	string	255	string sample value \n"
								"PriLabProviderExtension	string	255	string sample value \n"
								"PriLabProviderHomePhone	string	255	string sample value \n"
								"PriLabProviderCellPhone	string	255	string sample value \n"
								"PriLabProviderSSN	string	255	string sample value \n"
								"PriLabProviderEmail	string	255	string sample value \n"
								"PriLabProviderNPI	string	50	string sample value \n"
								"PriLabProviderUPIN	string	50	string sample value \n"
								"SendingApplicationCode	string	255	string sample value \n"
								"SendingFacilityCode	string	255	string sample value \n"
								"ReceivingApplicationCode	string	255	string sample value \n"
								"ReceivingFacilityCode	string	255	string sample value \n"
								"PracLocName	string	255	string sample value \n"
								"PracLocAddress1	string	255	string sample value \n"
								"PracLocAddress2	string	255	string sample value \n"
								"PracLocCity	string	255	string sample value \n"
								"PracLocState	string	255	string sample value \n"
								"PracLocZip	string	255	string sample value \n"
								"PracLocMainPhone	string	255	string sample value \n"
								"PracLocOtherPhone	string	255	string sample value \n"
								"PracLocFax	string	255	string sample value \n"
								"PracLocEmail	string	255	string sample value \n"
								"LabLocName	string	255	string sample value \n"
								"LabLocAddress1	string	255	string sample value \n"
								"LabLocAddress2	string	255	string sample value \n"
								"LabLocCity	string	255	string sample value \n"
								"LabLocState	string	255	string sample value \n"
								"LabLocZip	string	255	string sample value \n"
								"LabLocMainPhone	string	255	string sample value \n"
								"LabLocOtherPhone	string	255	string sample value \n"
								"LabLocFax	string	255	string sample value \n"
								"LabLocEmail	string	255	string sample value \n"
								"InsuredPartyID	long		1 \n"
								"ThirdPartyInsCoCode	string	255	string sample value \n"
								"InsuranceCoName	string	255	string sample value \n"
								"PolicyID	string	255	string sample value \n"
								"GroupNum	string	255	string sample value \n"
								"PlanName	string	255	string sample value \n"
								"RelationToPatient	string	255	string sample value \n"
								"InsuredFirstName	string	255	string sample value \n"
								"InsuredMiddleName	string	255	string sample value \n"
								"InsuredLastName	string	255	string sample value \n"
								"InsuredFullName	string	255	string sample value \n"
								"InsuredAddress1	string	255	string sample value \n"
								"InsuredAddress2	string	255	string sample value \n"
								"InsuredCity	string	255	string sample value \n"
								"InsuredState	string	255	string sample value \n"
								"InsuredZip	string	255	string sample value \n"
								"InsuredHomePhone	string	255	string sample value \n"
								"InsuredWorkPhone	string	255	string sample value \n"
								"InsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"InsuredSSN	string	255	string sample value \n"
								"PriThirdPartyInsCoCode	string	255	string sample value \n"
								"PriInsCoName	string	255	string sample value \n"
								"PriInsCoAddress1	string	255	string sample value \n"
								"PriInsCoAddress2	string	255	string sample value \n"
								"PriInsCoCity	string	255	string sample value \n"
								"PriInsCoState	string	255	string sample value \n"
								"PriInsCoZip	string	255	string sample value \n"
								"PriPolicyID	string	255	string sample value \n"
								"PriGroupNum	string	255	string sample value \n"
								"PriPlanName	string	255	string sample value \n"
								"PriRelationToPatient	string	255	string sample value \n"
								"PriInsuredFirstName	string	255	string sample value \n"
								"PriInsuredMiddleName	string	255	string sample value \n"
								"PriInsuredLastName	string	255	string sample value \n"
								"PriInsuredFullName	string	255	string sample value \n"
								"PriInsuredAddress1	string	255	string sample value \n"
								"PriInsuredAddress2	string	255	string sample value \n"
								"PriInsuredCity	string	255	string sample value \n"
								"PriInsuredState	string	255	string sample value \n"
								"PriInsuredZip	string	255	string sample value \n"
								"PriInsuredHomePhone	string	255	string sample value \n"
								"PriInsuredWorkPhone	string	255	string sample value \n"
								"PriInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"PriInsuredSSN	string	255	string sample value \n"
								"SecThirdPartyInsCoCode	string	255	string sample value \n"
								"SecInsCoName	string	255	string sample value \n"
								"SecInsCoAddress1	string	255	string sample value \n"
								"SecInsCoAddress2	string	255	string sample value \n"
								"SecInsCoCity	string	255	string sample value \n"
								"SecInsCoState	string	255	string sample value \n"
								"SecInsCoZip	string	255	string sample value \n"
								"SecPolicyID	string	255	string sample value \n"
								"SecGroupNum	string	255	string sample value \n"
								"SecPlanName	string	255	string sample value \n"
								"SecRelationToPatient	string	255	string sample value \n"
								"SecInsuredFirstName	string	255	string sample value \n"
								"SecInsuredMiddleName	string	255	string sample value \n"
								"SecInsuredLastName	string	255	string sample value \n"
								"SecInsuredFullName	string	255	string sample value \n"
								"SecInsuredAddress1	string	255	string sample value \n"
								"SecInsuredAddress2	string	255	string sample value \n"
								"SecInsuredCity	string	255	string sample value \n"
								"SecInsuredState	string	255	string sample value \n"
								"SecInsuredZip	string	255	string sample value \n"
								"SecInsuredHomePhone	string	255	string sample value \n"
								"SecInsuredWorkPhone	string	255	string sample value \n"
								"SecInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"SecInsuredSSN	string	255	string sample value \n"
								"TerThirdPartyInsCoCode	string	255	string sample value \n"
								"TerInsCoName	string	255	string sample value \n"
								"TerInsCoAddress1	string	255	string sample value \n"
								"TerInsCoAddress2	string	255	string sample value \n"
								"TerInsCoCity	string	255	string sample value \n"
								"TerInsCoState	string	255	string sample value \n"
								"TerInsCoZip	string	255	string sample value \n"
								"TerPolicyID	string	255	string sample value \n"
								"TerGroupNum	string	255	string sample value \n"
								"TerPlanName	string	255	string sample value \n"
								"TerRelationToPatient	string	255	string sample value \n"
								"TerInsuredFirstName	string	255	string sample value \n"
								"TerInsuredMiddleName	string	255	string sample value \n"
								"TerInsuredLastName	string	255	string sample value \n"
								"TerInsuredFullName	string	255	string sample value \n"
								"TerInsuredAddress1	string	255	string sample value \n"
								"TerInsuredAddress2	string	255	string sample value \n"
								"TerInsuredCity	string	255	string sample value \n"
								"TerInsuredState	string	255	string sample value \n"
								"TerInsuredZip	string	255	string sample value \n"
								"TerInsuredHomePhone	string	255	string sample value \n"
								"TerInsuredWorkPhone	string	255	string sample value \n"
								"TerInsuredBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"TerInsuredSSN	string	255	string sample value \n"
								"PriRespPartyRelationToPatient	string	255	string sample value \n"
								"PriRespPartyFirstName	string	255	string sample value \n"
								"PriRespPartyMiddleName	string	255	string sample value \n"
								"PriRespPartyLastName	string	255	string sample value \n"
								"PriRespPartyFullName	string	255	string sample value \n"
								"PriRespPartyAddress1	string	255	string sample value \n"
								"PriRespPartyAddress2	string	255	string sample value \n"
								"PriRespPartyCity	string	255	string sample value \n"
								"PriRespPartyState	string	255	string sample value \n"
								"PriRespPartyZip	string	255	string sample value \n"
								"PriRespPartyPhone	string	255	string sample value \n"
								"PriRespPartyBirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"PriRespPartySSN	string	255	string sample value \n"
								"PriRespPartyEmployer	string	255	string sample value \n"
								"PCPFirst	string	50	string sample value \n"
								"PCPMiddle	string	50	string sample value \n"
								"PCPLast	string	50	string sample value \n"
								"PCPTitle	string	50	string sample value \n"
								"PCPAddress1	string	150	string sample value \n"
								"PCPAddress2	string	150	string sample value \n"
								"PCPCity	string	50	string sample value \n"
								"PCPState	string	20	string sample value \n"
								"PCPZip	string	20	string sample value \n"
								"PCPWorkPhone	string	20	string sample value \n"
								"PCPExtension	string	10	string sample value \n"
								"PCPHomePhone	string	20	string sample value \n"
								"PCPCellPhone	string	20	string sample value \n"
								"PCPSSN	string	11	string sample value \n"
								"PCPEmail	string	50	string sample value \n"
								"PCPFax	string	20	string sample value \n"
								"PCPNPI	string	50	string sample value \n"
								"PCPUPIN	string	50	string sample value \n"
								"RefPhysFirst	string	50	string sample value \n"
								"RefPhysMiddle	string	50	string sample value \n"
								"RefPhysLast	string	50	string sample value \n"
								"RefPhysTitle	string	50	string sample value \n"
								"RefPhysAddress1	string	150	string sample value \n"
								"RefPhysAddress2	string	150	string sample value \n"
								"RefPhysCity	string	50	string sample value \n"
								"RefPhysState	string	20	string sample value \n"
								"RefPhysZip	string	20	string sample value \n"
								"RefPhysWorkPhone	string	20	string sample value \n"
								"RefPhysExtension	string	10	string sample value \n"
								"RefPhysHomePhone	string	20	string sample value \n"
								"RefPhysCellPhone	string	20	string sample value \n"
								"RefPhysSSN	string	11	string sample value \n"
								"RefPhysEmail	string	50	string sample value \n"
								"RefPhysFax	string	20	string sample value \n"
								"RefPhysNPI	string	50	string sample value \n"
								"RefPhysUPIN	string	50	string sample value \n"
								"LabProcedure	string	100	string sample value \n"
								"LastApptDate	datetime		Jan 5, 1994 1:23:45 PM \n"
								"Instructions	memo		memo sample data \n"
								"AnatomicLocation	string	100	string sample value \n"
								"AnatomicQualifier	string	100	string sample value \n"
								"AnatomicSide	string	5	string sample value \n"
								"Custom1	string	255	string sample value \n"
								"Custom2	string	255	string sample value \n"
								"Custom3	string	255	string sample value \n"
								"Custom4	string	255	string sample value \n"
								"OrderStatus	string	255	string sample value \n"
								"DateSigned	datetime		Jan 5, 1994 1:23:45 PM \n"
								"Barcode1	memo		memo sample data \n"
								"Barcode1Length	long		1 \n"
								"Barcode2	memo		memo sample data \n"
								"Barcode2Length	long		1 \n"
								+ strLabCustomFields + // (r.gonet 10/16/2011) - PLID 45967 - You may add new TTX content above and below here. Whatever is here will be output in the SQL query.
								"MedAssistant	string	255	string sample value \n"
								"");
								return strTTXContent;
							}
						break;
					}
					break;

				case 568:  //Labs by Patient
					// (j.jones 2007-07-20 09:43) - PLID 26751 - added DiagnosisDesc and ClinicalDiagnosisDesc
					// (j.gruber 2008-10-27 15:52) - PLID 31433 - changed/added fields for new lab results
					// (z.manning 2008-10-30 12:16) - PLID 31864 - Added to be ordered and type
					//TES 12/8/2008 - PLID 32359 - Added a ResultStatus field.
					//TES 5/14/2009 - PLID 33792 - Added InitialDiagnosis
					// (c.haag 2009-06-22 11:26) - PLID 34189 - Added ResultUnits
					//TES 11/10/2009 - PLID 36260 - Lengthened the Anatomy field
					// (d.lange 2011-01-14 15:02) - PLID 
					return _T("; Field definition file for table: ADORecordset \n"
						"LabID	long		1 \n"
						"Name	string	153	string sample value \n"
						"PatID	long		1 \n"
						"Form	string	78	string sample value \n"
						"Slide	string	25	string sample value \n"
						"ClinicalData	memo		memo sample data \n"
						"IDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"ResultFlagName	string	255	string sample value \n"
						"ResultFlagValue	long		1 \n"
						"Anatomy	string	208	string sample value \n"
						"BiopsyType	string	100	string	sample	value \n"
						"DiagnosisDesc	memo		memo sample data \n"
						"ClinicalDiagnosisDesc	memo		memo sample data \n"
						"LabLocationName	string	255	string sample value \n"
						"LocID	long		1 \n"
						"LabLocID	long		1 \n"
						"BiopsyDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"Specimen	string	50	string sample value \n"
						"Providers	string	1000	string sample data \n"
						"SocialSecurity	string	11	string sample value \n"
						"MedAsstID	long		1 \n"
						"MedAsstLast	string	50	string sample value \n"
						"MedAsstFirst	string	50	string sample value \n"
						"MedAsstMiddle	string	50	string sample value \n"
						"DateOfDischarge	datetime		Jan 5, 1994 1:23:45 PM \n"
						"ResultName	string	255	string sample value \n"
						"ResultReceived	datetime		Jan 5, 1994 1:23:45 PM \n"
						"ResultValue	memo	50	string sample value \n"
						"ResultUnits	string	255	string sample value \n"
						"Reference	string	255	string sample value \n"
						"ToBeOrdered	string	1000	string sample value \n"
						"Type	long		1 \n"
						"ResultStatus	string	255	string sample value \n"
						"InitialDiagnosis	memo		memo sample data \n"
						);
				break;

				// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
				// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
				case 233:	//Audit Trail - Financial
					return _T("; Field definition file for table: ADORecordset \n"
						"UserName	string	50	string sample value \n"
						"ChangedAtLocationName	string	255	string sample value \n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"PriorityDesc	string	6	string sample value \n"
						"ID	long		1 \n"
						"AuditID	long		1 \n"
						"RecordID	long		1 \n"
						"OldValue	memo		memo sample data \n"
						"NewValue	memo		memo sample data \n"
						"Priority	long		1 \n"
						"Type	long		1 \n"
						"PersonName	string	255	string sample value \n"
						"ItemID	long		1 \n"
						"Priority	long		1 \n"
						"AuditDetailID	long		1 \n"
						"InternalPatientID	long		1 \n"
						"PatientID	long		1 \n"
						"IPAddress	string	15	0.0.0.0	\n"
						"Item	string	270	string sample value \n"
						"ItemType	memo		memo sample data");
					break;

					// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
					// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
				case 261:	//Audit Trail - Scheduling
					return _T("; Field definition file for table: ADORecordset \n"
						"UserName	string	50	string sample value \n"
						"ChangedAtLocationName	string	255	string sample value \n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"PriorityDesc	string	6	string sample value \n"
						"ID	long		1 \n"
						"AuditID	long		1 \n"
						"RecordID	long		1 \n"
						"OldValue	memo		memo sample data \n"
						"NewValue	memo		memo sample data \n"
						"Priority	long		1 \n"
						"Type	long		1 \n"
						"PersonName	string	255	string sample value \n"
						"ItemID	long		1 \n"
						"Priority	long		1 \n"
						"AuditDetailID	long		1 \n"
						"InternalPatientID	long		1 \n"
						"PatientID	long		1 \n"
						"IPAddress	string	15	0.0.0.0	\n"
						"Item	string	4000	string sample value \n"
						"ItemType	memo		memo sample data");
					break;

					// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
					// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
				case 343:	//Audit Trail - Inventory
					return _T("; Field definition file for table: ADORecordset \n"
						"UserName	string	50	string sample value \n"
						"ChangedAtLocationName	string	255	string sample value \n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"PriorityDesc	string	6	string sample value \n"
						"ID	long		1 \n"
						"AuditID	long		1 \n"
						"RecordID	long		1 \n"
						"OldValue	memo		memo sample data \n"
						"NewValue	memo		memo sample data \n"
						"Priority	long		1 \n"
						"Type	long		1 \n"
						"PersonName	string	255	string sample value \n"
						"ItemID	long		1 \n"
						"Priority	long		1 \n"
						"AuditDetailID	long		1 \n"
						"InternalPatientID	long		1 \n"
						"PatientID	long		1 \n"
						"IPAddress	string	15	0.0.0.0	\n"
						"Item	string	265	string sample value \n"
						"ItemType	memo		memo sample data");
					break;

				case 256:	//EMR Data By Patient
					return _T("; Field definition file for table: ADORecordset \r\n"
						"DocName	memo	204	string sample value \r\n"
						"PatID	long		1 \r\n"
						"PatientName	string	204	string sample value \r\n"
						"ProcedureID	long		1 \r\n"
						"ProcedureName	string	100	string sample value \r\n"
						"DetailName	string	255	string sample value \r\n"
						"DetailData	memo	4000	string sample value \r\n"
						"CountOfData	long		1 \r\n"
						"PatientAge	long		1 \r\n"
						"PatientGender	byte		1 \r\n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"LocID	long		1 \r\n"
						"OrderID	long		1 \r\n"
						"EmrID	long		1\r\n"
						"SecondaryDocName	memo	1000	string sample value\r\n"
						"IsRtf	long		1\r\n"
						"TemplateID	long		1\r\n");
					break;

				case 170:	//AR By Insurance Co
				case 385:	//AR By Insurance Co Office
				case 659:	//AR By Financial Class
					// (j.gruber 2008-07-01 10:11) - PLID 26389 - added last pay info fields
					// (d.thompson 2009-03-18) - PLID 33171 - Added resp type fields
					// (z.manning 2009-03-25 11:09) - PLID 19120 - Added financial class
					//TES 4/7/2011 - PLID 33741 - Added PlaceOfServiceID, PlaceOfService
					// (b.spivey March 31st, 2014) PLID 61441 - Updated for ICD-10
					// (j.gruber 2014-10-16) - PLID 63901 - Added IDate field
				switch(nSubReport) {
				case 1: 
					switch (nSubReportID) {
					case 1://Line Item Notes.
						return _T("; Field definition file for table: ADORecordset \n"
							"LineID	long		1 \n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Note	memo	4000	string sample value \n"
							"");
						break;
					default://Bill notes.
						return _T("; Field definition file for table: ADORecordset \n"
							"BillID	long		1 \n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
							"Note	memo	4000	string sample value \n"
							"");
						break;			
					}
					break;
				default:
					return _T("; Field definition file for table: ADORecordset \n"
						"UserDefinedID	long		1\n"
						"PatID	long		1\n"
						"FullName	string	153	string sample value\n"
						"Description	string	255	string sample value\n"
						"Diff	currency		1.00\n"
						"ProvID	long		1\n"
						"DocName	string	153	string sample value\n"
						"InsName	string	255	string sample value\n"
						"InsAdd1	string	75	string sample value\n"
						"InsAdd2	string	75	string sample value\n"
						"InsCity	string	50	string sample value\n"
						"InsState	string	20	string sample value\n"
						"InsZip	string	20	string sample value\n"
						"InsPhone	string	20	string sample value\n"
						"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"PolicyNum	string	50	string sample value\n"
						"TDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"IDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"BillDesc	string	255	string sample value\n"
						"InsCoID	long		1\n"
						"UserDefID	long		1\n"
						"LocID	long		1\n"
						"Location	string	255	string sample value\n"
						"PlaceOfServiceID	long		1\n"
						"PlaceOfService	string	255	string sample value\n"
						"InsContactName	string	153	string sample value\n"
						"InsPartyName	string	153	string sample value\n"
						"RelationToPatient	string	60	string sample value\n"
						"PolicyGroupNum	string	50	string sample value\n"
						"PriorAuthNum	string	50	string sample value\n"
						"Code	string	50	string sample value\n"
						"ICD9Code1	string	50	string sample value \r\n"
						"ICD9Code2	string	50	string sample value \r\n"
						"ICD9Code3	string	50	string sample value \r\n"
						"ICD9Code4	string	50	string sample value \r\n"
						"ICD10Code1	string	50	string sample value \r\n"
						"ICD10Code2	string	50	string sample value \r\n"
						"ICD10Code3	string	50	string sample value \r\n"
						"ICD10Code4	string	50	string sample value \r\n"
						"ADate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"InsNotes	memo		memo sample data\n"
						"LineID	long		1\n"
						"BillID	long		1\n"
						"BillNoteID	long		1\n"
						"LineNoteID	long		1\n"
						"ServiceDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"LastPayDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"LastPayDesc	string	255	string sample value\n"
						"LastPayRespType	string	255	string sample value\n"
						"LastPayInputDate	datetime		Jan 5, 1994 1:23:45 PM\n"
						"LastPayAmount	currency		1.00\n"
						"RespTypePriority	long		1\n"
						"RespTypeName	string	255	string sample value\n"
						"FinClassID		long		1\n"
						"FinClass	string	255	string sample value\n"
						"");
					break;
				}
				break;

				case 571:	//Patient Outcomes
					return _T("; Field definition file for table: ADORecordset \n"
						"EyeProcedureID	long		1 \n"
						"ProcedureName	string	100	string sample value \n"
						"ProcedureDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"PatID	long		1 \n"
						"UserDefinedID	long		1 \n"
						"PatientName	string	153	string sample value \n"
						"BirthDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"SSN	string	11	string sample value \n"
						"Address1	string	150	string sample value \n"
						"Address2	string	150	string sample value \n"
						"City	string	50	string sample value \n"
						"State	string	20	string sample value \n"
						"Zip	string	20	string sample value \n"
						"Gender	byte		1 \n"
						"HomePhone	string	20	string sample value \n"
						"PrivHome	boolean		TRUE \n"
						"WorkPhone	string	20	string sample value \n"
						"Extension	string	10	string sample value \n"
						"PrivWork	boolean		TRUE \n"
						"CellPhone	string	20	string sample value \n"
						"PrivCell	boolean		TRUE \n"
						"ProvID	long		1 \n"
						"ProviderName	string	153	string sample value \n"
						"LocID	long		1 \n"
						"LocationName	string	255	string sample value \n"
						"Monovision	string	3	string sample value \n"
						"Contacts	string	3	string sample value \n"
						"Complaint	memo		string sample value \n"
						"Age	long		1 \n"
						"ProcType	string	255	string sample value \n"
						"OpType	string	255	string sample value \n"
						"LaserUsed	string	50	string sample value \n"
						"KeratomeType	string	50	string sample value \n"
						"BladeType	string	50	string sample value \n"
						"EquipmentUsed	string	50	string sample value \n"
						"Power	string	50	string sample value \n"
						"NumPulses	long		1 \n"
						"PupilLight	string	50	string sample value \n"
						"PupilDark	string	50	string sample value \n"
						"CLType	string	50	string sample value \n"
						"CLUse	string	50	string sample value \n"
						"VisitID	long		1 \n"
						"VisitDate	datetime		Jan 5, 1994 1:23:45 PM \n"
						"VisitType	memo		string sample value \n"
						"VisitRatingName	memo		string sample value \n"
						"VisitNotes	memo		string sample value \n"
						"EyeTestID	long		1 \n"
						"TestID	long		1 \n"
						"TestName	string	100	string sample value \n"
						"EyeType	string	5	string sample value \n"
						"Sphere	number		1.00 \n"
						"Cyl	number		1.00 \n"
						"Axis	long		1 \n"
						"VA	long		1 \n"
						"BCVA	long		1 \n");
					break;
		case 573: // Marketing Effectiveness PP
			return _T("; Field definition file for table: ADORecordset \n"
					"PatID	long		1 \n"
					"FullName	string	153	string sample value\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\n"
					"Description	string	255	string sample value\n"
					"TotalCharges	currency		1.00\n"
					"");
			break;

		case 581:  //EMR Search
			// (z.manning, 03/03/2008) - PLID 29158 - Added has been billed, appt id, start time, resource, and show state.
			// (z.manning 2008-11-12 15:30) - PLID 26167 - Added secondary provider
			// (z.manning 2009-05-20 15:55) - PLID 34314 - Added age and gender
			// (d.lange 2011-04-25 09:40) - PLID 43381 - Added Assistant/Technician
			// (j.jones 2011-07-05 17:52) - PLID 44432 - increased the size of the status field
			//(r.wilson 10/12/2012) plid 52586 - Added column StatusID
			// (s.dhole 2013-08-21 16:19) - PLID 57391 Added appointment  primary and secondary insurance
			return _T("; Field definition file for table: ADORecordset \r\n"
				"GroupID	long		1 \r\n"
				"EMRID	long		1 \r\n"
				"PicID	long		1 \r\n"
				"PatientID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"ProvName	memo	1000	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientMiddle	string	50	string sample value \r\n"
				"PatientAge	long		1 \r\n"
				"BirthDate	datetime		Jan 5, 1994, 1:23:45 PM \r\n"
				"PatientGender	byte		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	255	string sample value \r\n"
				"LocName	string	255	string sample value \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"InputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ModifiedDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"HasBeenBilled	string	50	string sample value \r\n"
				"ApptID	long	1 \r\n"
				"StartTime	datetime	Jan 5, 1994, 1:23:45 PM \r\n"
				"Resource	memo	1000	string sample value \r\n"
				"ShowState	string	3		string sample value \r\n"
				"SecProvName	memo	1000	string sample value \r\n"
				"TechnicianName	memo	1000	string sample value \r\n"
				"ApptPrimaryInsCo	string	255	string sample value \r\n"
				"ApptSecondaryInsCo	string	255	string sample value \r\n"
				"");
			break;

		case 576:  //EMR Summary
			// (j.jones 2011-07-05 12:17) - PLID 43603 - Status is now 255 characters
			// (d.singleton 2012-06-05 11:12) - PLID 50991 - increased the length of address1 and address2 emr description
			return _T("; Field definition file for table: ADORecordset \r\n"
				"EMRID	long		1 \r\n"
				"EMNID	long		1 \r\n"
				"PicID	long		1 \r\n"
				"EMRDescription	memo	string sample value \r\n"
				"EMNDescription	string	255	string sample value \r\n"
				"PatID	long		1 \r\n"
				"PatFirst	string	50	string sample value \r\n"
				"PatMiddle	string	50	string sample value \r\n"
				"PatLast	string	50	string sample value \r\n"
				"DocName	memo	1000	string sample value \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EMNInputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EMNLastModified	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatientAge	long		1 \r\n"
				"PatientGender	byte		1 \r\n"
				"AdditionalNotes	memo		memo sample data \r\n"
				"TopicID	long		1 \r\n"
				"TopicName	string	200	string sample value \r\n"
				"InfoID	long		1 \r\n"
				"ItemName	string	255	string sample value \r\n"
				"DataType	byte		1 \r\n"
				"Data	memo		memo sample data \r\n"
				"Status	string	255	string sample value \r\n"
				"EMRDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"SecondaryDocName	memo	1000	string sample value");
		break;

		case 577:   //EMN By Procedure
			// (j.jones 2011-07-05 17:52) - PLID 44432 - increased the size of the Status field
			// (d.singleton 2012-06-14 12:06) - PLID 50991 increase size of emr description
			return _T("; Field definition file for table: ADORecordset \r\n"
				"EMNID	long		1 \r\n"
				"EMNDescription	string	255	string sample value \r\n"
				"Status	string	255	string sample value \r\n"
				"UserDefinedID	long		1 \r\n"
				"PatID	long		1 \r\n"
				"PatientName	string	153	string sample value \r\n"
				"DocName	memo	1000	string sample value \r\n"
				"EMRID	long		1 \r\n"
				"EMRDescription	memo	string sample value \r\n"
				"EMNInputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EMNDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EMNLastModifiedDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Location	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"ProcedureID	long		1 \r\n"
				"ProcedureName	string	100	string sample value \r\n"
				"ProcedureOfficialName	string	255	string sample value \r\n"
				"PatientAge	long		1 \r\n"
				"PatientGender	string	6	string sample value \r\n"
				"SecondaryDocName	memo	1000	string sample value");
		break;

		case 255:  //EMR Totals by Age/Patient
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ProcedureID	long		1 \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"DocName	memo	1000	string sample value \r\n"
				"ProcedureName	string	100	string sample value \r\n"
				"AgeGroup	string	26	string sample value \r\n"
				"TotalInAgeGroup	long		1 \r\n"
				"Male	long		1 \r\n"
				"Female	long		1 \r\n"
				"LocID	long		1 \r\n"
				"ProcedureID	long		1 \r\n"
				"EmrID	long		1 \r\n"
				"LocID	long		1 \r\n"
				"SecondaryDocName	memo	1000	string sample value\r\n"
				"TemplateID	long		1 \r\n");
		break;

		case 254:  //EMR Data By Provider
			//DRT 7/22/2008 - While fixing PLID 30807, I had issues when "fixing" string to 
			//	memo values for some fields.  This report groups on doctorname and data, and
			//	Crystal does not allow you to group on memo fields, so they must get truncated.
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ProvID	long		1 \r\n"
				"DoctorName	string	204	string sample value \r\n"
				"ProcedureID	long		1 \r\n"
				"ProcedureName	string	100	string sample value \r\n"
				"DetailName	string	255	string sample value \r\n"
				"DetailData	string	255	string sample value \r\n"
				"CountOfData	long		1 \r\n"
				"PatientAge	long		1 \r\n"
				"PatientGender	byte		1 \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"LocID	long		1 \r\n"
				"EmrID	long		1 \r\n"
				"SecondaryDocName	string	255	string sample value \r\n"
				"IsRtf	long		1\r\n"
				"TemplateID	long		1 \r\n");
		break;

		case 444:	// Medications Tab (PP)
			// (c.haag 2007-02-12 13:56) - PLID 24561 - We now require a memo
			// field for the medication name
			//TES 3/5/2009 - PLID 33068 - Added SureScripts fields
			// (d.thompson 2009-04-02) - PLID 33571 - strength unit
			//TES 5/11/2009 - PLID 28519 - Added SampleExpirationDate
			return _T("; Field definition file for table: ADORecordset \n"
				"PatID	long		1 \n"
				"PatName	string	153	string sample value \n"
				"MedName	string	255	string sample value \n"
				"Description	memo		memo sample data \n"
				"RefillsAllowed	string	50	string sample value \n"
				"PillsPerBottle	string	50	string sample value \n"
				"Unit	string	100	string sample value \n"
				"MedID	long		1 \n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
				"LocID	long		1 \n"
				"ProvID	long		1 \n"
				"DaysSupply	long		1 \n"
				"NoteToPharmacist	string	255	string sample value \n"
				"AllowSubstitutions	boolean		TRUE \n"
				"PriorAuthorization	string	50	string sample value \n"
				"PriorAuthorizationIsSample	boolean		TRUE \n"
				"Strength	string	25	string sample value \n"
				"DosageForm	string	100	string sample value \n"
				"DiagnosisCodeList	memo		memo sample value \n"
				"StrengthUnit	string	100	string sample value \n"
				"SampleExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \n");
			break;

		case 414:	// Patient Prescriptions
			// (c.haag 2007-02-12 14:00) - PLID 24561 - We now require a memo
			// field for the medication name
			//TES 3/5/2009 - PLID 33068 - Added SureScripts fields
			// (d.thompson 2009-04-02) - PLID 33571 - strength unit
			//TES 5/11/2009 - PLID 28519 - Added SampleExpirationDate
			return _T("; Field definition file for table: ADORecordset \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"PatName	string	153	string sample value \r\n"
				"MedName	string	255	string sample value \r\n"
				"Description	memo		memo sample data \r\n"
				"RefillsAllowed	string	50	string sample value \r\n"
				"PillsPerBottle	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"LocID	long		1 \r\n"
				"ProvID	long		1 \r\n"
				"LocName	string	255	string sample value \r\n"
				"ProvName	string	153	string sample value \r\n"
				"PDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"MedID	long		1 \r\n"
				"DaysSupply	long		1 \r\n"
				"NoteToPharmacist	string	255	string sample value \r\n"
				"AllowSubstitutions	boolean		TRUE \r\n"
				"PriorAuthorization	string	50	string sample value \r\n"
				"PriorAuthorizationIsSample	boolean		TRUE \r\n"
				"Strength	string	25	string sample value \r\n"
				"DosageForm	string	100	string sample value \r\n"
				"DiagnosisCodeList	memo		memo sample value \r\n"
				"StrengthUnit	string	100	string sample value \r\n"
				"SampleExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n");
		break;

		case 413:	// Patient Medications
			// (c.haag 2007-02-12 14:00) - PLID 24561 - We now require a memo
			// field for the medication name
			// (d.thompson 2008-12-01) - PLID 32174 - DefaultPills is now DefaultQuantity, Description is now PatientInstructions
			return _T("; Field definition file for table: ADORecordset \n"
				"PatID	long		1 \n"
				"PatName	string	153	string sample value \n"
				"MedName	string	255	string sample value \n"
				"PatientInstructions	memo		memo sample data \n"
				"DefaultRefills	string	50	string sample value \n"
				"DefaultQuantity	string	50	string sample value \n"
				"Unit	string	255	string sample value \n"
				"MedID	long		1 \n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
				"LocID	long		1 \n"
				"ProvID	long		1");
		break;

		case 430:	// Deleted Prescriptions
			// (c.haag 2007-02-12 14:05) - PLID 24561 - We now require a memo
			// field for the medication name
			//TES 3/5/2009 - PLID 33068 - Added SureScripts fields
			// (d.thompson 2009-04-02) - PLID 33571 - strength unit
			//TES 5/11/2009 - PLID 28519 - Added SampleExpirationDate
			return _T("; Field definition file for table: ADORecordset \n"
				"PatID	long		1 \n"
				"UserDefinedID	long		1 \n"
				"PatName	string	153	string sample value \n"
				"MedName	string	255	string sample value \r\n"
				"Description	memo		memo sample data \n"
				"RefillsAllowed	string	50	string sample value \n"
				"PillsPerBottle	string	50	string sample value \n"
				"Unit	string	100	string sample value \n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
				"LocID	long		1 \n"
				"ProvID	long		1 \n"
				"LocName	string	255	string sample value \n"
				"ProvName	string	153	string sample value \n"
				"PDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"MedID	long		1 \n"
				"DeletedBy	string	50	string sample value \n"
				"DeletedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"DaysSupply	long		1 \n"
				"NoteToPharmacist	string	255	string sample value \n"
				"AllowSubstitutions	boolean		TRUE \n"
				"PriorAuthorization	string	50	string sample value \n"
				"PriorAuthorizationIsSample	boolean		TRUE \n"
				"Strength	string	25	string sample value \n"
				"DosageForm	string	100	string sample value \n"
				"DiagnosisCodeList	memo		memo sample value \n"
				"StrengthUnit	string	100	string sample value \n"
				"SampleExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \n");
		break;

		case 399: // Medication list
			// (c.haag 2007-02-12 14:06) - PLID 24561 - We now require a memo
			// field for the medication name
			// (d.thompson 2008-12-01) - PLID 32174 - DefaultPills is now DefaultQuantity, Description is now PatientInstructions
			return _T("; Field definition file for table: ADORecordset \n"
				"Name	string	255	string sample value \n"
				"PatientInstructions	memo		memo sample data \n"
				"DefaultRefills	string	50	string sample value \n"
				"DefaultQuantity	string	50	string sample value \n"
				"Unit	string	255	string sample value");
		break;

		case 614:
			return _T(" ; Field definition file for table: ADORecordset \r\n"
				" Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				" RecordType	string	22	string sample value \r\n"
				" CurrentStatus	short		1 \r\n"
				" EmployeeID	long		1 \r\n"
				" AptTypeID	long		1 \r\n"
				" CoordFirst	string	50	string sample value \r\n"
				" CoordMiddle	string	50	string sample value \r\n"
				" CoordLast	string	50	string sample value \r\n"
				" ApptID	long		1 \r\n"
				" ShowState	long		1 \r\n"
				" AptCategory	long		1 \r\n"
				" ReferralID	long		1 \r\n"
				" PrimaryReferralSourceName	string	50	string sample value \r\n"
				" PatFirst	string	50	string sample value \r\n"
				" PatMiddle	string	50	string sample value \r\n"
				" PatLast	string	50	string sample value \r\n"
				" PatAdd1	string	75	string sample value \r\n"
				" PatAdd2	string	75	string sample value \r\n"
				" PatCity	string	50	string sample value \r\n"
				" PatState	string	20	string sample value \r\n"
				" PatZip	string	20	string sample value \r\n"
				" ProvID	long		1 \r\n"
				" LocID	long		1 \r\n"
				" LocName	string	255	string sample value \r\n"
				" ProvFirst	string	50	string sample value \r\n"
				" ProvMiddle	string	50	string sample value \r\n"
				" ProvLast	string	50	string sample value \r\n"
				" InputUserID	long		1 \r\n"
				" InputFirst	string	50	string sample value \r\n"
				" InputLast	string	50	string sample value \r\n"
				" ApptStatus	long		1 \r\n"
				" SurgAptType	long		1 \r\n"
				" ApptPurposeIDString	string	255	string sample value \r\n");
		break;

		case 584: // EMR Summary Screen Report
			// (c.haag 2007-04-05 10:00) - PLID 25482 - We now require a memo
			// field for the allergy name. For completeness, the whole report
			// is included here now
			// (j.jones 2008-07-02 10:23) - PLID 30580 - completely gutted and rebuilt this report
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ID	long		1 \r\n"
				"LeftText	memo		memo sample data \r\n"
				"RightText	memo		memo sample data \r\n"
				"IsLeftHeader	boolean		TRUE \r\n"
				"IsRightHeader	boolean		TRUE \r\n"
				"IsDivider	boolean		TRUE ");
			break;

		case 616: // (c.haag 2007-11-16 15:30) - PLID 28103 - Active / Completed Returns report
			// (c.haag 2008-01-08 09:36) - PLID 28103 - Added Completed flag
			// (c.haag 2008-03-07 14:45) - PLID 29170 - Version 3 - Added ReturnedFor
			// (j.jones 2008-05-27 10:02) - PLID 30167 - added Supplier fields, including AccountName
			//TES 1/27/2009 - PLID 32824 - Added VendorConfirmed, ConfirmationDate, and ConfirmationNumber
			return _T("; Field definition file for table: ADORecordset \r\n"
					"ReturnGroupID	long		1 \r\n"
					"Description	string	255	string sample value \r\n"
					"GroupNote	memo		string sample value \r\n"
					"LocationName	string	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"ReturnDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Method	string	255	string sample value \r\n"
					"TrackingNumber	string	255	string sample value \r\n"
					"Company	string	50	string sample value \r\n"
					"SupAddr1	string	75	string sample value \r\n"
					"SupAddr2	string	75	string sample value \r\n"
					"SupCity	string	50	string sample value \r\n"
					"SupState	string	20	string sample value \r\n"
					"SupZip	string	20	string sample value \r\n"
					"CCNumber	string	50	string sample value \r\n"
					"CompanyID	string	50	string sample value \r\n"
					"SupFax	string	20	string sample value \r\n"
					"WorkPhone	string	20	string sample value \r\n"
					"AccountName	string	255	string sample value \r\n"
					"ReturnItemID	long		1 \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"Quantity	number		1.00 \r\n"
					"Reason	string	255	string sample value \r\n"
					"CreditAmount	currency		1.00 \r\n"
					"Completed	boolean		TRUE \r\n"
					"DateCompleted	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AmountReceived	currency		1.00 \r\n"
					"ItemNote	memo		string sample value \r\n"
					"ProductID	long		1 \r\n"
					"ReturnedFor	long		1 \r\n"
					"VendorConfirmed	boolean		TRUE \r\n"
					"ConfirmationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ConfirmationNumber	string	50	string sample value \r\n");

		// (c.haag 2008-03-07 12:56) - PLID 29170 - This report has been deprecated
		/*case 617: // (c.haag 2007-11-16 15:32) - PLID 28120 - Allergan Product Transfer Summary Sheet
			// (c.haag 2008-01-08 09:36) - PLID 28103 - Added Completed flag
			//TES 2/19/2008 - PLID 28954 - Added AccountName and ReturnedFor.
			//TES 2/19/2008 - PLID 28953 - Added AccountNumber, City, and State
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ReturnGroupID	long		1 \r\n"
				"Description	string	255	string sample value \r\n"
				"GroupNote	memo		string sample value \r\n"
				"LocationName	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Company	string	50	string sample value \r\n"
				"ReturnDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Method	string	255	string sample value \r\n"
				"TrackingNumber	string	255	string sample value \r\n"
				"AccountName	string	255	string sample value \r\n"
				"AccountNumber	string	50	string sample value \r\n"
				"City	string	50	string sample value \r\n"
				"State	string	50	string sample value \r\n"
				"ReturnItemID	long		1 \r\n"
				"ProductName	string	255	string sample value \r\n"
				"SerialNum	string	255	string sample value \r\n"
				"Quantity	number		1.00 \r\n"
				"Reason	string	255	string sample value \r\n"
				"CreditAmount	currency		1.00 \r\n"
				"CompletedDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"AmountReceived	currency		1.00 \r\n"
				"ItemNote	memo		string sample value \r\n"
				"ProductID	long		1 \r\n"
				"ReturnedFor	long		1 \r\n");*/

		case 618: // (c.haag 2007-12-03 15:05) - PLID 28204 - Inventory overview
			// (c.haag 2008-02-06 16:43) - PLID 28642 - Added AllocationDetailNotes field
			// (j.jones 2008-03-05 17:07) - PLID 29202 - added ProviderID and ProvName
			//TES 9/3/2008 - PLID 29779 - Added DateOrdered
		case 620:	//TES 6/25/2008 - PLID 30506 - Consignment List (uses the same query as Inventory Overview, thus it should
					// use the same .ttx.
					// (j.jones 2009-03-18 15:56) - PLID 33580 - added Consignment Paid fields
			return _T("; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductName	string	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProductItemStatus	long		1 \r\n"
					"Category	long		1 \r\n"
					"ProductType	string	255	string sample value \r\n"
					"DateReceived	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllocationDetailNotes	string	255	string sample value \r\n"
					"StatusType	long		1 \r\n"
					"Status	string	255	string sample value \r\n"
					"PatID	long		1 \r\n"
					"PatientName	string	255	string sample value \r\n"
					"DateUsed	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProvID	long		1 \r\n"
					"ProvName	string	255	string sample value \r\n"
					"DateOrdered	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ConsignmentPaid	boolean		TRUE\r\n"
					"ConsignmentPaidDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ConsignmentPaidAmount	currency		1.00 \r\n"
					"ConsignmentInvoiceNum	string	50	string sample value \r\n");

		case 619: // (c.haag 2007-11-21 08:30) - PLID 28084 - Allocation List
			// (c.haag 2008-02-06 17:15) - PLID 28084 - Adding detail status fields
			// (j.jones 2008-03-06 15:21) - PLID 29201 - added ProvName
			return _T("; Field definition file for table: ADORecordset \r\n"
					"AllocationID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"ApptID	long		1 \r\n"
					"AllocationNotes	memo		memo sample data \r\n"
					"AllocationStatus	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllocationDetailID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductItemID	long		1 \r\n"
					"Quantity	number		1.00 \r\n"
					"AllocationDetailStatus	long		1 \r\n"
					"AllocationDetailNotes	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UserDefinedID	long		1 \r\n"
					"FullName	string	255	string sample value \r\n"
					"PersonLocation	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ApptType	string	255	string sample value \r\n"
					"ApptPurpose	memo		string sample value \r\n"
					"StatusType	long	1 \r\n"
					"StatusText	string	255	string sample value \r\n"
					"AllocationStatusDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DetailStatusType	long	1 \r\n"
					"DetailStatusText	string	255	string sample value \r\n"
					"ProvName	string	255	string sample value \r\n"
					);

		//TES 6/25/2008 - PLID 30506 - Moved up to go with the Inventory Overview, since they use the same query, they
		// need to use the same .ttx, otherwise somebody may, as Chris did, update one but not the other.
		/*case 620: // (c.haag 2007-12-14 17:01) - PLID 28357 - Consignment List
			// (j.jones 2008-03-05 17:07) - PLID 29202 - added ProviderID and ProvName
			return _T("; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"ProductName	string	255	string sample value \r\n"
					"LocID	long		1 \r\n"
					"LocName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProductItemStatus	long		1 \r\n"
					"Category	long		1 \r\n"
					"ProductType	string	255	string sample value \r\n"
					"DateReceived	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StatusType	long		1 \r\n"
					"Status	string	255	string sample value \r\n"
					"PatID	long		1 \r\n"
					"PatientName	string	255	string sample value \r\n"
					"DateUsed	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ProvID	long		1 \r\n"
					"ProvName	string	255	string sample value \r\n");*/

		case 621: // (c.haag 2007-12-14 17:01) - PLID 28357 - Consignment History by Date
			// (c.haag 2007-12-26 12:57) - PLID 28357 - Renamed "Name" to "ProductName"
			// (j.jones 2009-03-18 15:56) - PLID 33580 - added Consignment Paid fields
			return _T("; Field definition file for table: ADORecordset \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TransferAmount	currency		1.00 \r\n"
					"Username	string	255	string sample value \r\n"
					"StatusText	string	255	string sample value \r\n"
					"Notes	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"SerialNum	string	255	string sample value \r\n"
					"ExpDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"Category	string	255	string sample value \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProductItemID	long		1 \r\n"
					"ProductID	long		1 \r\n"
					"CategoryID	long		1 \r\n"
					"LocID	long		1 \r\n"
					"Paid	boolean		TRUE\r\n"
					"PaidDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PaidAmount	currency		1.00 \r\n"
					"InvoiceNum	string	50	string sample value \r\n");

		case 610 : //Tracking Conversion Summary Report
			// (j.gruber 2008-02-18 17:22) - PLID 28365 - made it verify from here
			switch (nSubReport) {
				case 1: //there is only 1 subreport
					return _Q("; Field definition file for table: ADORecordset\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Status	long		1\r\n"
					"Name	string	50	string sample value\r\n"
					"ProcID	long		1\r\n"
					"ProcName	string	100	string sample value\r\n"
					"StepTemplateName	string	50	string sample value\r\n"
					"StepTemplateID	long		1\r\n"
					"LadderTemplateID	long		1\r\n"
					"LadderTemplateName	string	50	string sample value\r\n"
					"LastStepTemplateID	long		1\r\n"
					"StepOrder	long		1\r\n"
					"ProvID	long		1\r\n");
				break;

				default:
					return _T("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1\r\n"
					"LadderTemplateID	long		1\r\n"
					"BeginStepTemplateID	long		1\r\n"
					"EndStepTemplateID	long		1\r\n"
					"StepOrder	long		1\r\n"
					"ConvName	string	255	string sample value\r\n"
					"BeginStepName	string	50	string sample value\r\n"
					"EndStepName	string	50	string sample value\r\n"
					"TotalBeginStepActive	long		1\r\n"
					"TotalBeginStepCompleted	long		1\r\n"
					"TotalEndStepActive	long		1\r\n"
					"TotalEndStepCompleted	long		1\r\n"
					"TotalBeginStepActiveProv	long		1\r\n"
					"TotalBeginStepCompletedProv	long		1\r\n"
					"TotalEndStepActiveProv	long		1\r\n"
					"TotalEndStepCompletedProv	long		1\r\n"
					"BeginStepActiveDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"BeginStepCompleteDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EndStepActiveDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EndStepCompleteDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"ProcID	long		1\r\n"
					"ProcName	string	100	string sample value\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"LadderID	long		1\r\n"
					"LadderTemplateName	string	50	string sample value\r\n"
					"ProvID	long		1\r\n"
					"ProvFirst	string	50	string sample value\r\n"
					"ProvLast	string	50	string sample value\r\n"
					"ProvTitle	string	50	string sample value\r\n");
				break;
			}
		break;

		case 622 : //Tracking Conversion Summary Report by Pat Coord
			// (j.gruber 2008-02-19 11:29) - PLID 28367 - made this verify from here
			switch (nSubReport) {
				case 1: //there is only 1 subreport
					return _Q("; Field definition file for table: ADORecordset\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"Status	long		1\r\n"
					"Name	string	50	string sample value\r\n"
					"ProcID	long		1\r\n"
					"ProcName	string	100	string sample value\r\n"
					"StepTemplateName	string	50	string sample value\r\n"
					"StepTemplateID	long		1\r\n"
					"LadderTemplateID	long		1\r\n"
					"LadderTemplateName	string	50	string sample value\r\n"
					"LastStepTemplateID	long		1\r\n"
					"StepOrder	long		1\r\n"
					"ProvID	long		1\r\n"
					"EmpID	long		1\r\n");
				break;

				default:
					return _T("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1\r\n"
					"LadderTemplateID	long		1\r\n"
					"BeginStepTemplateID	long		1\r\n"
					"EndStepTemplateID	long		1\r\n"
					"StepOrder	long		1\r\n"
					"ConvName	string	255	string sample value\r\n"
					"BeginStepName	string	50	string sample value\r\n"
					"EndStepName	string	50	string sample value\r\n"
					"TotalBeginStepActive	long		1\r\n"
					"TotalBeginStepCompleted	long		1\r\n"
					"TotalEndStepActive	long		1\r\n"
					"TotalEndStepCompleted	long		1\r\n"
					"TotalBeginStepActiveProv	long		1\r\n"
					"TotalBeginStepCompletedProv	long		1\r\n"
					"TotalEndStepActiveProv	long		1\r\n"
					"TotalEndStepCompletedProv	long		1\r\n"
					"TotalBeginStepActiveProvPatCoord	long		1\r\n"
					"TotalBeginStepCompletedProvPatCoord	long		1\r\n"
					"TotalEndStepActiveProvPatCoord	long		1\r\n"
					"TotalEndStepCompletedProvPatCoord	long		1\r\n"
					"BeginStepActiveDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"BeginStepCompleteDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EndStepActiveDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EndStepCompleteDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"ProcID	long		1\r\n"
					"ProcName	string	100	string sample value\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"LadderID	long		1\r\n"
					"LadderTemplateName	string	50	string sample value\r\n"
					"ProvID	long		1\r\n"
					"ProvFirst	string	50	string sample value\r\n"
					"ProvLast	string	50	string sample value\r\n"
					"ProvTitle	string	50	string sample value\r\n"
					"EmployeeID	long		1\r\n"
					"EmpFirst	string	50	string sample value\r\n"
					"EmpLast	string	50	string sample value\r\n");
				break;
			}
		break;

		// (c.haag 2011-03-28) - PLID 42403 - Daily User Activity, Daily User Activity - Detailed
		// (j.jones 2013-05-08 11:10) - PLID 55066 - added Calls, Alberta Claim Number, and Referring Physician NPI
		// (r.farnworth 2013-07-25 10:38) - PLID 56745 - Added Check # and Credit Card Authorization 
		// (s.dhole 2013-08-30 14:40) - PLID 57762 Added PreTaxAndDiscountAmt , TotalDiscountAmt
		// (j.gruber 2014-03-27 14:46) - PLID 61448 - updated for ICD-10
		case 624:
		case 660:
			return _T("; Field definition file for table: ADORecordset\r\n"
				"FullName	string	255	string sample value\r\n"
				"UserDefinedID	long		1\r\n"
				"PatID	long		1\r\n"
				"BDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"DocName	string	255	string sample value\r\n"
				"ProvID	long		1\r\n"
				"ADJUSTMENT	currency		1.00\r\n"
				"BILL	currency		1.00\r\n"
				"CASH	currency		1.00\r\n"
				"CHECKAMT	currency		1.00\r\n"
				"CREDIT	currency		1.00\r\n"
				"PREPAYMENT	currency		1.00\r\n"
				"RefundCash	currency		1.00\r\n"
				"RefundCheck	currency		1.00\r\n"
				"RefundCredit	currency		1.00\r\n"
				"LocID	long		1\r\n"
				"Location	string	255	string sample value\r\n"
				"InputName	string	255	string sample value\r\n"
				"Description	string	255	string sample value\r\n"
				"FinType	string	255	string sample value\r\n"
				"Amount	currency		1.00\r\n"
				"Code	string	255	string sample value\r\n"
				"CPTModifier	string	255	string sample value\r\n"
				"CPTModifier2	string	255	string sample value\r\n"
				"CPTModifier3	string	255	string sample value\r\n"
				"CPTModifier4	string	255	string sample value\r\n"
				"PlaceOfServiceID	long		1\r\n"
				"PlaceOfService	string	255	string sample value\r\n"
				"POSCode	string	255	string sample value\r\n"
				"PayCategory	string	255	string sample value\r\n"
				"InsResp	long		1\r\n"
				"CardName	string	255	string sample value\r\n"
				"TotalTax1	currency		1.00\r\n"
				"TotalTax2	currency		1.00\r\n"
				"IsProduct	long		1\r\n"
				"LineItemID	long		1\r\n"
				"SuperBillID	long		1\r\n"
				"PrimaryInsCo	string	255	string sample value\r\n"
				"SecondaryInsCo	string	255	string sample value\r\n"
				"Quantity	number		1.00\r\n"				
				"ICD9Code1	string	50	string sample value \r\n"
				"ICD9Code2	string	50	string sample value \r\n"
				"ICD9Code3	string	50	string sample value \r\n"
				"ICD9Code4	string	50	string sample value \r\n"
				"ICD9Code5	string	50	string sample value \r\n"
				"ICD9Code6	string	50	string sample value \r\n"
				"ICD9Code7	string	50	string sample value \r\n"
				"ICD9Code8	string	50	string sample value \r\n"
				"ICD9Code9	string	50	string sample value \r\n"
				"ICD9Code10	string	50	string sample value \r\n"				
				"ICD10Code1	string	50	string sample value \r\n"
				"ICD10Code2	string	50	string sample value \r\n"
				"ICD10Code3	string	50	string sample value \r\n"
				"ICD10Code4	string	50	string sample value \r\n"
				"ICD10Code5	string	50	string sample value \r\n"
				"ICD10Code6	string	50	string sample value \r\n"
				"ICD10Code7	string	50	string sample value \r\n"
				"ICD10Code8	string	50	string sample value \r\n"
				"ICD10Code9	string	50	string sample value \r\n"
				"ICD10Code10	string	50	string sample value \r\n"
				"WhichCodes9	string	255	string sample value \r\n"
				"WhichCodes10	string	255	string sample value \r\n"
				"WhichCodesBoth	string	255	string sample value \r\n"
				"Calls	number		1.00\r\n"
				"AlbertaClaimNumber	string	50	string sample value\r\n"
				"ReferringPhysicianNPI	string	50	string sample value\r\n"
				"CheckNo	string	50	string sample value\r\n"
				"CCAuthNo	string	50	string sample value\r\n"
				"PreTaxAndDiscountAmt	currency		1.00\r\n"
				"TotalDiscountAmt	currency		1.00\r\n"
				);
			break;

		case 628: //Appointments Without Allocations - TES 6/18/2008 - PLID 30395
			return _T("; Field definition file for table: ADORecordset \r\n"
				"StartTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"EndTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"First	string	50	string sample value\r\n"
				"Middle	string	50	string sample value\r\n"
				"Last	string	50	string sample value\r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"LocID	long		1\r\n"
				"ArrivalTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Notes	memo	4000	string sample value\r\n"
				"Type	string	50	string sample value\r\n"
				"Resource	memo	400	string sample value\r\n"
				"SetID	long		1\r\n"
				"HomePhone	string	20	string sample value\r\n"
				"Purpose	memo	400	string sample value\r\n"
				"ID	long		1\r\n"
				"ResourceID	long		1\r\n"
				"PatName	string	153	string sample value\r\n"
				"ApptID	long		1\r\n"
				"PatientID	long		1\r\n"
				"PatID	long		1\r\n"
				"PrivHome	boolean		TRUE\r\n"
				"PrivWork	boolean		TRUE\r\n");
			break;

			// v.arth 05/19/09 - PLID 28569 - CCHIT Auditing Compliance
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
			// (a.walling 2010-03-23 10:54) - PLID 37043 - Needed to move those two fields to the end or the report would crash
		case 632:	//TES 7/11/2008 - PLID 30886 - Audit Trail - AR Issues 
			return _T("; Field definition file for table: ADORecordset \n"
				"UserName	string	50	string sample value \n"
				"ChangedAtLocationName	string	255	string sample value \n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"PriorityDesc	string	6	string sample value \n"
				"ID	long		1 \n"
				"AuditID	long		1 \n"
				"RecordID	long		1 \n"
				"OldValue	memo		memo sample data \n"
				"NewValue	memo		memo sample data \n"
				"Priority	long		1 \n"
				"Type	long		1 \n"
				"PersonName	string	255	string sample value \n"
				"ItemID	long		1 \n"
				"AuditDetailID	long		1 \n"
				"IPAddress	string	15	0.0.0.0	\n"
				"Item	string	265	string sample value \n"
				"ItemType	memo		memo sample data \n"				
				"InternalPatientID	long		1 \n"
				"PatientID	long		1 \n");
				break;

		case 651: //Problem List by Patient - (e.lally 2008-07-24) PLID 30732
			// (j.jones 2014-03-26 14:04) - PLID 61560 - Added ICD-10 support, which also removed and
			// renamed the previous diagnosis fields. I also split this ttx out from the next block
			// (report 652) because they are completely different report files that just happen to
			// have similar, but not the same, queries.
			return _T("; Field definition file for table: ADORecordset\r\n"
				"PatID	long		1\r\n"
				"PatientName	string	153	string sample value\r\n"
				"EMRName	string	255	string sample value\r\n"
				"EmrID	long		1\r\n"
				"EMRDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"EMNName	string	255	string sample value\r\n"
				"EmnID	long		1\r\n"
				"EMNDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TopicName	string	200	string sample value\r\n"
				"TopicID	long		1\r\n"
				"ProblemItem	memo	2000	string sample value\r\n"
				"ProblemDescription	string	255	string sample value\r\n"
				"EnteredDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"OnsetDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Status	string	255	string sample value\r\n"
				"ModifiedDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"UserModifiedBy	string	50	string sample value\r\n"
				"ICD9Code	string	50	string sample value\r\n"
				"ICD10Code	string	50	string sample value\r\n"
				"ICD9CodeDesc	string	255	string sample value\r\n"
				"ICD10CodeDesc	string	255	string sample value\r\n"
				"Chronicity	string	255	string sample value\r\n"
				"ProblemID	long		1\r\n"
				"RegardingTypeName	string	255	string sample value");
			break;

		case 652: //Problem List (PP) - (e.lally 2008-07-24) PLID 30732
			// (j.jones 2009-05-26 08:49) - PLID 34151 - added problem diagnosis & chronicity
			// (j.jones 2009-06-02 09:47) - PLID 34441 - added ProblemID and RegardingTypeName
			// (j.jones 2014-03-26 13:55) - PLID 61413 - added ICD-10 support, which also removed and
			// renamed the previous diagnosis fields
			return _T("; Field definition file for table: ADORecordset\r\n"
				"PatID	long		1\r\n"
				"PatientName	string	153	string sample value\r\n"
				"EMRName	string	255	string sample value\r\n"
				"EmrID	long		1\r\n"
				"EMRDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"EMNName	string	255	string sample value\r\n"
				"EmnID	long		1\r\n"
				"EMNDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TopicName	string	200	string sample value\r\n"
				"TopicID	long		1\r\n"
				"ProblemItem	memo	2000	string sample value\r\n"
				"ProblemDescription	string	255	string sample value\r\n"
				"EnteredDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"OnsetDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Status	string	255	string sample value\r\n"
				"ModifiedDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"UserModifiedBy	string	50	string sample value\r\n"
				"ICD9Code	string	50	string sample value\r\n"
				"ICD10Code	string	50	string sample value\r\n"
				"ICD9CodeDesc	string	255	string sample value\r\n"
				"ICD10CodeDesc	string	255	string sample value\r\n"
				"Chronicity	string	255	string sample value\r\n"
				"ProblemID	long		1\r\n"
				"RegardingTypeName	string	255	string sample value");
			break;

		case 656: // (c.haag 2009-01-26 15:41) - PLID 32188 - Advertising Cost Analysis
			return _T("; Field definition file for table: ADORecordset\r\n"
				"LadderID	long		1\r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"PatID	long		1\r\n"
				"LocID	long		1\r\n"
				"ProcedureID	long		1\r\n"
				"ProcedureName	string	255	string sample value\r\n"
				"HasConsult	long		1\r\n"
				"HasSurgery	long		1\r\n"
				"ReferralName	string	255	string sample value\r\n"
				"ReferralID	long		1\r\n"
				"ReferralCosts	currency		1.00\r\n");
			break;

		case 657: // (c.haag 2009-02-17 17:34) - PLID 32189 - Media Cost Analysis
			return _T("; Field definition file for table: ADORecordset \n"
				"LadderID	long		1 \n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
				"PatID	long		1 \n"
				"LocID	long		1 \n"
				"ProcID	long		1 \n"
				"ProcedureName	string	100	string sample value \n"
				"HasConsult	long		1 \n"
				"HasSurgery	long		1 \n"
				"ReferralName	string	50	string sample value \n"
				"ReferralID	long		1 \n"
				"ReferralCosts	currency		1.00 \n"
				"IsMedia	long		1 \n"
				"IsNonMedia	long		1 \n");
			break;
		// (j.gruber 2009-05-29 16:35) - PLID 34401 - patietn wellness reports
		case 665:
			//(e.lally 2010-09-10) PLID 40488 - Added PatID
			return _T("; Field definition file for table: ADORecordset\r\n"
				"Guideline	memo		1\r\n"
				"AlertName	string	255	string sample value\r\n"
				"PatName	string	255	string sample value\r\n"
				"PatID	long	1 \r\n");
		break;
				
		case 666:
			//(e.lally 2010-09-10) PLID 40488 - Added PatID
			return _T("; Field definition file for table: ADORecordset\r\n"
				"Reference	memo		1\r\n"
				"AlertName	string	255	string sample value\r\n"
				"PatName	string	255	string sample value\r\n"
				"PatID	long	1 \r\n");

	    break;

		//TES 6/11/2009 - PLID 34607 - Added for CCHIT
			// (a.walling 2010-01-22 16:47) - PLID 37043 - Including InternalPatientID and PatientID
		case 668: 		//Historical Demographic Information
				strReturn = "; Field definition file for table: ADORecordset \n"
					"UserName	string	50	string sample value \n"
					"ChangedAtLocationName	string	255	string sample value \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"PriorityDesc	string	6	string sample value \n"
					"ID	long		1 \n"
					"AuditID	long		1 \n"
					"RecordID	long		1 \n"
					"OldValue	memo		memo sample data \n"
					"NewValue	memo		memo sample data \n"
					"Priority	long		1 \n"
					"Type	long		1 \n"
					"PersonName	string	255	string sample value \n"
					"ItemID	long		1 \n"
					"Priority	long		1 \n"
					"AuditDetailID	long		1 \n"
					"InternalPatientID	long		1 \n"
					"PatientID	long		1 \n"
					"IPAddress	string	15	0.0.0.0	\n"
					"Item	string	255	string sample value \n"
					"ItemType	memo		memo sample data \n"
					"";
			break;

		// (j.jones 2009-07-10 10:29) - PLID 34843 - created this report
		case 671:	//Inventory Reconciliation Adjustments (PP)
			strReturn = "; Field definition file for table: ADORecordset\n"
				"ProductID	long		1\n"
				"ProductName	string	255		string sample value\n"
				"CalculatedAmt	number		1.00\n"
				"UserCount	number		1.00\n"
				"WillAdjust	boolean		TRUE\n"
				"CountAvailable	number		1.00";
			break;

		case 429:  // Template Listing
			// (z.manning 2009-07-14 16:58) - PLID 34476 - Added
			strReturn = "; Field definition file for table: ADORecordset\n"
				"Name	string	50	string sample value\n"
				"TemplateID	long		1\n"
				"StartDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"EndDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"Priority	long		1\n"
				"ApparentDescription	memo		memo sample data \n";
			break;

		case 672: { // (a.walling 2009-10-14 10:12) - PLID 23318 - Room History
			strReturn = "; Field definition file for table: ADORecordset\n"
				"RoomID	long		1\n"
				"RoomName	string	255	string sample value\n"
				"PatID	long		1\n"
				"UserDefinedID	long		1\n"
				"Prefix	string	50	string sample value\n"
				"First	string	50	string sample value\n"
				"Middle	string	50	string sample value\n"
				"Last	string	50	string sample value\n"
				"NickName	string	30	string sample value\n"
				"Title	string	50	string sample value\n"
				"AppointmentID	long		1\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\n"
				"StartTime	datetime		Jan 5, 1994 1:23:45 PM\n"
				"EndTime	datetime		Jan 5, 1994 1:23:45 PM\n"
				"ArrivalTime	datetime		Jan 5, 1994 1:23:45 PM\n"
				"TypeName	string	50	string sample value\n"
				"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM\n"
				"CreatedLogin	string	100	string sample value\n"
				"NoShowDate	datetime		Jan 5, 1994 1:23:45 PM\n"
				"CancelledDate	datetime		Jan 5, 1994 1:23:45 PM\n"
				"Purposes	memo		memo sample data\n"
				"Resources	memo		memo sample data\n"
				"LocID	long		1\n"
				"Location	string	255	string sample value\n"
				"RoomAppointmentID	long		1\n"
				"CheckInTime	datetime		Jan 5, 1994 1:23:45 PM\n"
				"UpdateTime	datetime		Jan 5, 1994 1:23:45 PM\n"
				"UpdatedBy	string	50	string sample value\n"
				"UpdateStatus	string	255	string sample value\n"
				"SecondsAtThisStatus	long		1\n"
				"SecondsInRoomInstance	long		1\n"
				"TimesCheckedIntoRoom	long		1\n";
			break;
		}

		case 679: {	// (j.jones 2009-09-22 09:35) - PLID 25232 - Room Manager (PP)

			// (j.jones 2009-09-21 16:05) - PLID 25232 - created
			
			switch (nSubReport) {

			case 0: {	//Main Report 

				//the main report is the room list
				return "; Field definition file for table: ADORecordset \n"
						"PatID	long		1 \n"
						"UserDefinedID	long		1 \n"
						"LocID	long		1 \n"
						"RoomName	string	255	string sample value \n"
						"PatientName	string	255	string sample value \n"
						"ApptStartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
						"ArrivalTime	datetime		Jan 5, 1994 1:23:45 PM \n"
						"CheckInTime	datetime		Jan 5, 1994 1:23:45 PM \n"
						"TimeLastSeenByPerson	datetime		Jan 5, 1994 1:23:45 PM \n"
						"WaitingMinutes	datetime		Jan 5, 1994 1:23:45 PM \n"
						"Status	string	255	string sample value \n"
						"WithPerson	boolean		TRUE \n"
						"LastUpdatedBy	string	50	string sample value \n"
						"ApptType	string	50	string sample value \n"
						"ApptPurpose	memo	4000	string sample value \n"
						"ApptTypePurpose	memo	4000	string sample value";
			}
			break;

			case 1:  

				switch (nSubReportID) {

					case 0: {
						//waiting area subreport
						return "; Field definition file for table: ADORecordset \n"
								"PatID	long		1 \n"
								"UserDefinedID	long		1 \n"
								"LocID	long		1 \n"
								"PatientName	string	255	string sample value \n"
								"ApptStartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
								"TimeMarkedIn	datetime		Jan 5, 1994 1:23:45 PM \n"
								"CheckedInBy	string	50	string sample value \n"
								"TimeLastSeenByPerson	datetime		Jan 5, 1994 1:23:45 PM \n"
								"WaitingMinutes	datetime		Jan 5, 1994 1:23:45 PM \n"
								"ApptType	string	50	string sample value \n"
								"ApptPurpose	memo	4000	string sample value \n"
								"ApptTypePurpose	memo	4000	string sample value";
					}
					break;

					case 1: {
						//checkout list subreport
						return "; Field definition file for table: ADORecordset \n"
								"PatID	long		1 \n"
								"UserDefinedID	long		1 \n"
								"LocID	long		1 \n"
								"PatientName	string	255	string sample value \n"
								"ApptStartTime	datetime		Jan 5, 1994 1:23:45 PM \n"
								"TimeMarkedIn	datetime		Jan 5, 1994 1:23:45 PM \n"
								"TimeLeftRoom	datetime		Jan 5, 1994 1:23:45 PM \n"
								"WaitingMinutes	datetime		Jan 5, 1994 1:23:45 PM \n"
								"LastUpdatedBy	string	50	string sample value \n"
								"ApptType	string	50	string sample value \n"
								"ApptPurpose	memo	4000	string sample value \n"
								"ApptTypePurpose	memo	4000	string sample value";
					}
					break;

					default:
						return "";
						break;
				}
				break;

				default:
					return "";
					break;
			}
		}
		break;

		case 683:	//Room Manager History By Type/Purpose

			// (j.jones 2009-09-30 15:38) - PLID 30180 - created
			//(s.dhole 3/19/2015 5:24 PM ) - PLID  60229  rename fild name  AppointmentID to ApptID
			return "; Field definition file for table: ADORecordset \r\n"
					"RoomID	long		1 \r\n"
					"RoomName	string	255	string sample value \r\n"
					"PatID	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatName	string	153	string sample value \r\n"
					"ApptID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"ArrivalTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AptTypeID	long		1 \r\n"
					"TypeName	string	50	string sample value \r\n"
					"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"CreatedLogin	string	100	string sample value \r\n"
					"PurposeID	long		1 \r\n"
					"PurposeName	string	100	string sample value \r\n"
					"Purposes	memo	1000	string sample value \r\n"
					"Resources	memo	1000	string sample value \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"RoomAppointmentID	long		1 \r\n"
					"CheckInTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UpdateTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"UpdatedBy	string	50	string sample value \r\n"
					"UpdateStatus	string	255	string sample value \r\n"
					"IsInCheckoutList	boolean		TRUE \r\n"
					"SecondsAtThisStatus	long		1 \r\n"
					"SecondsInCheckoutListAtThisStatus	long		1 \r\n"
					"TotalSecondsInCheckoutList	long		1 \r\n"
					"SecondsInRoomInstance	long		1 \r\n"
					"SecondsInAllRooms	long		1 \r\n"
					"FirstTimeInARoom	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TimeMarkedIn	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"SecondsInWaitingArea	long		1 \r\n"
					"";
			break;

		case 692: // (c.haag 2010-01-04 12:29) - PLID 36658 - Patient Allergies
			return "; Field definition file for table: ADORecordset \r\n"
					"PatID	long		1 \r\n"
					"PatName	string	255	string sample value \r\n"
					"AllergyName	string	255	string sample value \r\n"
					"Description	string	255	string sample value \r\n"
					"FromNewCrop	boolean		TRUE \r\n"
					"Discontinued	boolean		TRUE \r\n"
					"AllergyEnteredDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"AllergyID	long		1 \r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"LocID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"";
			break;

		case 720:
			// (j.gruber 2011-11-16 15:19) - PLID 45689 - Meaningful Use Measure
			// (a.wilson 2012-07-12 10:47) - PLID 51507 - Length of fields increased.
			return "; Field definition file for table: ADORecordset\r\n"
			"PatientID	long		1\r\n"
			"UserDefinedID	long		1\r\n"
			"First	string	50	string sample value\r\n"
			"Middle	string	50	string sample value\r\n"
			"Last	string	50	string sample value\r\n"
			"Address1	string	150	string sample value\r\n"
			"Address2	string	150	string sample value\r\n"
			"City	string	50	string sample value\r\n"
			"State	string	20	string sample value\r\n"
			"Zip	string	50	string sample value\r\n"
			"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
			"HomePhone	string	20	string sample value\r\n"
			"WorkPhone	string	20	string sample value\r\n"
			"ItemDescriptionLine	string	255	string sample value\r\n"
			"ItemDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
			"ItemDescription	string	255	string sample value\r\n"
			"ItemProvider	memo\r\n"
			"ItemSecProvider	memo\r\n"
			"ItemLocation	string	255	string sample value\r\n"
			"MiscDesc	string	255	string sample value\r\n"
			"ItemMisc	string	255	string sample value\r\n"
			"MiscDesc2	string	255	string sample value\r\n"
			"ItemMisc2	string	255	string sample value\r\n"
			"MiscDesc3	string	255	string sample value\r\n"
			"ItemMisc3	string	255	string sample value\r\n"
			"MiscDesc4	string	255	string sample value\r\n"
			"ItemMisc4	string	255	string sample value\r\n"
			"HasSecondary	long\r\n"
			"Type	long\r\n"
			"NumeratorDesc	memo\r\n"
			"DenominatorDesc	memo\r\n"
			"ReportDesc	memo\r\n";
			
		break;


		case 603:	// Financial Activity - Today's Service Date
			// (d.thompson 2013-06-13) - PLID 56360 - While adding a new field, I noticed that report 603 was not in here but 
			//	really should be.
		case 719: // (j.dinatale 2011-11-08 11:11) - PLID 45658 - Financial Activity - Daily for Logged in user
		case 153: // (c.haag 2010-01-20 11:09) - PLID 36643 - Financial Activity - Daily
			//(e.lally 2011-11-10) PLID 45425 - Added ClaimProviderID, ClaimProvider
			// (j.gruber 2014-03-10 12:38) - PLID 58526 - added fintype and chargeamtbeforediscount
			// (r.gonet 2015-05-05 14:38) - PLID 65903 - Added RefundGC
			return "; Field definition file for table: ADORecordset \n"
				"FullName	string	153	string sample value \n"
				"UserDefinedID	long		1 \n"
				"PatID	long		1 \n"
				"BDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"DocName	string	153	string sample value \n"
				"ProvID	long		1 \n"
				"ADJUSTMENT	currency		1.00 \n"
				"BILL	currency		1.00 \n"
				"CASH	currency		1.00 \n"
				"CHECK	currency		1.00 \n"
				"CREDIT	currency		1.00 \n"
				"PrePayment	currency		1.00 \n"
				"APPPREPAY	currency		1.00 \n"
				"APPTOPREPAY	currency		1.00 \n"
				"RefundCash	currency		1.00 \n"
				"RefundCheck	currency		1.00 \n"
				"RefundCredit	currency		1.00 \n"
				"RefundGC	currency		1.00\r\n"
				"GCSOLD	currency		1.00 \n"
				"GCREDEEMED	currency		1.00 \n"
				"PaysApplied	currency		1.00 \n"
				"AccountBal	currency		1.00 \n"
				"LocID	long		1 \n"
				"Location	string	255	string sample value \n"
				"SUPPRESS	long		1 \n"
				"InputName	string	50	string sample value \n"
				"TotalDiscount	currency		1.00 \n"
				"PercentDiscount	long		1 \n"
				"DollarDiscount	currency		1.00 \n"
				"DiscountCategoryDescription	string	255	string sample value \n"
				"ClaimProviderID	long		1 \n"
				"ClaimProvider	string	153	string sample value \n"
				"InsResp	long		1 \n"
				"FinType	string	255	string sample value \n"
				"ChargeAmtBeforeDiscount	currency		1.00 \n";				
			break;

		case 297: // (c.haag 2010-01-20 12:50) - PLID 36643 - Financial Activity - Daily (By Charge Code)
			//(e.lally 2011-11-10) PLID 45425 - Added ClaimProviderID, ClaimProvider
			// (r.gonet 2015-05-05 14:38) - PLID 65901 - Added RefundGC
			return "; Field definition file for table: ADORecordset \r\n"
					"FullName	string	255	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DocName	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"ADJUSTMENT	currency		1.00 \r\n"
					"BILL	currency		1.00 \r\n"
					"CASH	currency		1.00 \r\n"
					"CHECK	currency		1.00 \r\n"
					"CREDIT	currency		1.00 \r\n"
					"PrePayment	currency		1.00 \r\n"
					"APPPREPAY	currency		1.00 \r\n"
					"APPTOPREPAY	currency		1.00 \r\n"
					"RefundCash	currency		1.00 \r\n"
					"RefundCheck	currency		1.00 \r\n"
					"RefundCredit	currency		1.00 \r\n"
					"RefundGC	currency		1.00\r\n"
					"GCREDEEMED	currency		1.00 \r\n"
					"GCSOLD	currency		1.00 \r\n"
					"AccountBal	currency		1.00 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"SUPPRESS	long		1 \r\n"
					"Code	string	255	string sample value \r\n"
					"CodeName	string	255	string sample value \r\n"
					"Category	long		1 \r\n"
					"CategoryName	string	255	string sample value \r\n"
					"FinType	string	40	string sample value \r\n"
					"Quantity	number		1.00 \r\n"
					"InputName	string	255	string sample value \r\n"
					"CPTID	long		1 \r\n"
					"BDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"PercentDiscount	long		1 \r\n"
					"DollarDiscount	currency		1.00 \r\n"
					"DiscountCategoryDescription	string	255	string sample value \r\n"
					"ClaimProviderID	long		1 \r\n"
					"ClaimProvider	string	255	string sample value \r\n"
					"";
			break;
		
				  
		case 325: // (c.haag 2010-01-20 12:50) - PLID 36643 - Financial Activity - Daily (By Charge Category)
			// (a.wilson 2011-9-30) PLID 44199 - added the RVU field
			//(e.lally 2011-11-10) PLID 45425 - Added ClaimProviderID, ClaimProvider
			// (r.gonet 2015-05-05 14:38) - PLID 65901 - Added RefundGC
			return "; Field definition file for table: ADORecordset \r\n"
					"FullName	string	255	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatID	long		1 \r\n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"DocName	string	255	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"ADJUSTMENT	currency		1.00 \r\n"
					"BILL	currency		1.00 \r\n"
					"CASH	currency		1.00 \r\n"
					"CHECK	currency		1.00 \r\n"
					"CREDIT	currency		1.00 \r\n"
					"PrePayment	currency		1.00 \r\n"
					"APPPREPAY	currency		1.00 \r\n"
					"APPTOPREPAY	currency		1.00 \r\n"
					"RefundCash	currency		1.00 \r\n"
					"RefundCheck	currency		1.00 \r\n"
					"RefundCredit	currency		1.00 \r\n"
					"RefundGC	currency		1.00\r\n"
					"GCSOLD	currency		1.00 \r\n"
					"GCREDEEMED	currency		1.00 \r\n"
					"AccountBal	currency		1.00 \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"SUPPRESS	long		1 \r\n"
					"Code	string	255	string sample value \r\n"
					"RVU	number		1.0 \r\n"
					"CodeName	string	255	string sample value \r\n"
					"FinType	string	255	string sample value \r\n"
					"Quantity	number		1.00 \r\n"
					"Category	long		1 \r\n"
					"CatName	string	255	string sample value \r\n"
					"BDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PreTaxChargeAmt	currency		1.00 \r\n"
					"TotalTax1	currency		1.00 \r\n"
					"TotalTax2	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"PercentDiscount	long		1 \r\n"
					"DollarDiscount	currency		1.00 \r\n"
					"DiscountCategoryDescription	string	255	string sample value \r\n"
					"ClaimProviderID	long		1 \r\n"
					"ClaimProvider	string	255	string sample value \r\n"
					"";
			break;

		case 663: // 37148 - Patient Graph Data
			return _T("; Field definition file for table: ADORecordset \r\n"
					  "EMNID	long		1 \r\n"
					  "PatID	long		1 \r\n"
					  "LocID	long		1 \r\n"
					  "IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					  "TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					  "PatName	string	153	string sample value \r\n"
					  "DetailName	string	255	string sample value \r\n"
					  "DetailData	number		1.00 \r\n"
					  "EMRInfoMasterID	long		1 \r\n"
					  "DecimalPlaces	long		1 \r\n"
					  );
			break;

		case 693: // 37378 - Patient Graph By Age
			return _T("; Field definition file for table: ADORecordset \r\n"
					  "EMNID	long		1 \r\n"
					  "PatID	long		1 \r\n"
					  "LocID	long		1 \r\n"
					  "IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					  "TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					  "PatName	string	153	string sample value \r\n"
					  "DetailName	string	255	string sample value \r\n"
					  "DetailData	number		1.00 \r\n"
					  "EMRInfoMasterID	long		1 \r\n"
					  "DecimalPlaces	long		1 \r\n"
					  "AgeInMonths	number		1.00 \r\n"
					  "Percentile	long	1	\r\n"
					  "Birthdate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					  );
			break;

		case 689: // (j.gruber 2010-02-22 16:21) - PLID 37467 - needed to create this because added resource memo 
			// (j.gruber 2010-03-10 10:46) - PLID 37690 - added addition demographic fields
			// (j.gruber 2010-05-17 13:31) - PLID 38695 - added name/address changed
			// (j.gruber 2010-08-04 11:18) - PLID 39963 - change copay structure
			// (j.gruber 2011-02-07 13:57) - PLID 41865 - added G1 note and EMN Note and a bunch more fields
			// (j.jones 2011-04-11 11:48) - PLID 43224 - exposed CPTCodeT.Billable
			// (d.singleton 2012-06-14 12:06) - PLID 50991 increase size of emr description
			// (r.farnworth 2013-05-28) PLID 52301 Increased PriInsEmployer, SecInsEmployer, TerInsEmployer Length to 150
			// (r.gonet 03/31/2014) - PLID 61452 - Removed CodeNumber from SubReport 2. Added ICD9Code and ICD10Code to SubReport 2.
			//                                   - Removed CodeNumber and CodeDesc from SubReport 3. Added ICD9Code, ICD10Code, ICD9CodeDesc, and ICD10CodeDesc to SubReport 3.
			switch (nSubReport) {

			case 0:
				return _T("; Field definition file for table: ADORecordset \r\n"
					"UserDefinedID	long		1\r\n"
					"PatID	long		1\r\n"
					"First	string	50	string sample value\r\n"
					"Middle	string	50	string sample value\r\n"
					"Last	string	50	string sample value\r\n"
					"Address1	string	150	string sample value\r\n"
					"Address2	string	150	string sample value\r\n"
					"City	string	50	string sample value\r\n"
					"State	string	20	string sample value\r\n"
					"ZIp	string	20	string sample value\r\n"
					"HomePhone	string	20	string sample value\r\n"
					"WorkPhone	string	20	string sample value\r\n"
					"CellPhone	string	20	string sample value\r\n"
					"BirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"SocSecNum	string	11	string sample value\r\n"
					"Gender	byte		1\r\n"
					"EmergFirst	string	50	string sample value\r\n"
					"EmergLast	string	50	string sample value\r\n"
					"EmergHPhone	string	20	string sample value\r\n"
					"EmergWPhone	string	20	string sample value\r\n"
					"EmergRelation	string	50	string sample value\r\n"
					"Occupation	string	130	string sample value\r\n"
					"EmployerFirst	string	50	string sample value\r\n"
					"EmployerMiddle	string	50	string sample value\r\n"
					"EmployerLast	string	50	string sample value\r\n"
					"EmployerAddress1	string	50	string sample value\r\n"
					"EmployerAddress2	string	50	string sample value\r\n"
					"EmployerCity	string	50	string sample value\r\n"
					"EmployerState	string	50	string sample value\r\n"
					"EmployerZip	string	50	string sample value\r\n"
					"RefPhysFirst	string	50	string sample value\r\n"
					"RefPhysMiddle	string	50	string sample value\r\n"
					"RefPhysLast	string	50	string sample value\r\n"
					"RefPhysTitle	string	50	string sample value\r\n"
					"RefPhysAddress1	string	75	string sample value\r\n"
					"RefPhysAddress2	string	75	string sample value\r\n"
					"RefPhysCity	string	50	string sample value\r\n"
					"RefPhysState	string	20	string sample value\r\n"
					"RefPhysZip	string	20	string sample value\r\n"
					"RefPhysWorkPhone	string	20	string sample value\r\n"
					"RefPhysNPI	string	50	string sample value\r\n"
					"PriInsCoName	string	255	string sample value\r\n"
					"PriInsCoAdd1	string	75	string sample value\r\n"
					"PriInsCoAdd2	string	75	string sample value\r\n"
					"PriInsCoCity	string	50	string sample value\r\n"
					"PriInsCoState	string	20	string sample value\r\n"
					"PriInsCoZip	string	20	string sample value\r\n"
					"PriInsFirst	string	50	string sample value\r\n"
					"PriInsMiddle	string	50	string sample value\r\n"
					"PriInsLast	string	50	string sample value\r\n"
					"PriInsAdd1	string	75	string sample value\r\n"
					"PriInsAdd2	string	75	string sample value\r\n"
					"PriInsCity	string	50	string sample value\r\n"
					"PriInsState	string	20	string sample value\r\n"
					"PriInsZip	string	20	string sample value\r\n"
					"PriInsEmployer	string	150	string sample value\r\n"
					"PriInsBirthdate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"PriInsSSN	string	11	string sample value\r\n"
					"PriInsRelation	string	60	string sample value\r\n"
					"PriInsPartyID	long		1\r\n"
					"PriIDForInsurance	string	50	string sample value\r\n"
					"PriPolGroupNum	string	50	string sample value\r\n"
					"PriCopay	currency		1.00\r\n"
					"PriCopayPercent	long		1\r\n"					
					"PriInsEffDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"PriCountRefs	long		1\r\n"
					"SecInsCoName	string	255	string sample value\r\n"
					"SecInsCoAdd1	string	75	string sample value\r\n"
					"SecInsCoAdd2	string	75	string sample value\r\n"
					"SecInsCoCity	string	50	string sample value\r\n"
					"SecInsCoState	string	20	string sample value\r\n"
					"SecInsCoZip	string	20	string sample value\r\n"
					"SecInsFirst	string	50	string sample value\r\n"
					"SecInsMiddle	string	50	string sample value\r\n"
					"SecInsLast	string	50	string sample value\r\n"
					"SecInsAdd1	string	75	string sample value\r\n"
					"SecInsAdd2	string	75	string sample value\r\n"
					"SecInsCity	string	50	string sample value\r\n"
					"SecInsState	string	20	string sample value\r\n"
					"SecInsZip	string	20	string sample value\r\n"
					"SecInsEmployer	string	150	string sample value\r\n"
					"SecInsBirthdate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"SecInsSSN	string	11	string sample value\r\n"
					"SecInsRelation	string	60	string sample value\r\n"
					"SecInsPartyID	long		1\r\n"
					"SecIDForInsurance	string	50	string sample value\r\n"
					"SecPolGroupNum	string	50	string sample value\r\n"
					"SecCopay	currency		1.00\r\n"
					"SecCoPayPercent	long		1\r\n"					
					"SecInsEffDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"SecCountRefs	long		1\r\n"
					"RespPartyFirst	string	50	string sample value\r\n"
					"RespPartyMiddle	string	50	string sample value\r\n"
					"RespPartyLast	string	50	string sample value\r\n"
					"RespPartyAddress1	string	75	string sample value\r\n"
					"RespPartyAddress2	string	75	string sample value\r\n"
					"RespPartyCity	string	50	string sample value\r\n"
					"RespPartyState	string	20	string sample value\r\n"
					"RespPartyZip	string	20	string sample value\r\n"
					"RespPartyHomePhone	string	20	string sample value\r\n"
					"RespPartyCompany	string	255	string sample value\r\n"
					"EMRID	long		1\r\n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"EMRDescription	memo	string sample value\r\n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"ChargeCount	long		1\r\n"
					"DiagCount	long		1\r\n"
					"LocID	long		1\r\n"
					"ProvID	long		1\r\n"
					"DocFirst	string	50	string sample value\r\n"
					"DocMiddle	string	50	string sample value\r\n"
					"DocLast	string	50	string sample value\r\n"
					"DocTitle	string	50	string sample value\r\n"
					"SecProvID	long		1\r\n"
					"MaritalStatus	string	10	string sample value\r\n"
					"SecDocFirst	string	50	string sample value\r\n"
					"SecDocMiddle	string	50	string sample value\r\n"
					"SecDocLast	string	50	string sample value\r\n"
					"SecDocTitle	string	50	string sample value\r\n"
					"Resource	memo	string sample value\r\n"
					"TotalPays	currency		1.00\r\n"
					"EMNMoreInfoNote	memo	string sample value\r\n"
					"PatientNote	memo	string sample value\r\n"					
					"Email	string	50	string sample value\r\n"
					"DefaultInjuryDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"PreferredContact	string	50	string sample value\r\n"
					"PrivHome	boolean		TRUE \r\n"
					"PrivWork	boolean		TRUE \r\n"
					"PrivCell	boolean		TRUE \r\n"
					"PrivEmail	boolean		TRUE \r\n"
					"LastSurgeryDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"					
					"PCPPhysFirst	string	50	string sample value\r\n"
					"PCPPhysMiddle	string	50	string sample value\r\n"
					"PCPPhysLast	string	50	string sample value\r\n"
					"PCPPhysTitle	string	50	string sample value\r\n"
					"TerInsCoName	string	255	string sample value\r\n"
					"TerInsCoAdd1	string	75	string sample value\r\n"
					"TerInsCoAdd2	string	75	string sample value\r\n"
					"TerInsCoCity	string	50	string sample value\r\n"
					"TerInsCoState	string	20	string sample value\r\n"
					"TerInsCoZip	string	20	string sample value\r\n"
					"TerInsFirst	string	50	string sample value\r\n"
					"TerInsMiddle	string	50	string sample value\r\n"
					"TerInsLast	string	50	string sample value\r\n"
					"TerInsAdd1	string	75	string sample value\r\n"
					"TerInsAdd2	string	75	string sample value\r\n"
					"TerInsCity	string	50	string sample value\r\n"
					"TerInsState	string	20	string sample value\r\n"
					"TerInsZip	string	20	string sample value\r\n"
					"TerInsEmployer	string	150	string sample value\r\n"
					"TerInsBirthdate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"TerInsSSN	string	11	string sample value\r\n"
					"TerInsRelation	string	60	string sample value\r\n"
					"TerInsPartyID	long		1\r\n"
					"TerIDForInsurance	string	50	string sample value\r\n"
					"TerPolGroupNum	string	50	string sample value\r\n"
					"TerCopay	currency		1.00\r\n"
					"TerCoPayPercent	long		1\r\n"					
					"TerInsEffDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
					"");
			break;

			case 1:
				
				switch (nSubReportID) {
					case 0:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"EMRID	long		1\r\n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"ProvID	long		1\r\n"
							"LocID	long		1\r\n"
							"PriInsPartyID	long		1\r\n"
							"PriInsRefID	long		1\r\n"
							"PriInsRefAuthNu	string	50	string sample value\r\n"
							"PriInsRefStartDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"PriInsRefEndDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"PriInsRefNumVisits	long		1\r\n"
							"PriInsRefLocation	string	255	string sample value\r\n"
							"PriInsRefDocFirst	string	50	string sample value\r\n"
							"PriInsRefDocMiddle	string	50	string sample value\r\n"
							"PriInsRefDocLast	string	50	string sample value\r\n"
							"PriInsRefDocTitle	string	50	string sample value\r\n"
							"PriInsRefComments	string	255	string sample value\r\n"
							"PriInsRefDiagCode	string	50	string sample value\r\n"
							"PriInsRefServiceCode	string	50	string sample value\r\n"
							"PriInsRefServiceCodeBillable	long		1\r\n"
							"");
					break;

					case 1:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"EMRID	long		1\r\n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"ProvID	long		1\r\n"
							"LocID	long		1\r\n"
							"SecInsPartyID	long		1\r\n"
							"SecInsRefID	long		1\r\n"
							"SecInsRefAuthNu	string	50	string sample value\r\n"
							"SecInsRefStartDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"SecInsRefEndDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"SecInsRefNumVisits	long		1\r\n"
							"SecInsRefLocation	string	255	string sample value\r\n"
							"SecInsRefDocFirst	string	50	string sample value\r\n"
							"SecInsRefDocMiddle	string	50	string sample value\r\n"
							"SecInsRefDocLast	string	50	string sample value\r\n"
							"SecInsRefDocTitle	string	50	string sample value\r\n"
							"SecInsRefComments	string	255	string sample value\r\n"
							"SecInsRefDiagCode	string	50	string sample value\r\n"
							"SecInsRefServiceCode	string	50	string sample value\r\n"
							"SecInsRefServiceCodeBillable	long		1\r\n"
							"");
					break;

					case 2:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"EMRID	long		1\r\n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"EMRDescription	memo	string sample value\r\n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"EMRChargeID	long		1\r\n"
							"Description	string	255	string sample value\r\n"
							"Quantity	number		1.00\r\n"
							"UnitCost	currency		1.00\r\n"
							"CPTModifier1	string	10	string sample value\r\n"
							"CPTModifier2	string	10	string sample value\r\n"
							"CPTModifier3	string	10	string sample value\r\n"
							"CPTModifier4	string	10	string sample value\r\n"
							"CPTMod1Note	string	255	string sample value\r\n"
							"CPTMod1Multipler	number		1.00\r\n"
							"CPTMod2Note	string	255	string sample value\r\n"
							"CPTMod2Multipler	number		1.00\r\n"
							"CPTMod3Note	string	255	string sample value\r\n"
							"CPTMod3Multipler	number		1.00\r\n"
							"CPTMod4Note	string	255	string sample value\r\n"
							"CPTMod4Multipler	number		1.00\r\n"
							"ICD9Code	string	50	string sample value\r\n"
							"ICD10Code	string	50	string sample value\r\n"
							"ProvID	long		1\r\n"
							"LocID	long		1\r\n"
							"CPTCode	string	50	string sample value\r\n"
							"SubCode	string	50	string sample value\r\n"
							"ServiceName	string	255	string sample value\r\n"
							"ServicePrice	currency		1.00\r\n"
							"IsCPT	long		1\r\n"
							"IsProduct	long		1\r\n"
							"ServiceBillable	long		1\r\n"
							"");
					break;

					case 3:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"EMRID	long		1\r\n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"EMRDescription	memo	string sample value\r\n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"EMRDiagCodeID	long		1\r\n"
							"ICD9Code	string	50	string sample value\r\n"
							"ICD10Code	string	50	string sample value\r\n"
							"ICD9CodeDesc	string	255	string sample value\r\n"
							"ICD10CodeDesc	string	255	string sample value\r\n"
							"ProvID	long		1\r\n"
							"LocID	long		1\r\n"
							"");
					break;

					// (j.gruber 2010-04-19 11:10) - PLID 38089 - payments subreport
					// (j.gruber 2010-05-17 14:04) - PLID 38696 - added payment plan fields
					case 4:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"EMRID	long		1\r\n"
							"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"EMRDescription	memo	string sample value\r\n"
							"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"ProvID	long		1\r\n"
							"LocID	long		1\r\n"
							"PayDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"PayIDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
							"PayDescription	string	255	string sample value\r\n"
							"PayAmount	currency		1.00\r\n"
							"CatID	number		1.00\r\n"
							"PayCatName	string	255	string sample value\r\n"
							"ProvFirst	string	50	string sample value\r\n"
							"ProvLast	string	50	string sample value\r\n"
							"ProvMiddle	string	50	string sample value\r\n"							
							"ProvTitle	string	50	string sample value\r\n"							
							"PayInsPartyID	long		1\r\n"
							"CheckNo	string	50	string sample value \r\n"
							"BankNo	string	50	string sample value \r\n"
							"CheckAcctNo	string	50	string sample value \r\n"
							"PayMethod	long		1\r\n"
							"CCType	string	50	string sample value \r\n"
							"CCNumber	string	50	string sample value \r\n"
							"CCHoldersName	string	50	string sample value \r\n"							
							"");
					break;

					// (j.gruber 2010-03-09 12:37) - PLID 37674
					case 5:
						return _T("; Field definition file for table: ADORecordset\r\n"
							"PatID	long		1\r\n"
							"CatImage	blob	\r\n"
							"CatID	long	1	\r\n"
							"CatName	string	50	string sample value\r\n"
							"");
					break;

					
				}
			break;
		}
		break;

		case 137:  
			// (j.gruber 2010-03-11 10:26) - PLID 37713 - added ttx
			return _T("; Field definition file for table: ADORecordset \r\n"
				"FinType	string	40	string sample value\r\n"
				"ID	long		1\r\n"
				"PatientID	long		1\r\n"
				"Type	long		1\r\n"
				"Amount	currency		1.00\r\n"
				"Description	string	255	string sample value\r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"InputName	string	50	string sample value\r\n"
				"Deleted	boolean		TRUE\r\n"
				"DeleteDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"DeletedBy	string	50	string sample value\r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"PrePayment	long		1\r\n"
				"Amt	currency		1.00\r\n"
				"ProvID	long		1\r\n"
				"RText	string	8	string sample value\r\n"
				"ApplyID	long		1\r\n"
				"LineID	long		1\r\n"
				"LocID	long		1\r\n"
				"Location	string	255	string sample value\r\n"
				"BDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"PatID	long		1\r\n"
				"InsResp	long		1\r\n"
				"PayCategory	string	150	string sample value\r\n"
				"TransferredFromTDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TransferredFromIDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"TotalDiscount	currency		1.00\r\n"
				"PercentDiscount	long		1\r\n"
				"DollarDiscount	currency		1.00\r\n"
				"DiscountCategoryDescription	string	255	string sample value\r\n"
				"StartingAR	currency		1.00\r\n"
				"EndingAR	currency		1.00\r\n"
				"PayApplyTotal	currency		1.00\r\n"
				"FuturePayApplyTotal	currency		1.00\r\n");
			break;

			// (z.manning 2010-12-01 16:21) - PLID 41660 - I renamed a couple of field so they match
			// the new data structure.
		case 694: // (c.haag 2010-03-31 15:51) - PLID 37998 - Appointment Reminders (CellTrust)
			return _T("; Field definition file for table: ADORecordset\r\n"
				"ID	long		1\r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"ServerID	long		1\r\n"
				"StatusText	string	255	string sample value\r\n"
				"SentTo	string	50	string sample value\r\n"
				"Status	byte		1\r\n"
				"StartTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"EndTime	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"First	string	50	string sample value\r\n"
				"Middle	string	50	string sample value\r\n"
				"Last	string	50	string sample value\r\n"
				"ApptDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
				"Notes	memo		memo sample value\r\n"
				"Type	string	50	string sample value\r\n"
				"Resources	memo	memo sample value\r\n"
				"ApptStatus	byte		1\r\n"
				"ShowState	long		1\r\n"
				"HomePhone	string	20	string sample value\r\n"
				"Purposes	memo		memo sample value\r\n"
				"PatName	string	255	string sample value\r\n"
				"ChartNumber	long		1\r\n"
				"Location	string	255	string sample value\r\n"
				"PrivHome	boolean		TRUE\r\n"
				"PrivWork	boolean		TRUE\r\n"
				"Email	string	50	string sample value\r\n"
				"PatID	long	1\r\n"
				);
			break;

		case 321: // (c.haag 2010-06-30 11:06) - PLID 39423 - Contact report
			// (j.gruber 2010-07-15 13:04) - PLID 38987 - added bold and celltrust
			// (s.dhole 2010-07-15 16:46) - PLID  39509 added Issue_Category Field  to sub report
			// (s.dhole 2010-07-15 16:47) - PLID 39509 added contact, Data_Conversion_user, Data_Conversion_from,  Install_user
			// (d.lange 2010-09-20 11:46) - PLID 40445 - added Chase CC Processing
			//TES 12/9/2010 - PLID 41701 - Glasses Orders licensing
			// (z.manning 2011-01-14 17:59) - PLID 42057 - Patient check-in licensing
			// (a.wilson 2011-10-12) PLID 45550 - adding PQRS licensing and ConcurrentTSLicensesBought
			// (a.wilson 2011-11-10) PLID 46408 - adding Eyemaginations license
			// (z.manning 2011-12-05 17:09) - PLID 44162 - NexWeb EMR license
			// (d.singleton 2012-03-21 11:49) - PLID 49086 license for code correct
			// (j.armen 2012-03-27 16:47) - PLID 49244 - Recall
			// (j.armen 2012-05-30 13:56) - PLID 50688 - NexEMRCosmetic
			// (z.manning 2012-06-12 16:17) - PLID 50878 - Added iPad fields
			// (j.luckoski 2013-01-21 10:42) - PLID 49892 - Added ERX Prescriber fields
			// (z.manning 2013-01-31 15:19) - PLID 54954 - Added NuanceBought
			// (a.wilson 2013-03-28 09:43) - PLID 44474 - Added Specialty
			// (r.goldschmidt 2014-04-01 17:32) - PLID 60011 - Added NexSync, Practice Website, and EMR specialist
			// (a.wilson 2014-08-15 11:01) - PLID 62516 - added vision payments
			// (z.manning 2015-05-12 16:10) - PLID 65961 - StateASCReports
			// (z.manning 2015-06-17 09:10) - PLID 66407 - MPVPatients
			// (z.manning 2015-06-17 15:00) - PLID 66278 - PortalProviders
			// (z.manning 2015-07-21 13:20) - PLID 66599 - ICCP
			// (r.farnworth 2015-11-11 11:30) - PLID 66407 - MPVMessaging
			// (b.eyers - 2016-03-03) - PLID 68480 - Subscription Local Hosted
			// (b.cardillo 2016-03-08 14:02) - PLID 68409 - Iagnosis provider count
			// (r.gonet 2016-05-10) - NX-100478 - Added AzureRemoteApp
				switch (nSubReport) {
					case 0:
						return _T("; Field definition file for table: ADORecordset\r\n"
						"PatID	long		1\r\n"
						"UserDefinedID	long		1\r\n"
						"PatName	string	255	string sample value\r\n"
						"WorkPhone	string	255	string sample value\r\n"
						"HomePhone	string	255	string sample value\r\n"
						"CellPhone	string	255	string sample value\r\n"
						"Fax	string	255	string sample value\r\n"
						"Pager	string	255	string sample value\r\n"
						"OtherPhone	string	255	string sample value\r\n"
						"Address1	string	255	string sample value\r\n"
						"Address2	string	255	string sample value\r\n"
						"City	string	255	string sample value\r\n"
						"State	string	255	string sample value\r\n"
						"Zip	string	255	string sample value\r\n"
						"Note	memo		memo sample data\r\n"
						"LicenseBought	string	255	string sample value\r\n"
						"DoctorsBought	string	255	string sample value\r\n"
						"DoctorsUsed	string	255	string sample value\r\n"
						"PalmPilotBought	string	255	string sample value\r\n"
						"Patients	long		1\r\n"
						"Scheduler	long		1\r\n"
						"Billing	long		1\r\n"
						"HCFA	long		1\r\n"
						"Letters	long		1\r\n"
						"Quotes	long		1\r\n"
						"Marketing	long		1\r\n"
						"Inventory	long		1\r\n"
						"EBilling	long		1\r\n"
						"MirrorLink	long		1\r\n"
						"InformLink	long		1\r\n"
						"UnitedLink	long		1\r\n"
						"EmergWPhone	string	255	string sample value\r\n"
						"NexTrack	long		1\r\n"
						"NexForms	long		1\r\n"
						"NexWeb	long		1\r\n"
						"ASCModule	long		1\r\n"
						"NexSpa	long		1\r\n"
						"NexVoice	long		1\r\n"
						"NexEMR	long		1\r\n"
						"PatCoord	string	255	string sample value\r\n"
						"PatientEmail	string	255	string sample value\r\n"
						"PracticeEmail	string	255	string sample value\r\n"
						"PPCBought	string	255	string sample value\r\n"
						"databasesbought	string	255	string sample value\r\n"
						"emrprovidersbought	string	255	string sample value\r\n"
						"emrpro	long		1\r\n"
						"emrprodoctornames	string	255	string sample value\r\n"
						"ccprocessing	long		1\r\n"
						"advinventory	long		1\r\n"
						"eremittance	long		1\r\n"
						"eeligibility	long		1\r\n"
						"carecreditlink	long		1\r\n"
						"quickbookslink	long		1\r\n"
						"unicornlink	long		1\r\n"
						"hl7	long		1\r\n"
						"transcriptions	long		1\r\n"
						"customrecords	long		1\r\n"
						"retention	long		1\r\n"
						"labs	long		1\r\n"
						"faxing	long		1\r\n"
						"barcoderead	long		1\r\n"
						"schedstandard	long		1\r\n"
						"emrstandard	long		1\r\n"
						"cycleofcare	long		1\r\n"
						"eprescribe	long		1\r\n"
						"newcrop	long		1\r\n"
						"FirstDataBank	long		1\r\n"
						"NexPhoto	long		1\r\n"
						"TOPSLink	long		1\r\n"
						"NexWebLeads	long		1\r\n"
						"NexWebPortal	long		1\r\n"
						"Frames	long		1\r\n"
						"DeviceImport	long		1\r\n"
						"Bold	long		1\r\n"
						"CellTrust	long		1\r\n"
						"PatientCheckIn	long	1\r\n"
						"Contact	string	255	string sample value\r\n"
						"Website	string	255	string sample value\r\n"
						"Data_Conversion_user	string	50	string sample value\r\n"
						"Data_Conversion_from	string	255	string sample value\r\n"
						"Install_user	string	50	string sample value\r\n"
						"Speciality	memo		memo sample data\r\n"
						"EMRSpecialist	string	50	string sample value\r\n"
						"ChaseCCProcessing	long		1\r\n"
						"GlassesOrders	long	1\r\n"
						"PQRS	long	1\r\n"
						"ConcurrentTSLicensesBought	string	50	string sample value\r\n"
						"Eyemaginations	long		1\r\n"
						"NexWebEmr	long		1\r\n"
						"CodeCorrect	long	1\r\n"
						"Recall	long		1\r\n"
						"NexEMRCosmetic	long	1\r\n"
						"IpadBought	string	50	string sample value\r\n"
						"IpadEnabled	long	1\r\n"
						"NuanceBought	string	50	string sample value\r\n"
						"NexSyncBought	string	50	string sample value\r\n"
						"ERXLicPrescribersBought	string	255	string sample value\r\n"
						"ERXLicPres	long		1\r\n"
						"ERXLicPrescriberNames	string	255	string sample value\r\n"
						"ERXMidPrescribersBought	string	255	string sample value\r\n"
						"ERXMidPres	long		1\r\n"
						"ERXMidPrescriberNames	string	255	string sample value\r\n"
						"ERXStaffPrescribersBought	string	255	string sample value\r\n"
						"ERXStaffPres	long		1\r\n"
						"ERXStaffPrescriberNames	string	255	string sample value\r\n"
						"VisionPayments	long		1\r\n"
						"LockboxPayments	long	1\r\n"
						"StateASCReports	long	1\r\n"
						"MPVPatients	long	1\r\n"
						"PortalProviders	long	1\r\n"
						"ICCP	long	1\r\n"
						"MPVMessaging	long	1\r\n"
						"SubscriptionLocalHosted	long	1\r\n"
						"IagnosisProviderCount	long	1\r\n"
						"AzureRemoteApp	long	1\r\n"
						"ActiveDirectoryLogin	long	1\r\n"
						);
						break;
					case 1:
						return _T("; Field definition file for table: ADORecordset\r\n"
						"PatID	long		1\r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"Note	memo		memo sample data\r\n"
						"Category	string	50	string sample value\r\n"
						"Issue_Category	string	255	string sample value\r\n"
						);
						break;
				}
			break;
		
		case 615: // (c.haag 2010-07-12 15:19) - PLID 39601 - Clients By EMR Specialist
		case 626: // (c.haag 2010-07-12 15:19) - PLID 39601 - Clients By EMR Status
			// (j.gruber 2010-07-30 15:37) - PLID 39879 - added secondary specialist
			// (j.armen 2011-06-27 17:21) - PLID 44253 - Updated custom list data structure
			return _T("; Field definition file for table: ADORecordset \r\n"
				"PatID	long		1 \r\n"
				"ClientID	long		1 \r\n"
				"CurrentStatus	short		1 \r\n"
				"FCDDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"First	string	255	string sample value \r\n"
				"Middle	string	255	string sample value \r\n"
				"Last	string	255	string sample value \r\n"
				"Title	string	255	string sample value \r\n"
				"City	string	255	string sample value \r\n"
				"State	string	255	string sample value \r\n"
				"Zip	string	255	string sample value \r\n"
				"CustomList4	memo	4000	string sample value \r\n"
				"EMRSpecFirst	string	255	string sample value \r\n"
				"EMRSpecLast	string	255	string sample value \r\n"
				"EMRUserName	string	255	string sample value \r\n"
				"StatusName	string	255	string sample value \r\n"
				"EmrStatusID	long		1 \r\n"
				"EMRSpecialistID	long		1 \r\n"
				"EMRStatusNote	string	255	string sample value \r\n"
				"LastContactDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"SecEMRSpecFirst	string	255	string sample value \r\n"
				"SecEMRSpecLast	string	255	string sample value \r\n"
				"SecEMRUserName	string	255	string sample value \r\n"
				"SecEMRSpecialistID	long		1 \r\n"
				
			);
			break;

		case 686: // (c.haag 2010-11-10 09:52) - PLID 41024 - Patients By Media By Primary Insurance Financial Class
			return _T("; Field definition file for table: ADORecordset \r\n"
				"GroupID	long		1 \r\n"
				"Level1Name	string	255	string sample value \r\n"
				"Level2Name	string	255	string sample value \r\n"
				"Level3Name	string	255	string sample value \r\n"
				"Level4Name	string	255	string sample value \r\n"
				"PatName	string	255	string sample value \r\n"
				"ReferralName	string	255	string sample value \r\n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"PatID	long		1 \r\n"
				"ProvID	long		1 \r\n"
				"ReferralID	long		1 \r\n"
				"FirstApptDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"InputtingUser	string	255	string sample value \r\n"
				"PrimaryInsuranceCoName	string	255	string sample value \r\n"
				"SecondaryInsuranceCoName	string	255	string sample value \r\n"
				"PrimaryFinancialClassName	string	255	string sample value \r\n"
				"SecondaryFinancialClassName	string	255	string sample value \r\n"
				"Cost	number		1.00 \r\n"
				"CrossTabCost	number		1.00 \r\n"
				"CrossTabTotal	number		1.00 \r\n"
				);
			break;
					//(j.deskurakis 2013-01-24) - PLID 53151 - reports 696 and 697 both revised to match new tables and available data
		case 696:	// (f.dinatale 2010-07-15) - PLID 39541 - HL7 Integration Information by Client
		case 697:	// (f.dinatale 2010-07-15) - PLID 39541 - HL7 Integration Information by Company
	
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ClientName	string	255	string sample value \r\n"
				"PatID	long		1 \r\n"
				"StartDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"BillTo	string	255	string sample value \r\n"
				"IntegrationType	string	255	string sample value \r\n"
				"Notes	memo		memo sample value \r\n"
				"Expiration	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Lab	string	255	string sample value \r\n"
				"AssignedTo	string	50	string sample value \r\n"
				"currentStatus	string	50	string sample value \r\n"
				"PO	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Paid	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"GoLive	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Trained	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"IncidentID	long		1 \r\n"
				);
			break;
		case 717: // (b.spivey, October 21, 2011) - PLID 46072 - Frames version uses the same fields and the same queries. 
			// (b.spivey, November 04, 2011) - PLID 46072 - DateReceived field added for the frames version. 
			// (b.spivey, November 22, 2011) - PLID 46072 - DON'T FORGET TO UPDATE (ID 698) "Inventory Barcodes Avery 8167 Labels" VERSION TOO!
		case 698: //(s.dhole 2010-07-16 16:47) - PLID 28183 print Avery 8167 labels from the order screen by right clicking order 
			// (b.spivey, October 11, 2011) - PLID 45882 - Added Vendor, StyleName, ColorDescription, ColorCode, Eye, Bridge, 
			//		Temple, DBL, A, B, ED, EDAngle, Circumference, YearIntroduced, LastCost for every inventory item (that's 4*15). 
			return _T("; Field definition file for table: ADORecordset  \r\n"
				"ID	long		1  \r\n"
				"Name0	string	152	string sample value \r\n"
				"UnitDesc0	string	255	string sample value \r\n"
				"Barcode0	string	255	string sample value \r\n"
				"price0	currency		1.00 \r\n"
				"Vendor0	string	50	string sample value \r\n"
				"StyleName0	string	50	string sample value \r\n"
				"ColorDescription0	string	50	string sample value \r\n"
				"ColorCode0	string	20	string sample value \r\n"
				"Eye0	string	3	string sample value \r\n"
				"Bridge0	string	10	string sample value \r\n"
				"Temple0	string	10	string sample value \r\n"
				"DBL0	string	10	string sample value \r\n"
				"A0	string	5	string sample value \r\n"
				"B0	string	5	string sample value \r\n"
				"ED0	string	5	string sample value \r\n"
				"EDAngle0	string	6	string sample value \r\n"
				"Circumference0	string	6	string sample value \r\n"
				"YearIntroduced0	string	4	string sample value \r\n"
				"LastCost0	currency	1.00 \r\n"
				"DateReceived0	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Name1	string	152	string sample value \r\n"
				"UnitDesc1	string	255	string sample value \r\n"
				"Barcode1	string	255	string sample value \r\n"
				"price1	currency		1.00 \r\n"
				"Vendor1	string	50	string sample value \r\n"
				"StyleName1	string	50	string sample value \r\n"
				"ColorDescription1	string	50	string sample value \r\n"
				"ColorCode1	string	20	string sample value \r\n"
				"Eye1	string	3	string sample value \r\n"
				"Bridge1	string	10	string sample value \r\n"
				"Temple1	string	10	string sample value \r\n"
				"DBL1	string	10	string sample value \r\n"
				"A1	string	5	string sample value \r\n"
				"B1	string	5	string sample value \r\n"
				"ED1	string	5	string sample value \r\n"
				"EDAngle1	string	6	string sample value \r\n"
				"Circumference1	string	6	string sample value \r\n"
				"YearIntroduced1	string	4	string sample value \r\n"
				"LastCost1	currency	1.00 \r\n"
				"DateReceived1	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Name2	string	152	string sample value \r\n"
				"UnitDesc2	string	255	string sample value \r\n"
				"Barcode2	string	255	string sample value \r\n"
				"price2	currency		1.00 \r\n"
				"Vendor2	string	50	string sample value \r\n"
				"StyleName2	string	50	string sample value \r\n"
				"ColorDescription2	string	50	string sample value \r\n"
				"ColorCode2	string	20	string sample value \r\n"
				"Eye2	string	3	string sample value \r\n"
				"Bridge2	string	10	string sample value \r\n"
				"Temple2	string	10	string sample value \r\n"
				"DBL2	string	10	string sample value \r\n"
				"A2	string	5	string sample value \r\n"
				"B2	string	5	string sample value \r\n"
				"ED2	string	5	string sample value \r\n"
				"EDAngle2	string	6	string sample value \r\n"
				"Circumference2	string	6	string sample value \r\n"
				"YearIntroduced2	string	4	string sample value \r\n"
				"LastCost2	currency	1.00 \r\n"
				"DateReceived2	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"Name3	string	152	string sample value \r\n"
				"UnitDesc3	string	255	string sample value \r\n"
				"Barcode3	string	255	string sample value \r\n"
				"price3	currency		1.00 \r\n"
				"Vendor3	string	50	string sample value \r\n"
				"StyleName3	string	50	string sample value \r\n"
				"ColorDescription3	string	50	string sample value \r\n"
				"ColorCode3	string	20	string sample value \r\n"
				"Eye3	string	3	string sample value \r\n"
				"Bridge3	string	10	string sample value \r\n"
				"Temple3	string	10	string sample value \r\n"
				"DBL3	string	10	string sample value \r\n"
				"A3	string	5	string sample value \r\n"
				"B3	string	5	string sample value \r\n"
				"ED3	string	5	string sample value \r\n"
				"EDAngle3	string	6	string sample value \r\n"
				"Circumference3	string	6	string sample value \r\n"
				"YearIntroduced3	string	4	string sample value \r\n"
				"LastCost3	currency	1.00 \r\n"
				"DateReceived3	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				);
			break;

		case 718:
			// (j.gruber 2011-11-04 12:09) - PLID 44993 - MU dialog
			return _T("; Field definition file for table: ADORecordset \r\n"
				"Name	memo\r\n"
				"Numerator	long	1\r\n"
				"Denominator	long	1\r\n"
				"Percent	string	50	string sample value\r\n"
				"Type	long	1");
		break;


		// (f.dinatale 2010-12-20) - PLID 41275 - Added ttx text for NexReminder Client Usage.
		case 701:
			return _T("; Field definition file for table: ADORecordset \r\n"
				"ClientID	long		1 \r\n"
				"LastName	string	50	string sample value \r\n"
				"FirstName	string	50	string sample value \r\n"
				"Active	string	9	string sample value \r\n"
				"StartDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"EndDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"AllotedMessages	long		1 \r\n"
				"RemainingCredits	long		1 \r\n"
				"CreditsUsedSending	long		1 \r\n"
				"CreditsUsedReceiving	long		1 \r\n"
				);
			break;

		case 703: // (j.jones 2011-03-11 09:57) - PLID 41787 - Fully Adjusted Insurance Responsibilities

			return _T("; Field definition file for table: ADORecordset \r\n"
				"PatID	long		1 \r\n"
				"UserDefinedID	long		1 \r\n"
				"PatientName	string	255	string sample value \r\n"
				"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"IDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"ProvID	long		1 \r\n"
				"ProvName	string	255	string sample value \r\n"
				"LocID	long		1 \r\n"
				"LocName	string	255	string sample value \r\n"
				"BillDescription	string	255	string sample value \r\n"
				"ChargeDescription	string	255	string sample value \r\n"
				"ChargeCode	string	50	string sample value \r\n"
				"ChargeTotal	currency		1.00 \r\n"
				"RespTotal	currency		1.00 \r\n"
				"TotalAdjusted	currency		1.00 \r\n"
				"InsCoID	long		1 \r\n"
				"InsuranceCompany	string	255	string sample value \r\n"
				"RespTypeID	long		1 \r\n"
				"Responsibility	string	255	string sample value \r\n"
				"ChargeRespID	long		1 \r\n"
				"AdjServiceDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"AdjInputDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"AdjProvName	string	255	string sample value \r\n"
				"AdjLocName	string	255	string sample value \r\n"
				"AdjDescription	string	255	string sample value \r\n"
				"AdjAmount	currency		1.00 \r\n"
				"AdjAppliedAmount	currency		1.00 \r\n"
				"AdjCategory	string	150	string sample value \r\n"
				"GroupCode	string	10	string sample value \r\n"
				"GroupCodeDesc	memo		string sample value \r\n"
				"ReasonCode	string	10	string sample value \r\n"
				"ReasonCodeDesc	memo		string sample value \r\n"
				);
			break;


		case 704: // (s.dhole 2011-03-21 18:56) - PLID 42898 Create Show Glasses report 
				//TES 4/11/2011 - PLID 43058 - Added Provider and Date
				//(e.lally 2011-05-31) PLID 43840 - Added IsContactLensOrder, LensQuantity, LensOrderNotes
				// (s.dhole 2011-06-17 11:22) - PLID 44160  - Added RxExpirationDate
				// (b.spivey, November 15, 2011) - PLID 44918 - Added LeftEyeSecondaryPrismValue and RightEyeSecondaryPrismValue
			    // (s.dhole 2011-12-08 13:12) - PLID 46883 added LeftEyeSecondarPrismAxis ,LeftEyeSecondarPrismAxisStr	, RightEyeSecondaryPrismAxis	, RightEyeSecondaryPrismAxisStr	
				// (s.dhole 2012-03-01 14:58) - PLID 48563 LeftEyeSecondarPrismAxisStr and RightEyeSecondaryPrismAxisStr lenght need to be more than 15
				// (s.dhole 2012-04-10 12:00) - PLID 48563  Change width RightEyePrismAxisStr , LeftEyePrismAxisStr
				// r.wilson 2/29/2012  PLID 43702 ShipToPatient
				// (s.dhole 2012-05-08 10:06) - PLID  50131 Added InvoiceNo
				// (s.dhole 2012-05-21 16:35) - PLID 50547 Remove LensQuantity, LensOrderNotes	 Added 
				// Added OpticianLastName, OpticianFirstName, OpticianMiddleName, OpticianFullName,  SelectedInsurance,	SelectedInsuranceType	
				// Add  UnitPrice, Quantity, ItemPrice, ItemDiscount,ItemPriceAfterDiscount	, PatientRespAmt,VisionRespAmt, UnitCost
			// (s.dhole 2012-06-05 12:33) - PLID 50777 Added Category to subrport 0 and rename  VisionRespAmt to  InsuranceRespAmt (Subreport 3)
			// (d.singleton 2012-06-25 15:28) - PLID 51189 increased address1 and address 2 to 150
				switch (nSubReport) {
					case 0:
						return _T(" ; Field definition file for table: ADORecordset\r\n"
						"ID	long		1\r\n"
						"VisionWebOrderExchangeID	string	15	string sample value\r\n"
						"LocationID	long		1\r\n"
						"PatientID	long		1\r\n"
						"GlassesOrderType	byte		1\r\n"
						"OrderType	string	26	string sample value\r\n"
						"OrderCreateDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"GlassesSupplierLocationID	long		1\r\n"
						"GlassesCatalogFrameTypeID	long		1\r\n"
						"SupplierID	long		1\r\n"
						"GlassesOrderStatusID	long		1\r\n"
						"OrderMessage	memo	string sample value\r\n"
						"MessageType	string	50	string sample value\r\n"
						"JobType	string	3	string sample value\r\n"
						"JobTypeDescription	string	15	string sample value\r\n"
						"JobNote	string	255	string sample value\r\n"
						"SupplierLocation	long		1\r\n"
						"SupplierWorkPhone	string	20	string sample value\r\n"
						"SupplierFax	string	20	string sample value\r\n"
						"SupplierCompanyName	string	50	string sample value\r\n"
						"SupplierAddress1	string	150	string sample value\r\n"
						"SupplierAddress2	string	150	string sample value\r\n"
						"SupplierCity	string	50	string sample value\r\n"
						"SupplierState	string	20	string sample value\r\n"
						"SupplierZip	string	20	string sample value\r\n"
						"PatientBirthDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"GlassesOrderNumber	string	50	string sample value\r\n"
						"SupplierTrackingId	string	50	string sample value\r\n"
						"Description	string	255	string sample value\r\n"
						"UserName	string	50	string sample value\r\n"
						"LocationName	string	255	string sample value\r\n"
						"LocationAddress1	string	75	string sample value\r\n"
						"LocationAddress2	string	75	string sample value\r\n"
						"LocationCity	string	50	string sample value\r\n"
						"LocationState	string	50	string sample value\r\n"
						"LocationsZip	string	50	string sample value\r\n"
						"LocationMainPhone	string	20	string sample value\r\n"
						"LocationsPhone	string	20	string sample value\r\n"
						"LocationsFax	string	50	string sample value\r\n"
						"VisionWebAccountID	long		1\r\n"
						"PatientUserDefinedID	long		1\r\n"
						"PatientFirstName	string	50	string sample value\r\n"
						"PatientMiddleName	string	50	string sample value\r\n"
						"PatientLastName	string	50	string sample value\r\n"
						"PatientAddress1	string	150	string sample value\r\n"
						"PatientAddress2	string	150	string sample value\r\n"
						"PatientCity	string	50	string sample value\r\n"
						"PatientState	string	20	string sample value\r\n"
						"PatientZip	string	20	string sample value\r\n"
						"PatientHomePhone	string	20	string sample value\r\n"
						"PatientWorkPhone	string	20	string sample value\r\n"
						"RightLensDetailRxID	long		1\r\n"
						"LeftLensDetailRxID	long		1\r\n"
						"LeftEyeFarHalfPd	number		1.00\r\n"
						"LeftEyeNearHalfPd	number		1.00\r\n"
						"LeftEyeSegHeight	number		1.00\r\n"
						"LeftEyeOpticalCenter	number		1.00\r\n"
						"LeftEyePrescriptionSphere	number		1.00\r\n"
						"LeftEyeCylinderValue	number		1.00\r\n"
						"LeftEyeCylinderAxis	long		1\r\n"
						"LeftEyeAdditionValue	number		1.00\r\n"
						"LeftEyePrismValue	number		1.00\r\n"
						"LeftEyePrismAxis	long		1\r\n"
						"LeftEyePrismAxisStr	string	20	string sample value\r\n"
						"LeftEyeDesignsID	long		1\r\n"
						"LeftEyeMaterialsID	long		1\r\n"
						"LeftEyeOtherInfoID	long		1\r\n"
						"LeftEyeLensThickness	number		1.00\r\n"
						"LeftEyeThicknessType	string	3	string sample value\r\n"
						"LeftEyeTreatmentComment	string	255	string sample value\r\n"
						"LeftEyeDesignName	string	255	string sample value\r\n"
						"LeftEyeDesignCode	string	100	string sample value\r\n"
						"LeftEyeMaterialName	string	255	string sample value\r\n"
						"LeftEyeMaterialCode	string	100	string sample value\r\n"
						"RightEyeOtherInfoID	long		1\r\n"
						"RightEyeThickness	number		1.00\r\n"
						"RightEyeThicknessType	string	3	string sample value\r\n"
						"RightEyeTreatmentComment	string	255	string sample value\r\n"
						"RightEyeDesignName	string	255	string sample value\r\n"
						"RightEyeDesignCode	string	100	string sample value\r\n"
						"RightEyeMaterialName	string	255	string sample value\r\n"
						"RightEyeMaterialCode	string	100	string sample value\r\n"
						"RightEyeFarHalfPd	number		1.00\r\n"
						"RightEyeNearHalfPd	number		1.00\r\n"
						"RightEyeSegHeight	number		1.00\r\n"
						"RightEyeOpticalCenter	number		1.00\r\n"
						"RightEyePrescriptionSphere	number		1.00\r\n"
						"RightEyeCylinderValue	number		1.00\r\n"
						"RightEyeCylinderAxis	long		1\r\n"
						"RightEyeAdditionValue	number		1.00\r\n"
						"RightEyePrismValue	number		1.00\r\n"
						"RightEyePrismAxis	long		1\r\n"
						"RightEyePrismAxisStr	string	20	string sample value\r\n"
						"VisionWebID	string	8	string sample value\r\n"
						"RightEyeMaterialID	long		1\r\n"
						"RightEyecDesignsID	long		1\r\n"
						"LensRxID	long		1\r\n"
						"BoxA	number		1.00\r\n"
						"BoxB	number		1.00\r\n"
						"ED	number		1.00\r\n"
						"ShapeHalfDbl	number		1.00\r\n"
						"GlassesFramesDataID	long		1\r\n"
						"FPC	string	14	string sample value\r\n"
						"StyleName	string	50	string sample value\r\n"
						"ColorDescription	string	50	string sample value\r\n"
						"Eye	string	3	string sample value\r\n"
						"Bridge	string	10	string sample value\r\n"
						"Temple	string	10	string sample value\r\n"
						"ManufacturerName	string	50	string sample value\r\n"
						"BrandName	string	50	string sample value\r\n"
						"SKU	string	30	string sample value\r\n"
						"FrameTypeName	string	255	string sample value\r\n"
						"FrameTypeCode	string	100	string sample value\r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"Provider	string	255	string sample value\r\n"
						"LensRxDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"IsContactLensOrder	boolean		TRUE\r\n"
						"RxExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"LeftEyeSecondaryPrismValue	number	1.00\r\n"
						"RightEyeSecondaryPrismValue	number	1.00\r\n"
						"LeftEyeSecondarPrismAxis	long		1\r\n"
						"LeftEyeSecondarPrismAxisStr	string	20	string sample value\r\n"
						"RightEyeSecondaryPrismAxis	long		1\r\n"
						"RightEyeSecondaryPrismAxisStr	string	20	string sample value\r\n"
						"ShipToPatient	boolean	TRUE\r\n"
						"InvoiceNo	string	20	string sample value\r\n"
						"OpticianLastName	string	50	string sample value\r\n"
						"OpticianFirstName	string	50	string sample value\r\n"
						"OpticianMiddleName	string	50	string sample value\r\n"
						"OpticianFullName	string	153	string sample value\r\n"
						"SelectedInsurance	string	255	string sample value\r\n"
						"SelectedInsuranceType	string	255	string sample value\r\n"
						);
						break;
					case 1:
						{
							switch (nSubReportID) {
								case 0:
									return _T("; Field definition file for table: ADORecordset\r\n"
									"Name	string	255	string sample value\r\n"
									"ResponsibilityType	string	255	string sample value\r\n"
									"Category	string	255	string sample value\r\n"
										"");
									
								break;
								case 1:
									return _T("; Field definition file for table: ADORecordset\r\n"
									"TreatmentName	string	255	string sample value\r\n"
									"TreatmentCode	string	100	string sample value\r\n"
										"");
								break;

								case 2:
									return _T("; Field definition file for table: ADORecordset\r\n"
									"TreatmentName	string	255	string sample value\r\n"
									"TreatmentCode	string	100	string sample value\r\n"
										"");
								break;
							
						
								case 3:
									//(e.lally 2011-05-31) PLID 43840 - Added ServiceQuantity
									return _T("; Field definition file for table: ADORecordset\r\n"
									"CLServiceID	long		1\r\n"
									"Code	string	50	string sample value\r\n"
									"ItemName	string	255	string sample value\r\n"
									"UnitPrice	currency		1.00\r\n"
									"Quantity	number		1.00\r\n"
									"ItemPrice	currency		1.00\r\n"
									"ItemDiscount	currency		1.00\r\n"
									"ItemPriceAfterDiscount	currency		1.00\r\n"
									"PatientRespAmt	currency		1.00\r\n"
									"InsuranceRespAmt	currency		1.00\r\n"
									"UnitCost	currency		1.00\r\n"
									"");
								break;
							}
						}
				}
			break;

		case 707: // (j.gruber 2011-05-06 16:06) - PLID 43584
			// (d.singleton 2012-06-25 15:29) - PLID 51189
			return _T("; Field definition file for table: ADORecordset \r\n"
						" ApptID	long		1 \r\n"
						" UserDefinedID	long		1 \r\n"
						" First	string	50	string sample value \r\n"
						" Middle	string	50	string sample value \r\n"
						" Last	string	50	string sample value \r\n"
						" Address1	string	150	string sample value \r\n"
						" Address2	string	150	string sample value \r\n"
						" City	string	50	string sample value \r\n"
						" MonthYear	string	20	string sample value \r\n"
						" State	string	20	string sample value \r\n"
						" Zip	string	20	string sample value \r\n"
						" HomePhone	string	20	string sample value \r\n"
						" WorkPhone	string	20	string sample value \r\n"
						" CellPhone	string	20	string sample value \r\n"
						" Email	string	50	string sample value \r\n"
						" StartTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						" EndTime	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						" ApptNotes	memo	255	string sample value \r\n"
						" Purpose	memo	255	string sample value \r\n"
						" Resources	memo	255	string sample value \r\n"
						" AptTypeName	string	50	string sample value \r\n"
						" TDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						" SumAmount	currency		1.00 \r\n"
						" ChargeDesc	string	255	string sample value \r\n"
						" ConvGroup	string	50	string sample value \r\n"
						" Type	string	11	string sample value \r\n"
						" ServiceName	string	255	string sample value \r\n"
						" ServiceCode	string	50	string sample value \r\n"
						" SubCode	string	50	string sample value \r\n"
						" Name	string	37	string sample value ");
		break;

		// (r.wilson 7/10/2012) PLID 51423 - This report will no longer be used. It was replaced by report 737
		/*
		case 706:
			{// (s.dhole 2011-05-05 09:54) - PLID 42953 - Add Glasses Rx Report
			// (s.dhole 2011-06-17 11:22) - PLID 44160  - Added RxExpirationDate
			// (b.spivey, November 15, 2011) - PLID 44918 - Added LeftSecondaryPrism and RightSecondaryPrism 
		    // (s.dhole 2011-12-08 13:12) - PLID 50929 added LeftEyeSecondarPrismAxis ,LeftEyeSecondarPrismAxisStr	, RightEyeSecondaryPrismAxis	, RightEyeSecondaryPrismAxisStr	
			// (d.singleton 2012-06-25 15:29) - PLID 51189
			return _T("; Field definition file for table: ADORecordset \r\n"
					"ID	long		1 \r\n"
					"PersonID	long		1 \r\n"
					"LeftLensDetailRxID	long		1 \r\n"
					"RightLensDetailRxID	long		1 \r\n"
					"RxDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"RightLensRxID	long		1 \r\n"
					"RightEyeFarHalfPd	number		1.00 \r\n"
					"RightEyeNearPd	number		1.00 \r\n"
					"RightEyeSegHeight	number		1.00 \r\n"
					"RightEyeSphere	number		1.00 \r\n"
					"RightCylinder	number		1.00 \r\n"
					"RightCylinderAxis	long		1 \r\n"
					"RightAddition	number		1.00 \r\n"
					"RightPrism	number		1.00 \r\n"
					"RightPrismAxis	long		1 \r\n"
					"LeftEyeFarHalfPd	number		1.00 \r\n"
					"LeftEyeNearPd	number		1.00 \r\n"
					"LeftEyeSegHeight	number		1.00 \r\n"
					"LeftEyeSphere	number		1.00 \r\n"
					"LeftCylinder	number		1.00 \r\n"
					"LeftCylinderAxis	long		1 \r\n"
					"LeftAddition	number		1.00 \r\n"
					"LeftPrism	number		1.00 \r\n"
					"LeftPrismAxis	long		1 \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"PatientAddress1	string	150	string sample value \r\n"
					"PatientAddress2	string	150	string sample value \r\n"
					"PatientCity	string	50	string sample value \r\n"
					"PatientState	string	20	string sample value \r\n"
					"PatientZip	string	20	string sample value \r\n"
					"PatientGender	byte		1 \r\n"
					"PatientHomePhone	string	20	string sample value \r\n"
					"PatientWorkPhone	string	20	string sample value \r\n"
					"PatientExtension	string	10	string sample value \r\n"
					"PatientCellPhone	string	20	string sample value \r\n"
					"PatientBirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientSocialSecurity	string	11	string sample value \r\n"
					"ProviderID	long		1 \r\n"
					"ProviderFirstName	string	50	string sample value \r\n"
					"ProviderMiddleName	string	50	string sample value \r\n"
					"ProviderLastName	string	50	string sample value \r\n"
					"ProviderPrefix	string	50	string sample value \r\n"
					"ProviderTitle	string	50	string sample value \r\n"
					"Location	string	255	string sample value \r\n"
					"LocationAddress1	string	75	string sample value \r\n"
					"LocationAddress2	string	75	string sample value \r\n"
					"LocationCity	string	50	string sample value \r\n"
					"LocationState	string	50	string sample value \r\n"
					"LocationZip	string	50	string sample value \r\n"
					"LocationPhone	string	20	string sample value \r\n"
					"LocationFax	string	50	string sample value \r\n"
					"RightPrismAxisStr	string	20	string sample value \r\n"
					"LeftPrismAxisStr	string	20	string sample value \r\n"
					"RxExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"RightSecondaryPrism	number	1.00 \r\n"
					"LeftSecondaryPrism	number	1.00 \r\n"
					"LeftEyeSecondaryPrismAxis	long		1\r\n"
					"LeftEyeSecondaryPrismAxisStr	string	20	string sample value\r\n"
					"RightEyeSecondaryPrismAxis	long		1\r\n"
					"RightEyeSecondaryPrismAxisStr	string	20	string sample value\r\n"
					"");
				break;
				*/

			case 710:
				//(c.copits 2011-07-12) PLID 17459 - Have a report where an administrator can view the deleted pracyakker messages
				return _T("; Field definition file for table: ADORecordset \n"
					"MessageID	long		1 \n"
					"Regarding	string	255	string sample value \n"
					"Priority	string	255	string sample value \n"
					"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
					"Sender	string	255	string sample value \n"
					"Recipient	string	255	string sample value \n"
					"Text	memo	3500	string sample value \n"
					"MessageGroupID	long		1 \n"
					"UserID	long		1 \n");
				break;

			//}

		case 711: // (j.jones 2011-07-18 16:12) - PLID 44582 - Charges Fully Adjusted By E-Remittance
			return _T("; Field definition file for table: ADORecordset \n"
					"PatientName	string	153	string sample value \n"
					"UserDefinedID	long		1 \n"
					"PatID	long		1 \n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"BillID	long		1 \n"
					"ChargeDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"TDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"IDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"ChargeID	long		1 \n"
					"Code	string	50	string sample value \n"
					"ChargeDescription	string	255	string sample value \n"
					"ChargeAmount	currency		1.00 \n"
					"TotalApplied	currency		1.00 \n"
					"AppliedAmount	currency		1.00 \n"
					"AdjustmentAmount	currency		1.00 \n"
					"AdjustmentDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"AdjCreatedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"InsCoID	long		1 \r\n"
					"InsuranceCompany	string	255	string sample value \n"
					"AdjustmentDescription	string	255	string sample value \n"
					"ProvID	long		1 \n"
					"ProvName	string	153	string sample value \n"
					"LocID	long		1 \n"
					"LocName	string	255	string sample value \n"
					"AdjCategory	string	150	string sample value \n"
					"GroupCode	string	10	string sample value \n"
					"GroupCodeDesc	memo		string sample value \n"
					"ReasonCode	string	10	string sample value \n"
					"ReasonCodeDesc	memo		string sample value \n");
			break;
		case 723: // (b.spivey, March 30, 2012) - PLID 48696 - Request Report
			return _T(";  Field definition file for table: ADORecordset \n"
				"PatientID	long		1 \n"
				"PatientName	string	153	string sample value \n"
				"PatID	long		1 \n"
				"RequestID	long		1 \n"
				"InsuranceCompanyName	string	255	string sample value \n"
				"RespTypeName	string	255	string sample value \n"
				"ProviderName	string	153	string sample value \n"
				"ProvID	long		1 \n"
				"LastSentDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"CreatedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"ReceivedDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"ResponseID	long		1 \n"
				"ResponseText	memo		string sample value \n"
				"HasDetails	boolean		TRUE \n"
				"ResponseDetailID	long		1 \n"
				"Authorized	boolean		TRUE \n"
				"TypeOfService	string	255	string sample value \n"
				"CoverageLevel	string	255	string sample value \n"
				"FullBenefit	memo		string sample value \n"
				"CoverageDesc	string	255	string sample value \n"
				"ExtraMessage	memo		string sample value \n"
				"CurrencyValue	currency		1.00 \n"
				"PercentageValue	number		1.00 \n"
				"QuantityType	string	255	string sample value \n"
				"QuantityValue	number		1.00 \n"	
				"InNetwork	boolean		TRUE \n"
				"InsuranceType	string	255	string sample value \n"
				"BenefitID	long		1 \n"
				"BenefitExcluded	boolean		TRUE \n"
				"CoverageID	long		1 \n"
				"CoverageExcluded	boolean		TRUE \n"
				"ServiceID	long		1 \n"
				"ServiceExcluded	boolean		TRUE \n"
				);
			break;

		case 725: // (r.gonet 02/24/2012) - PLID 47646 - Media Cost Analysis
			return _T("; Field definition file for table: ADORecordset \n"
				"LadderID	long		1 \n"
				"Date	datetime		Jan 5, 1994 1:23:45 PM \n"
				"PatID	long		1 \n"
				"LocID	long		1 \n"
				"ProcID	long		1 \n"
				"ProcedureName	string	100	string sample value \n"
				"HasConsult	long		1 \n"
				"HasSurgery	long		1 \n"
				"ReferralName	string	50	string sample value \n"
				"ReferralID	long		1 \n"
				"TopLevelReferralName	string	50	string sample value \n"
				"TopLevelReferralID	long	1 \n"
				"ReferralCosts	currency		1.00 \n"
				"IsMedia	long		1 \n"
				"IsNonMedia	long		1 \n");
			break;

			case 726:// (s.dhole 2012-05-07 14:58) - PLID 49791
				// (d.singleton 2012-06-25 15:30) - PLID 51189
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"FramesDataID	long		1 \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	150	string sample value \r\n"
					"SupplierAddress2	string	150	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ColorDescription	string	50	string sample value \r\n"
					"StyleName	string	50	string sample value \r\n"
					"ManufacturerName	string	50	string sample value \r\n"
					"ColorCode	string	20	string sample value \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"DesignName	string	255	string sample value \r\n"
					"DesignCode	string	100	string sample value \r\n"
					"MaterialName	string	255	string sample value \r\n"
					"MaterialCode	string	100	string sample value \r\n"
					"TreatmentName	string	255	string sample value \r\n"
					"TreatmentCode	string	100	string sample value \r\n");
			break;

		case 737:			
				//(r.wilson 5/18/2012) PLID 48952 - Added Optical Prescription Report
				// (d.singleton 2012-06-25 15:30) - PLID 51189
				// (j.dinatale 2013-04-12 11:42) - PLID 55862 - include the Doc Ins fields for both lenses
			return _T(
						"; Field definition file for table: ADORecordset\r\n"
						"PersonID	long		1 \r\n"
						"PatientFirstName	string	50	string sample value \r\n"
						"PatientMiddleName	string	50	string sample value \r\n"
						"PatientLastName	string	50	string sample value \r\n"
						"PatientAddress1	string	150	string sample value \r\n"
						"PatientAddress2	string	150	string sample value \r\n"
						"PatientCity	string	50	string sample value \r\n"
						"PatientState	string	20	string sample value \r\n"
						"PatientZip	string	20	string sample value \r\n"
						"PatientGender	string	20	string sample value \r\n"
						"PatientHomePhone	string	20	string sample value \r\n"
						"PatientWorkPhone	string	20	string sample value \r\n"
						"PatientExtension	string	20	string sample value \r\n"
						"PatientCellPhone	string	20	string sample value \r\n"
						"PatientBirthDate	datetime		Jan 5, 1994 1:23:45 PM  \r\n"
						"PatientSocialSecurity	string	11	string sample value  \r\n"
						"ID	long		1 \r\n"
						"RxDate	datetime		Jan 5, 1994 1:23:45 PM  \r\n"
						"RightEyeNearPd	number	1.00  \r\n"
						"RightEyeSegHeight	number	1.00  \r\n"
						"RightEyeSphere	number	1.00  \r\n"
						"RightCylinder	number	1.00  \r\n"
						"RightAddition	number	1.00  \r\n"
						"RightPrism	number	1.00	string sample value  \r\n"
						"RightPrismAxis	long	1 \r\n"
						"RightBase1	string	20	string sample value\r\n"
						"RightBase2	string	20	string sample value\r\n"
						"RightDistPD	number	1.00 \r\n"
						"LeftEyeNearPd	number	1.00 \r\n"
						"LeftEyeSegHeight	number	1.00 \r\n"
						"LeftEyeSphere	number	1.00 \r\n"
						"LeftCylinder	number	1.00 \r\n"
						"LeftAddition	number	1.00 \r\n"
						"LeftPrism	number	1.00 \r\n"
						"LeftPrismAxis	long	1 \r\n"
						"LeftBase1	string	20	string sample value\r\n"
						"LeftBase2	string	20	string sample value\r\n"
						"LeftDistPD	number	1.00\r\n"
						"UserDefinedID	long		1\r\n"
						"ProviderID	long		1\r\n"
						"ProviderFirstName	string	50	string sample value\r\n"
						"ProviderMiddleName	string	50	string sample value\r\n"
						"ProviderLastName	string	50	string sample value\r\n"
						"ProviderPrefix	string	5	string sample value\r\n"
						"ProviderTitle	string	20	string sample value\r\n"
						"LocationName	string	255	string sample value\r\n"
						"LocationAddress1	string	75	string sample value\r\n"
						"LocationAddress2	string	75	string sample value\r\n"
						"LocationCity	string	50	string sample value\r\n"
						"LocationState	string	50	string sample value\r\n"
						"LocationZip	string	50	string sample value\r\n"
						"LocationPhone	string	20	string sample value\r\n"
						"LocationFax	string	20	string sample value\r\n"						
						"RxExpirationDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"RightSecondaryPrism	number	1.00\r\n"
						"LeftSecondaryPrism	number	1.00\r\n"
						"ConLensRxDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"
						"ConLensRightDiameter	number	1.00\r\n"
						"ConLensRightEyeSphere	number	1.00\r\n"
						"ConLensRightCylinder	number	1.00\r\n"
						"ConLensRightCylinderAxis	long	1\r\n"
						"ConLensRightBC	number	1.00\r\n"
						"ConLensRightAddition	number	1.00\r\n"
						"ConLensLeftDiameter	number	1.00\r\n"
						"ConLensLeftEyeSphere	number	1.00\r\n"
						"ConLensLeftCylinder	number	1.00\r\n"
						"ConLensLeftCylinderAxis	number	1.00\r\n"
						"ConLensLeftAddition	number	1.00\r\n"
						"ConLensLeftBC	number	1.00\r\n"
						"ConLensRxExpirationDate	datetime		Jan 5, 1994 1:23:45 PM\r\n"	
						"ConLensRxRightDocIns	memo	string sample value \r\n"
						"ConLensRxLeftDocIns	memo	string sample value \r\n"
				);
				break;

			case 729: 
				// (s.dhole 2012-05-21 11:25) - PLID 50531 Create Contact Lens Order 
				// (s.dhole 2012-06-05 12:33) - PLID 50777 Added Category to subrport 0 and rename  VisionRespAmt to  InsuranceRespAmt (Subreport 3)
					// (s.dhole 2012-06-19 11:48) - PLID 50929 - increase size of Rx note
					// (s.dhole 2012-05-21 11:25) - PLID 50531 Remove OrderNote and provider
				// (j.dinatale 2013-04-12 11:42) - PLID 55862 - include the Doc Ins fields for both lenses
				switch (nSubReport) {
					case 0:
						return _T("; Field definition file for table: ADORecordset \r\n"
						"ID	long		1 \r\n"
						"LocationID	long		1 \r\n"
						"PatientID	long		1 \r\n"
						"InvoiceNo	string	20	string sample value \r\n"
						"OrderCreateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"GlassesSupplierLocationID	long		1 \r\n"
						"GlassesCatalogFrameTypeID	long		1 \r\n"
						"SupplierID	long		1 \r\n"
						"OrderMessage	string	255	string sample value \r\n"
						"GlassesOrderStatusID	long		1 \r\n"
						"SupplierLocation	long		1 \r\n"
						"SupplierWorkPhone	string	20	string sample value \r\n"
						"SupplierFax	string	20	string sample value \r\n"
						"SupplierCompanyName	string	150	string sample value \r\n"
						"SupplierAddress1	string	150	string sample value \r\n"
						"SupplierAddress2	string	150	string sample value \r\n"
						"SupplierCity	string	50	string sample value \r\n"
						"SupplierState	string	20	string sample value \r\n"
						"SupplierZip	string	20	string sample value \r\n"
						"PatientBirthDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"SupplierTrackingId	string	50	string sample value \r\n"
						"Description	string	255	string sample value \r\n"
						"UserName	string	50	string sample value \r\n"
						"LocationName	string	255	string sample value \r\n"
						"LocationAddress1	string	75	string sample value \r\n"
						"LocationAddress2	string	75	string sample value \r\n"
						"LocationCity	string	50	string sample value \r\n"
						"LocationState	string	50	string sample value \r\n"
						"LocationsZip	string	50	string sample value \r\n"
						"LocationMainPhone	string	20	string sample value \r\n"
						"LocationsPhone	string	20	string sample value \r\n"
						"LocationsFax	string	50	string sample value \r\n"
						"PatientUserDefinedID	long		1 \r\n"
						"PatientFirstName	string	50	string sample value \r\n"
						"PatientMiddleName	string	50	string sample value \r\n"
						"PatientLastName	string	50	string sample value \r\n"
						"PatientAddress1	string	150	string sample value \r\n"
						"PatientAddress2	string	150	string sample value \r\n"
						"PatientCity	string	50	string sample value \r\n"
						"PatientState	string	20	string sample value \r\n"
						"PatientZip	string	20	string sample value \r\n"
						"PatientHomePhone	string	20	string sample value \r\n"
						"PatientWorkPhone	string	20	string sample value \r\n"
						"RightLensDetailRxID	long		1 \r\n"
						"LeftLensDetailRxID	long		1 \r\n"
						"LeftEyePrescriptionSphere	number		1.00 \r\n"
						"LeftEyeCylinderValue	number		1.00 \r\n"
						"LeftEyeCylinderAxis	long		1 \r\n"
						"LeftLensBC	number		1.00 \r\n"
						"LeftLensDiameter	number		1.00 \r\n"
						"LeftLensColor	string	25	string sample value \r\n"
						"LeftLensNote	memo	string sample value \r\n"
						"LeftEyeOtherInfoID	long		1 \r\n"
						"RightEyeOtherInfoID	long		1 \r\n"
						"RightEyePrescriptionSphere	number		1.00 \r\n"
						"RightEyeCylinderValue	number		1.00 \r\n"
						"RightEyeCylinderAxis	long		1 \r\n"
						"RightLensBC	number		1.00 \r\n"
						"RightLensDiameter	number		1.00 \r\n"
						"RightLensColor	string	25	string sample value \r\n"
						"RightLensNote	memo	string sample value \r\n"
						"RightEyeAdditionValue	number		1.00 \r\n"
						"LensRxID	long		1 \r\n"
						"Date	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"LensRxDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"IsContactLensOrder	boolean		TRUE \r\n"
						"RxExpirationDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"RxIssueDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"ShipToPatient	boolean		TRUE \r\n"
						"OpticianFirstName	string	50	string sample value \r\n"
						"OpticianMiddleName	string	50	string sample value \r\n"
						"OpticianFullName	string	153	string sample value \r\n"
						"OpticianLastName	string	50	string sample value \r\n"
						"ProviderFirstName	string	50	string sample value \r\n"
						"ProviderMiddleName	string	50	string sample value \r\n"
						"ProviderLastName	string	50	string sample value \r\n"
						"ProviderFullName	string	153	string sample value \r\n"
						"LeftEyeAdditionValue	number		1.00 \r\n"
						"SelectedInsurance	string	255	string sample value \r\n"
						"SelectedInsuranceType	string	255	string sample value \r\n"
						"LeftDocIns	memo	string sample value \r\n"
						"RightDocIns	memo	string sample value \r\n"
						);
						break;
					case 1:
						{
							switch (nSubReportID) {
								case 0:
									return _T("; Field definition file for table: ADORecordset \r\n"
										"Name	string	255	string sample value \r\n"
										"ResponsibilityType	string	255	string sample value \r\n"
										"Category	string	255	string sample value \r\n"
										"");
								break;
								case 1:
									return _T("; Field definition file for table: ADORecordset \r\n"
									"CLServiceID	long		1 \r\n"
									"Code	string	50	string sample value \r\n"
									"ItemName	string	255	string sample value \r\n"
									"UnitPrice	currency		1.00 \r\n"
									"Quantity	number		1.00 \r\n"
									"ItemPrice	currency		1.00 \r\n"
									"ItemDiscount	currency		1.00 \r\n"
									"ItemPriceAfterDiscount	currency		1.00 \r\n"
									"PatientRespAmt	currency		1.00 \r\n"
									"InsuranceRespAmt	currency		1.00 \r\n"
									"UnitCost	currency		1.00  \r\n"
										"");
								break;

							}
						}
				}
			break;
			case 730:
				// Optical Product Sale By Optician
			/* Version History
				// (s.dhole 2012-05-09 15:49) - PLID 49787 Created.  
			*/
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"FramesDataID	long		1 \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	75	string sample value \r\n"
					"SupplierAddress2	string	75	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"DesignName	string	255	string sample value \r\n"
					"DesignCode	string	100	string sample value \r\n"
					"MaterialName	string	255	string sample value \r\n"
					"MaterialCode	string	100	string sample value \r\n"
					"TreatmentName	string	255	string sample value \r\n"
					"TreatmentCode	string	100	string sample value \r\n");

				break;
		case 731:
			// Optical Orders - By Supplier
			/* Version History
				// (s.dhole 2012-05-10 13:59) - PLID 49785
			*/
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"FramesDataID	long		1 \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	75	string sample value \r\n"
					"SupplierAddress2	string	75	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"DesignName	string	255	string sample value \r\n"
					"DesignCode	string	100	string sample value \r\n"
					"MaterialName	string	255	string sample value \r\n"
					"MaterialCode	string	100	string sample value \r\n"
					"TreatmentName	string	255	string sample value \r\n"
					"TreatmentCode	string	100	string sample value \r\n");

				break;
			case 732:
			// Optical Orders - By Status
			/* Version History
				// (s.dhole 2012-05-10 13:59) - PLID 49789
			*/
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"FramesDataID	long		1 \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	75	string sample value \r\n"
					"SupplierAddress2	string	75	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"DesignName	string	255	string sample value \r\n"
					"DesignCode	string	100	string sample value \r\n"
					"MaterialName	string	255	string sample value \r\n"
					"MaterialCode	string	100	string sample value \r\n"
					"TreatmentName	string	255	string sample value \r\n"
					"TreatmentCode	string	100	string sample value \r\n");
				break;	
		case 742: // (j.deskurakis 09/28/2012) - PLID 29105 - Paid Time Off by Department
			return _T(
					"; Field definition file for table: ADORecordset \n"
					"Employee	string	50	string sample value \n"
					"year	long		1 \n"
					"PatID	long		1 \n"
					"DepID	long		1 \n"
					"Department	string	255	string sample value \n"
					"VacaAll	long		1 \n"
					"vacaused	number		1.00 \n"
					"VacaRemain	number		1.00 \n"
					"SickAll	long		1 \n"
					"sickused	number		1.00 \n"
					"SickRemain	number		1.00 \n"
					"otherused	number		1.00 \n"
					"HireDate	datetime		Jan 5, 1994 1:23:45 PM \n"
					"totALL	long		1 \n"
					"totUsed	number		1.00 \n"
					"totRemain	number		1.00 \n"
			);
			break;	

		case 733:
			// Products Sold off the shelf
			/* Version History
				// (s.dhole 2012-05-22 17:59) - PLID 50577
			*/
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"FramesDataID	long		1 \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	75	string sample value \r\n"
					"SupplierAddress2	string	75	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"DesignName	string	255	string sample value \r\n"
					"DesignCode	string	100	string sample value \r\n"
					"MaterialName	string	255	string sample value \r\n"
					"MaterialCode	string	100	string sample value \r\n"
					"TreatmentName	string	255	string sample value \r\n"
					"TreatmentCode	string	100	string sample value \r\n");
				break;
			case 734:
			// Contact Lens sold - By Manufacturer
			/* Version History
				// (s.dhole 2012-05-23 09:43) - PLID 49786 New Report
			*/
					return _T("; Field definition file for table: ADORecordset \r\n"
					"LocID	long		1 \r\n"
					"LocationName	string	255	string sample value \r\n"
					"ProviderFirst	string	50	string sample value \r\n"
					"ProviderMiddle	string	50	string sample value \r\n"
					"ProviderLast	string	50	string sample value \r\n"
					"GlassesOrderType	string	18	string sample value \r\n"
					"GlassesOrderTypeID	byte		1 \r\n"
					"Note	string	255	string sample value \r\n"
					"ProductName	string	255	string sample value \r\n"
					"ProductDefaultCost	currency		1.00 \r\n"
					"ProductType	string	7	string sample value \r\n"
					"OrderDescription	string	255	string sample value \r\n"
					"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"OrderSupplier	string	50	string sample value \r\n"
					"ShipToPatient	boolean		TRUE \r\n"
					"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"VisionWebOrderNo	string	50	string sample value \r\n"
					"GlassesOrderStatusID	long		1 \r\n"
					"ItemQuantity	long		1 \r\n"
					"IsOffTheShelf	boolean		TRUE \r\n"
					"ItemCost	currency		1.00 \r\n"
					"ItemPrice	currency		1.00 \r\n"
					"ItemPriceAfterDiscount	currency		1.00 \r\n"
					"AmtPayment	currency		1.00 \r\n"
					"TotalDiscount	currency		1.00 \r\n"
					"OrderNo	long		1 \r\n"
					"InvoiceNo	string	20	string sample value \r\n"
					"OrderStatusName	string	50	string sample value \r\n"
					"OpticianFirstName	string	50	string sample value \r\n"
					"OpticianMiddleName	string	50	string sample value \r\n"
					"OpticianLastName	string	50	string sample value \r\n"
					"OpticianID	long		1 \r\n"
					"SupplierAddress1	string	75	string sample value \r\n"
					"SupplierAddress2	string	75	string sample value \r\n"
					"SupplierCity	string	50	string sample value \r\n"
					"SupplierState	string	20	string sample value \r\n"
					"SupplierZip	string	20	string sample value \r\n"
					"SupplierWorkPhone	string	20	string sample value \r\n"
					"SupplierEmail	string	50	string sample value \r\n"
					"SupplierFax	string	20	string sample value \r\n"
					"SupplierID	long		1 \r\n"
					"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatientFirstName	string	50	string sample value \r\n"
					"PatientMiddleName	string	50	string sample value \r\n"
					"PatientLastName	string	50	string sample value \r\n"
					"UserDefinedID	long		1 \r\n"
					"PatientFullName	string	153	string sample value \r\n"
					"PatID	long		1 \r\n"
					"ProvID	long		1 \r\n"
					"ServiceID	long		1 \r\n"
					"ProvName	string	153	string sample value \r\n"
					"OpticianName	string	153	string sample value \r\n"
					"ContactLensName	string	50	string sample value \r\n"
					"Tint	string	50	string sample value \r\n"
					"LensesPerBox	string	50	string sample value \r\n"
					"GlassesContactLensTypeID	long		1 \r\n"
					"ContactLensManufacturerID	long		1 \r\n"
					"ManufacturerName	string	50	string sample value \r\n"
					"ContactLensType	string	50	string sample value \r\n");
					break;
		case 736:
			// Optical Orders Capture Rate
			/* Version History
				// (s.dhole 2012-05-23 09:43) - PLID 49790 New Report
			*/
					return _T("; Field definition file for table: ADORecordset  \r\n"
						"LocID	long		1 \r\n"
						"LocationName	string	255	string sample value \r\n"
						"ProviderFirst	string	50	string sample value \r\n"
						"ProviderMiddle	string	50	string sample value \r\n"
						"ProviderLast	string	50	string sample value \r\n"
						"RowType	string	12	string sample value \r\n"
						"GlassesOrderTypeID	long		1 \r\n"
						"Note	string	255	string sample value \r\n"
						"ProductName	string	255	string sample value \r\n"
						"ProductDefaultCost	currency		1.00 \r\n"
						"ProductType	string	7	string sample value \r\n"
						"FramesDataID	long		1 \r\n"
						"OrderDescription	string	255	string sample value \r\n"
						"OrderDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"OrderSupplier	string	50	string sample value \r\n"
						"ShipToPatient	boolean		TRUE \r\n"
						"BillDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"VisionWebOrderNo	string	50	string sample value \r\n"
						"GlassesOrderStatusID	long		1 \r\n"
						"ItemQuantity	long		1 \r\n"
						"IsOffTheShelf	boolean		TRUE \r\n"
						"ItemCost	currency		1.00 \r\n"
						"ItemPrice	currency		1.00 \r\n"
						"ItemPriceAfterDiscount	currency		1.00 \r\n"
						"AmtPayment	currency		1.00 \r\n"
						"TotalDiscount	currency		1.00 \r\n"
						"OrderNo	long		1 \r\n"
						"InvoiceNo	string	20	string sample value \r\n"
						"OrderStatusName	string	50	string sample value \r\n"
						"OpticianFirstName	string	50	string sample value \r\n"
						"OpticianMiddleName	string	50	string sample value \r\n"
						"OpticianLastName	string	50	string sample value \r\n"
						"OpticianID	long		1 \r\n"
						"SupplierAddress1	string	75	string sample value \r\n"
						"SupplierAddress2	string	75	string sample value \r\n"
						"SupplierCity	string	50	string sample value \r\n"
						"SupplierState	string	20	string sample value \r\n"
						"SupplierZip	string	20	string sample value \r\n"
						"SupplierWorkPhone	string	20	string sample value \r\n"
						"SupplierEmail	string	50	string sample value \r\n"
						"SupplierFax	string	20	string sample value \r\n"
						"SupplierID	long		1 \r\n"
						"OrderUpdateDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
						"PatientFirstName	string	50	string sample value \r\n"
						"PatientMiddleName	string	50	string sample value \r\n"
						"PatientLastName	string	50	string sample value \r\n"
						"UserDefinedID	long		1 \r\n"
						"PatientFullName	string	153	string sample value \r\n"
						"PatID	long		1 \r\n"
						"ProvID	long		1 \r\n"
						"ServiceID	long		1 \r\n"
						"ProvName	string	153	string sample value \r\n"
						"OpticianName	string	153	string sample value \r\n"
						"DesignName	string	255	string sample value \r\n"
						"DesignCode	string	100	string sample value \r\n"
						"MaterialName	string	255	string sample value \r\n"
						"MaterialCode	string	100	string sample value \r\n"
						"TreatmentName	string	255	string sample value \r\n"
						"TreatmentCode	string	100	string sample value \r\n"
						"EMREmnId	long		1 \r\n"
						"OrderEMNID	long		1 \r\n"
						"EMNDate	datetime		Jan 5, 1994 1:23:45 PM \r\n");
					break;
		case 738: // (r.gonet 06/11/2012) - PLID 47647 - Weekly Advertising Analysis
			return _T(
				"; Field definition file for table: ADORecordset \n"
				"FilterDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"PreviousSunday	datetime		Jan 5, 1994 1:23:45 PM \n"
				"FollowingSaturday	datetime		Jan 5, 1994 1:23:45 PM \n"
				"HasInterest	long		1 \n"
				"LadderID	long		1 \n"
				"FirstInterestDate	datetime		Jan 5, 1994 1:23:45 PM \n"
				"PatientID	long		1 \n"
				"LocID	long		1 \n"
				"ProcID	long		1 \n"
				"ProcedureName	string	100	string sample value \n"
				"HasConsult	long		1 \n"
				"HasSurgery	long		1 \n"
				"ReferralName	string	50	string sample value \n"
				"ReferralID	long		1 \n"
				"TopLevelReferralName	string	50	string sample value \n"
				"TopLevelReferralID	long		1 \n"
				"AllReferralCostsThisWeek	currency		1.00 \n"
				"RevenueForSurg	currency		1.00 \n"
			);
			break;

		case 743: //(r.wilson 10/24/2012) plid 51770 - Prescriptions By Provider Report
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	memo sample data \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"					
				);
			break;

			case 744: //(r.wilson 10/29/2012) plid 51771 - Prescriptions by User Report
			return _T(
					"; Field definition file for table: ADORecordset \r\n"
					"PatientMedicationID	long		1 \r\n"
					"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatID	long		1 \r\n"
					"PatientFirst	string	50	string sample value \r\n"
					"PatientLast	string	50	string sample value \r\n"
					"PatientPhone	string	20	string sample value \r\n"
					"Drug	string	255	string sample value \r\n"
					"StatusID	long		1 \r\n"
					"Status	string	60	string sample value \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"UserEnteredByID	long		1 \r\n"
					"UserEnteredByFirst	string	50	string sample value \r\n"
					"UserEnteredByLast	string	50	string sample value \r\n"
					"EnteredByUsername	string	50	string sample value \r\n"
					"Description	string	70	string sample value \r\n"
					"EnglishDescription	memo		memo sample data \r\n"
					"SigPatientExplanation	memo		memo sample data \r\n"
					"SigPatientExplanationExists	long		1 \r\n"
					"Quantity	string	50	string sample value \r\n"
					"Unit	string	100	string sample value \r\n"
					"Notes	string	255	string sample value \r\n"
					"NoteToPharmacistExists	long		1 \r\n"
					"PharmacyID	long		1 \r\n"
					"Pharmacy	string	255	string sample value \r\n"
					"PharmacyPhone	string	20	string sample value \r\n"
					"Route	string	20	string sample value \r\n"
					"Sch	string	3	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"ProvFirst	string	50	string sample value \r\n"
					"ProvLast	string	50	string sample value \r\n"
					"ProvPrefix	string	50	string sample value \r\n"
					"Refills	string	50	string sample value\r\n"			
				);
			break;

				case 745: //(r.wilson 10/30/2012) plid 53462 - Prescriptions by Diagnosis Code Report
			return _T(
					"; Field definition file for table: ADORecordset \r\n"
					"PatientMedicationID	long		1 \r\n"
					"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
					"PatID	long		1 \r\n"
					"PatientFirst	string	50	string sample value \r\n"
					"PatientLast	string	50	string sample value \r\n"
					"PatientPhone	string	20	string sample value \r\n"
					"Drug	string	255	string sample value \r\n"
					"StatusID	long		1 \r\n"
					"Status	string	60	string sample value \r\n"
					"LocID	long		1 \r\n"
					"Location	string	255	string sample value \r\n"
					"UserEnteredByFirst	string	50	string sample value \r\n"
					"UserEnteredByLast	string	50	string sample value \r\n"
					"EnteredByUsername	string	50	string sample value \r\n"
					"Description	string	70	string sample value \r\n"
					"EnglishDescription	memo		memo sample data \r\n"
					"SigPatientExplanation	memo		memo sample data \r\n"
					"SigPatientExplanationExists	long		1 \r\n"
					"Quantity	string	50	string sample value \r\n"
					"Unit	string	100	string sample value \r\n"
					"Notes	string	255	string sample value \r\n"
					"NoteToPharmacistExists	long		1 \r\n"
					"PharmacyID	long		1 \r\n"
					"Pharmacy	string	255	string sample value \r\n"
					"PharmacyPhone	string	20	string sample value \r\n"
					"Route	string	20	string sample value \r\n"
					"Sch	string	3	string sample value \r\n"
					"ProvID	long		1 \r\n"
					"ProvFirst	string	50	string sample value \r\n"
					"ProvLast	string	50	string sample value \r\n"
					"ProvPrefix	string	50	string sample value \r\n"
					"DiagCodeID	long		1 \r\n"
					"DiagCode	string	50	string sample value \r\n"
					"DiagCodeDesc	string	255	string sample value \r\n"			
				);
			break;

				case 746: //(r.wilson 10/31/2012) plid 53463 - Prescriptions by Patient Report
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	string	70	string sample value \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"
				"Refills	string	50	string sample value\r\n"			
				);
			break;

					case 747: //(r.wilson 11/1/2012) plid 53464 - Prescriptions by Transmission Type Report
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	string	70	string sample value \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"RouteID	long		1 \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"
				"Refills	string	50	string sample value\r\n"					
				);
			break;

					case 748: //(r.wilson 11/13/2012) plid 53715- Prescriptions Report by Insurance Company
			return _T(				
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	string	70	string sample value \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"
				"Refills	string	50	string sample value \r\n"
				"InsuranceCoID	long		1 \r\n"
				"InsuranceCoName	string	255	string sample value \r\n"			
				);
			break;
					//(r.wilson 11/16/2012) plid 53804- Prescription Statistics Report
					case 749: 
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"Description	string	255	string sample value \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"RouteID	long		1 \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"
				"InsuranceCoID	long		1 \r\n"
				"InsuranceCoName	string	255	string sample value "
				"InsuranceCoType	long		1 \r\n"
				"NewCropGUID	string	255	string sample value \r\n"
				);
			break;

			case 750: //(r.wilson 1/25/2013) pl 54856 - Prescriptions by DEA Schedule
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	string	70	string sample value \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"SchInt	long		1 \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"					
				);
			break;

			case 751: //(r.wilson 1/28/2013) pl 54896 - Deplicate Medications Report
			return _T(
				"; Field definition file for table: ADORecordset \r\n"
				"PatientMedicationID	long		1 \r\n"
				"PrescriptionDate	datetime		Jan 5, 1994 1:23:45 PM \r\n"
				"PatID	long		1 \r\n"
				"PatientFirst	string	50	string sample value \r\n"
				"PatientLast	string	50	string sample value \r\n"
				"PatientPhone	string	20	string sample value \r\n"
				"DrugID	long		1 \r\n"
				"Drug	string	255	string sample value \r\n"
				"StatusID	long		1 \r\n"
				"Status	string	60	string sample value \r\n"
				"LocID	long		1 \r\n"
				"Location	string	255	string sample value \r\n"
				"UserEnteredByID	long		1 \r\n"
				"UserEnteredByFirst	string	50	string sample value \r\n"
				"UserEnteredByLast	string	50	string sample value \r\n"
				"EnteredByUsername	string	50	string sample value \r\n"
				"Description	string	70	string sample value \r\n"
				"EnglishDescription	memo		memo sample data \r\n"
				"SigPatientExplanation	memo		memo sample data \r\n"
				"SigPatientExplanationExists	long		1 \r\n"
				"Quantity	string	50	string sample value \r\n"
				"Unit	string	100	string sample value \r\n"
				"Notes	string	255	string sample value \r\n"
				"NoteToPharmacistExists	long		1 \r\n"
				"PharmacyID	long		1 \r\n"
				"Pharmacy	string	255	string sample value \r\n"
				"PharmacyPhone	string	20	string sample value \r\n"
				"Route	string	20	string sample value \r\n"
				"Sch	string	3	string sample value \r\n"
				"SchInt	long		1 \r\n"
				"ProvID	long		1 \r\n"
				"ProvFirst	string	50	string sample value \r\n"
				"ProvLast	string	50	string sample value \r\n"
				"ProvPrefix	string	50	string sample value \r\n"					
				);
			break;

		default: 
			//this should never happen
			strReturn = "";
			ASSERT(FALSE);
	
		break;

	}

	if (strReturn.IsEmpty()) {

		ASSERT(FALSE);
		return "";
	}
	else {
		return strReturn;
	}


}

CString CReportInfo::GetSqlDailySchedule(bool bIncludeCancelled, long nSubLevel, long nSubRepNum) const
{
	/*	Version History
		DRT 7/30/03 - Added PrivFax field
		DRT 8/22/03 - This used to be called in GetRecordset, b/c it's used both from the Scheduler module (ID 17), and the PP setup, 
			(ID 380).  However, this report can be used for a 'Create Merge Group'.  Those are used a little differently than regular 
			reports, b/c they want the query only to build into their insert into clause.  The code for creating merge groups calls each
			GetSql...() function, and these 2 were not filled in.  So now all 3 places call this function to get the query, and do 
			whatever dirty work they need to from there.
		DRT 9/10/03 - Added PrivCell, OtherPhone, PrivOther fields.  Also reverified the report, whoever added CellPhone (and didn't put
			a note!) did not update the report file to actually be able to use it.
		DRT 2/2/2004 - Added Primary Care Physician field that can be added into editable reports.
		e.lally 8/4/05 - Added AuthNum and the More Info fields: Pager, PreferredContact, Duration, 
			CreatedLogin, ModifiedDate, ModifiedLogin, LastLM, PrimaryReferralSource
		JMM 9/28/05 - Changed the authnum to use the sql function
		(j.anspach 5-30-2006 15:20 PLID 19090) - Adding AppointmentsT.ArrivalTime
		(e.lally 2006-05-31) PLID 20762 - Corrected the way the patient age is calculated
		// (j.gruber 2008-09-11 12:26) - PLID 30284 - added allocations
		//(e.lally 2008-11-18) PLID 32070 - Fixed exception when filtering on appointment type
		// (j.jones 2010-06-30 14:46) - PLID 39428 - added up to 6 inscos (not inactive, up to 6 positive ID resp types)
		// (j.gruber 2011-07-22 12:07) - PLID 39885 - add text messaging in preferred contact
		// (j.armen 2011-07-22 15:16) - PLID 44205 - Added confirmed by field
		// (a.wilson 2012-02-24) PLID 48380 - Removed ':' from query to fix compatibility change errors.
		// (j.gruber 2012-09-10 16:58) - PLID 52033 - added appt fields
	*/
	//these are here because they use the same query, but are called from different spots in code
	//Daily Schedule
	//Note: When generating .ttx file, the Notes field needs to be manually set to a memo field (length 4000), 
	//and the Purpose field needs to be manually set to a memo field (length 500).
	CString strStatus;
	if(!bIncludeCancelled) strStatus = "AppointmentsT.Status <> 4";
	else strStatus = "1=1";

	CString strSQL;

	switch (nSubLevel) {
		case 0: 

			strSQL = _T("SELECT PatientsT.PersonID AS PatID, PatientsT.UserDefinedID, PersonT.First,  "
				"    PersonT.Middle, PersonT.Last, ResourceT.Item,  "
				"    AppointmentsT.Date AS Date,  "
				"    AppointmentsT.ArrivalTime, AppointmentsT.Notes, AptTypeT.Name AS Type,  "
				"    dbo.GetPurposeString(AppointmentsT.ID) AS Purpose, PersonT.HomePhone, PersonT.Email, PersonT.Fax, "
				"    PersonT.Pager, PersonT.BirthDate, "
				"    CASE WHEN AppointmentsT.Status = 4 THEN 'Cancelled' ELSE AptShowStateT.Name END AS StateText, "
				"    PersonT.WorkPhone, AppointmentsT.Confirmed, AppointmentsT.ConfirmedBy,  "
				"    CASE WHEN PatientsT.PreferredContact = 1 THEN 'Home' "
				"         WHEN PatientsT.PreferredContact = 2 THEN 'Work' "
				"         WHEN PatientsT.PreferredContact = 3 THEN 'Mobile' "
				"         WHEN PatientsT.PreferredContact = 4 THEN 'Pager' "
				"         WHEN PatientsT.PreferredContact = 5 THEN 'Other' "
				"         WHEN PatientsT.PreferredContact = 6 THEN 'Email' "
				"         WHEN PatientsT.PreferredContact = 7 THEN 'Text' "
				"         ELSE '' END AS PreferredContact, "
				"    convert(datetime, convert(varchar, AppointmentsT.StartTime, 14)) AS StartTime, "
				"    convert(datetime, convert(varchar, AppointmentsT.EndTime, 14)) AS EndTime, "
				"    DATEDIFF(minute, AppointmentsT.StartTime, AppointmentsT.EndTime) AS Duration, "
				"    AppointmentsT.CreatedLogin, AppointmentsT.ModifiedDate, AppointmentsT.ModifiedLogin, AppointmentsT.LastLM, "
				"    PersonT.PrivHome, PersonT.PrivWork, "
				"    ResourceT.ID AS ID, AppointmentsT.LocationID AS LocID, LocationsT.Name AS Location, ResourceT.ID AS ProvID /*Used for scheduler module*/, ResourceT.ID AS ResourceID, ShowState AS ShowState, "
				"    PersonT.Address1, PersonT.Address2, PersonT.City, PersonT.State, PersonT.Zip,  "
				"    (SELECT Name From ReferralSourceT WHERE ReferralSourceT.PersonID = PatientsT.ReferralID) AS ReferralSource,  "
				"    (SELECT First + ' ' + Middle + ' ' + Last + ' ' + Title FROM PersonT WHERE PersonT.ID = PatientsT.DefaultReferringPhyID) AS ReferringPhysician,  "
				"    PersonT.Title, PrivFax, PersonT.CellPhone, PrivCell, PersonT.OtherPhone, PrivOther, "
				"	 (SELECT First + ' ' + Middle + ' ' + Last + ' ' + Title FROM PersonT WHERE PersonT.ID = PatientsT.PCP) AS PriCarePhysician, "
				"    (SELECT TextParam FROM CustomFieldDataT WHERE PersonID = AppointmentsT.PatientID AND FieldID = 1) AS CustomText1, "
				"    (SELECT TextParam FROM CustomFieldDataT WHERE PersonID = AppointmentsT.PatientID AND FieldID = 2) AS CustomText2, "
				"    (SELECT TextParam FROM CustomFieldDataT WHERE PersonID = AppointmentsT.PatientID AND FieldID = 3) AS CustomText3, "
				"    (SELECT TextParam FROM CustomFieldDataT WHERE PersonID = AppointmentsT.PatientID AND FieldID = 4) AS CustomText4,  " 
				"	  Age = CASE WHEN PersonT.BirthDate IS NULL THEN NULL "
				"				  ELSE DATEDIFF(yy, PersonT.BirthDate, GetDate()) - "
				"					CASE WHEN MONTH(PersonT.Birthdate) > MONTH(GetDate()) OR (MONTH(PersonT.Birthdate) = MONTH(GetDate()) AND DAY(PersonT.Birthdate) > DAY(GetDate())) "
				"					THEN 1 ELSE 0 END "
				"			END, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 1)) AS PriInsCoName, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 2)) AS SecInsCoName, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 3)) AS ThirdInsCoName, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 4)) AS FourthInsCoName, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 5)) AS FifthInsCoName, "
				"    (SELECT Name From InsuranceCoT WHERE PersonID = (SELECT InsuranceCoID FROM InsuredPartyT INNER JOIN RespTypeT ON InsuredPartyT.RespTypeID = RespTypeT.ID "
				"			WHERE PatientID = AppointmentsT.PatientID AND RespTypeT.Priority = 6)) AS SixthInsCoName, "
				"    AppointmentsT.ID AS ApptID, "
				"    (SELECT Name FROM ReferralSourceT WHERE ReferralSourceT.PersonID = PatientsT.ReferralID) AS PrimReferralSource, "
				"    dbo.GetActiveAuthNumsByApptID(AppointmentsT.ID) AS AuthNum, "				
				"    (SELECT TOP 1 ID FROM PatientInvAllocationsT WHERE AppointmentID = AppointmentsT.ID AND Status != " + AsString((long)InvUtils::iasDeleted) + " ) AS AllocationID, "
				"    apptPriInsQ.InsCoName as ApptPriIns, \r\n"
				"    apptSecInsQ.InsCoName as ApptSecIns, \r\n"
				"    CASE WHEN ApptPriInsQ.InsCoID IS NULL THEN '' ELSE dbo.GetApptInsuranceList(AppointmentsT.ID) END as ApptInsList \r\n" 

				"FROM AptTypeT RIGHT OUTER JOIN "
				"    (AppointmentsT LEFT JOIN LocationsT ON AppointmentsT.LocationID = LocationsT.ID) ON  "
				"    AptTypeT.ID = AppointmentsT.AptTypeID LEFT OUTER JOIN "
				"    (AppointmentResourceT INNER JOIN ResourceT ON AppointmentResourceT.ResourceID = ResourceT.ID) ON  "
				"    AppointmentsT.ID = AppointmentResourceT.AppointmentID LEFT OUTER JOIN "
				"    PersonT INNER JOIN "
				"    PatientsT ON PersonT.ID = PatientsT.PersonID ON  "
				"    AppointmentsT.PatientID = PatientsT.PersonID "
				"	 LEFT JOIN AptShowStateT ON AppointmentsT.ShowState = AptShowStateT.ID "
				"			 LEFT JOIN (SELECT AptInsQ.AppointmentID, InsuranceCoT.Name as InsCoName, InsuranceCoT.PersonID as InsCoID FROM \r\n"
				"			(SELECT * FROM AppointmentInsuredPartyT WHERE Placement = 1) AptInsQ \r\n"
				"			LEFT JOIN InsuredPartyT ON AptInsQ.InsuredPartyID = InsuredPartyT.PersonID \r\n"
				"			LEFT JOIN InsuranceCoT ON InsuredPartyT.InsuranceCoID = InsuranceCoT.PersonID ) ApptPriInsQ \r\n"
				"			ON AppointmentsT.ID = ApptPriInsQ.AppointmentID \r\n"
				"			 LEFT JOIN (SELECT AptInsQ.AppointmentID, InsuranceCoT.Name as InsCoName, InsuranceCoT.PersonID as InsCoID FROM \r\n"
				"			(SELECT * FROM AppointmentInsuredPartyT WHERE Placement = 2) AptInsQ \r\n"
				"			LEFT JOIN InsuredPartyT ON AptInsQ.InsuredPartyID = InsuredPartyT.PersonID \r\n"
				"			LEFT JOIN InsuranceCoT ON InsuredPartyT.InsuranceCoID = InsuranceCoT.PersonID ) ApptSecInsQ \r\n"
				"			ON AppointmentsT.ID = ApptSecInsQ.AppointmentID \r\n"
				"WHERE (" + strStatus + ")");
		break;

		case 1:

			switch (nSubRepNum) {

				case 0:
						//Inventory Allocations
						// (d.thompson 2009-01-27) - PLID 32859 - Replaced beta with C&A module
						if (! g_pLicense->HasCandAModule(CLicense::cflrSilent)) {
							//(e.lally 2008-11-18) PLID 32070 - Added additional joins so we can use the same subfilters without exceptions
								//The where clause of 1=0 as before should prevent a performance hit
							strSQL = _T("SELECT -1 as AllocationID, -1 AS PatID, -1 AS LocID, "
								" -1 AS ApptID, '' AS AllocationNotes, -1 as AllocationStatus, GetDate() AS Date, "
								" -1 AS AllocationDetailID, -1 AS ProductID, -1 AS ProductItemID, -1 AS Quantity, -1 AS AllocationDetailStatus, "
								" '' AS AllocationDetailNotes, '' AS ProductName, '' AS SerialNum, getDate() as ExpDate, -1 as UserDefinedID, '' as FullName, "
								" '' AS PersonLocation, -1 AS ProvID, getDate() as StartTime, "
								" GetDAte() AS EndTime, '' AS ApptType, '' AS ApptPurpose, -1 AS StatusType, '' AS StatusText, "
								" getDate() AS AllocationStatusDate, "
								" -1  AS DetailStatusType, "
								" '' DetailStatusText, "
								" '' AS ProvName, "
								"  -1 as AllocLocID, -1 as ID, -1 as ShowState  "
								"FROM "
								"AppointmentsT LEFT JOIN LocationsT ON AppointmentsT.LocationID = LocationsT.ID "
								"LEFT JOIN AptTypeT ON AptTypeT.ID = AppointmentsT.AptTypeID "
								"LEFT JOIN AppointmentResourceT ON  AppointmentsT.ID = AppointmentResourceT.AppointmentID "
								"LEFT JOIN ResourceT ON AppointmentResourceT.ResourceID = ResourceT.ID "
								"LEFT JOIN PatientsT ON AppointmentsT.PatientID = PatientsT.PersonID "
								"LEFT JOIN PersonT ON PersonT.ID = PatientsT.PersonID "
								"LEFT JOIN AptShowStateT ON AppointmentsT.ShowState = AptShowStateT.ID "
								"WHERE 1 = 0 ");
						}
						else {
							//(e.lally 2008-11-18) PLID 32070 - Added join to AptTypeT for when the user filters on Appointment type
							strSQL =  _T("SELECT AllocationID, ApptPatID AS PatID, ApptLocID AS LocID, "
								"AppointmentID AS ApptID, AllocationNotes, AllocationStatus, ApptStartTime AS Date, "
								"AllocationDetailID, ProductID, ProductItemID, Quantity, AllocationDetailStatus, "
								"AllocationDetailNotes, ProductName, SerialNum, ExpDate, UserDefinedID, FullName, "
								"LocationName AS PersonLocation, ResourceID AS ProvID, AllocationListSubQ.StartTime AS StartTime, "
								"EndTime, ApptType, ApptPurpose, AllocationListSubQ.StatusType AS StatusType, StatusText, "
								"AllocationListSubQ.AllocationStatusDate AS AllocationStatusDate, "
								"AllocationListSubQ.DetailStatusType AS DetailStatusType, "
								"AllocationListSubQ.DetailStatusText AS DetailStatusText, "
								"Coalesce(AllocationListSubQ.ProviderName, '') AS ProvName, "
								"LocationID as AllocLocID, "
								"ResourceID AS ID, "
								" ShowState AS ShowState "
								
								"FROM (SELECT "
								"PatientInvAllocationsT.ID AS AllocationID, "
								"PatientInvAllocationsT.PatientID , "
								"PatientInvAllocationsT.LocationID, "
								"PatientInvAllocationsT.AppointmentID, "
								"PatientInvAllocationsT.Notes AS AllocationNotes, "
								"PatientInvAllocationsT.Status AS AllocationStatus, "
								"PatientInvAllocationsT.InputDate, "
								"PatientInvAllocationsT.ProviderID, "

								"PatientInvAllocationDetailsT.ID AS AllocationDetailID, "
								"PatientInvAllocationDetailsT.ProductID, "
								"PatientInvAllocationDetailsT.ProductItemID, "
								"PatientInvAllocationDetailsT.Quantity, "
								"PatientInvAllocationDetailsT.Status AS AllocationDetailStatus, "
								"PatientInvAllocationDetailsT.Notes AS AllocationDetailNotes, "

								"ServiceT.Name AS ProductName, "
								"ProductItemsT.SerialNum, ProductItemsT.ExpDate, "

								"PatientsT.UserDefinedID, "
								"PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS FullName, "
								"LocationsT.Name AS LocationName, "

								"ProviderPersonT.Last + ', ' + ProviderPersonT.First + ' ' + ProviderPersonT.Middle AS ProviderName, "

								"AppointmentsT.StartTime, AppointmentsT.EndTime, "
								"AptTypeT.Name AS ApptType, "
								"dbo.GetPurposeString(AppointmentsT.ID) AS ApptPurpose, "

								/* (c.haag 2008-01-08 16:15) - This is the granular version */
								"CASE WHEN (BilledCaseHistoryQ.ID Is Not Null AND PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsUsed) + ") OR "
								"PatientInvAllocationDetailsT.ID IN (SELECT AllocationDetailID FROM ChargedAllocationDetailsT) THEN 1 "
								"WHEN PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsUsed) + " THEN 2 "
								"WHEN PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsReleased) + " THEN 3 "
								"ELSE 0 END AS DetailStatusType, "

								"CASE WHEN (BilledCaseHistoryQ.ID Is Not Null AND PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsUsed) + ") OR "
								"PatientInvAllocationDetailsT.ID IN (SELECT AllocationDetailID FROM ChargedAllocationDetailsT) THEN 'Completed & Billed' "
								"WHEN PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsUsed) + " THEN 'Completed & Not Billed' "
								"WHEN PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsReleased) + " THEN 'Released' "
								"ELSE 'Active' END AS DetailStatusText, "
								
								/* (c.haag 2008-01-08 16:15) - This is the "consistent with the Allocations tab" version */
								"CASE WHEN PatientInvAllocationsT.Status = " + AsString((long)InvUtils::iasActive) + " AND (PatientInvAllocationDetailsT.Status IS NULL OR PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsActive) + " OR PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsOrder) + ") THEN 0 "
								"WHEN "
								//is linked to a billed case history
								"BilledCaseHistoryQ.ID Is Not Null OR "
								//has no unbilled products that are billable
								"(PatientInvAllocationsT.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.Status = " + AsString((long)InvUtils::iadsUsed) + " "
								"			AND InvAllocDetailQ.ID NOT IN (SELECT ChargeQ.AllocationDetailID FROM ChargedAllocationDetailsT ChargeQ "
								"			WHERE ChargeQ.ChargeID IN (SELECT LineItemQ.ID FROM LineItemT LineItemQ WHERE LineItemQ.Deleted = 0)) "
								"			AND InvAllocDetailQ.ProductID IN (SELECT ProductLocQ.ProductID FROM ProductLocationInfoT ProductLocQ WHERE ProductLocQ.Billable = 1 AND ProductLocQ.LocationID = PatientInvAllocationsT.LocationID)) "
								//does not have only released products
								"AND PatientInvAllocationsT.ID NOT IN (SELECT InvAllocQ.ID FROM PatientInvAllocationsT InvAllocQ WHERE InvAllocQ.Status = " + AsString((long)InvUtils::iasCompleted) + " "
								"			AND InvAllocQ.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.Status = " + AsString((long)InvUtils::iadsUsed) + "))"
								//does not have only non-billable products
								"AND PatientInvAllocationsT.ID NOT IN (SELECT InvAllocQ.ID FROM PatientInvAllocationsT InvAllocQ WHERE InvAllocQ.Status = " + AsString((long)InvUtils::iasCompleted) + " "
								"			AND InvAllocQ.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.ProductID IN "
								"				(SELECT ProductLocQ.ProductID FROM ProductLocationInfoT ProductLocQ WHERE ProductLocQ.Billable = 1 AND ProductLocQ.LocationID = PatientInvAllocationsT.LocationID))) "
								") "
								"THEN 1 "
								"ELSE 2 END AS StatusType, "

								"CASE WHEN PatientInvAllocationsT.Status = " + AsString((long)InvUtils::iasActive) + " AND (PatientInvAllocationDetailsT.Status IS NULL OR PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsActive) + ") THEN 'Active' "
								"WHEN PatientInvAllocationDetailsT.Status = " + AsString((long)InvUtils::iadsOrder) + " THEN 'To Be Ordered' "
								"WHEN "
								//is linked to a billed case history
								"BilledCaseHistoryQ.ID Is Not Null OR "
								//has no unbilled products that are billable
								"(PatientInvAllocationsT.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.Status = " + AsString((long)InvUtils::iadsUsed) + " "
								"			AND InvAllocDetailQ.ID NOT IN (SELECT ChargeQ.AllocationDetailID FROM ChargedAllocationDetailsT ChargeQ "
								"			WHERE ChargeQ.ChargeID IN (SELECT LineItemQ.ID FROM LineItemT LineItemQ WHERE LineItemQ.Deleted = 0)) "
								"			AND InvAllocDetailQ.ProductID IN (SELECT ProductLocQ.ProductID FROM ProductLocationInfoT ProductLocQ WHERE ProductLocQ.Billable = 1 AND ProductLocQ.LocationID = PatientInvAllocationsT.LocationID)) "
								//does not have only released products
								"AND PatientInvAllocationsT.ID NOT IN (SELECT InvAllocQ.ID FROM PatientInvAllocationsT InvAllocQ WHERE InvAllocQ.Status = " + AsString((long)InvUtils::iasCompleted) + " "
								"			AND InvAllocQ.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.Status = " + AsString((long)InvUtils::iadsUsed) + ")) "
								//does not have only non-billable products
								"AND PatientInvAllocationsT.ID NOT IN (SELECT InvAllocQ.ID FROM PatientInvAllocationsT InvAllocQ WHERE InvAllocQ.Status = " + AsString((long)InvUtils::iasCompleted) + " "
								"			AND InvAllocQ.ID NOT IN (SELECT InvAllocDetailQ.AllocationID FROM PatientInvAllocationDetailsT InvAllocDetailQ WHERE InvAllocDetailQ.ProductID IN "
								"				(SELECT ProductLocQ.ProductID FROM ProductLocationInfoT ProductLocQ WHERE ProductLocQ.Billable = 1 AND ProductLocQ.LocationID = PatientInvAllocationsT.LocationID))) "
								") "
								"THEN 'Completed & Billed' "
								"ELSE 'Completed & Not Billed' END AS StatusText, "

								"CASE WHEN (ProductItemsT.Deleted = 1 AND SupplierReturnItemsT.ID Is Not Null) THEN SupplierReturnGroupsT.ReturnDate "
								"WHEN ProductItemsT.Deleted = 1 THEN ProductAdjustmentsT.Date "
								"WHEN LineItemT.ID Is Not Null THEN LineItemT.Date "
								"WHEN BilledCaseHistoryQ.ID Is Not Null THEN BilledCaseHistoryQ.Date "
								"WHEN PatientInvAllocationsT.Status = " + AsString((long)InvUtils::iasCompleted) + " THEN COALESCE(AppointmentsT.StartTime,PatientInvAllocationsT.CompletionDate) "
								"ELSE PatientInvAllocationsT.InputDate END AS AllocationStatusDate, "
								"AppointmentsT.PatientID as ApptPatID, AppointmentsT.LocationID as ApptLocID, "
								"AppointmentsT.StartTime as ApptStartTime, "
								"AppointmentResourceT.ResourceID as ResourceID, "
								"AppointmentsT.ShowState AS ShowState, "
								"AppointmentsT.AptTypeID AS AptTypeID "

								"FROM AppointmentsT INNER JOIN PatientInvAllocationsT ON AppointmentsT.ID = PatientInvAllocationsT.AppointmentID "
								"INNER JOIN PatientsT ON PatientInvAllocationsT.PatientID = PatientsT.PersonID "
								"INNER JOIN PersonT ON PatientsT.PersonID = PersonT.ID "
								"INNER JOIN LocationsT ON PatientInvAllocationsT.LocationID = LocationsT.ID "				
								"LEFT JOIN PatientInvAllocationDetailsT ON PatientInvAllocationsT.ID = PatientInvAllocationDetailsT.AllocationID "
								"LEFT JOIN AptTypeT ON AppointmentsT.AptTypeID = AptTypeT.ID "
								"LEFT JOIN ProductItemsT ON PatientInvAllocationDetailsT.ProductItemID = ProductItemsT.ID "
								"LEFT JOIN ProductAdjustmentsT ON ProductItemsT.AdjustmentID = ProductAdjustmentsT.ID "
								"LEFT JOIN SupplierReturnItemsT ON ProductItemsT.ID = SupplierReturnItemsT.ProductItemID "
								"LEFT JOIN SupplierReturnGroupsT ON SupplierReturnItemsT.ReturnGroupID = SupplierReturnGroupsT.ID "
								"LEFT JOIN ServiceT ON PatientInvAllocationDetailsT.ProductID = ServiceT.ID "
								"LEFT JOIN ChargedProductItemsT ON ProductItemsT.ID = ChargedProductItemsT.ProductItemID "				
								"LEFT JOIN (SELECT * FROM LineItemT WHERE Deleted = 0) AS LineItemT ON ChargedProductItemsT.ChargeID = LineItemT.ID "

								// (j.jones 2009-08-06 10:05) - PLID 35120 - supported BilledCaseHistoriesT
								"LEFT JOIN (SELECT CaseHistoryT.ID, BillsT.Date, AllocationID "
								"	FROM CaseHistoryAllocationLinkT "
								"	INNER JOIN CaseHistoryT ON CaseHistoryAllocationLinkT.CaseHistoryID = CaseHistoryT.ID "
								"	INNER JOIN BilledCaseHistoriesT ON CaseHistoryT.ID = BilledCaseHistoriesT.CaseHistoryID "
								"	INNER JOIN BillsT ON BilledCaseHistoriesT.BillID = BillsT.ID "
								"	WHERE BillsT.Deleted = 0 AND BillsT.EntryType = 1 AND CaseHistoryT.CompletedDate Is Not Null "
								") AS BilledCaseHistoryQ ON PatientInvAllocationsT.ID = BilledCaseHistoryQ.AllocationID "

								"LEFT JOIN PersonT ProviderPersonT ON PatientInvAllocationsT.ProviderID = ProviderPersonT.ID "
								"LEFT JOIN AppointmentResourceT ON AppointmentsT.ID = AppointmentResourceT.AppointmentID "

								"WHERE " + strStatus + " AND PatientInvAllocationsT.Status <> " + AsString((long)InvUtils::iasDeleted) + " AND PatientInvAllocationDetailsT.Status <> " + AsString((long)InvUtils::iadsDeleted) + " "
								"AND (((PatientInvAllocationDetailsT.Status IN (" + AsString((long)InvUtils::iadsActive) + "," + AsString((long)InvUtils::iadsOrder) + ") AND PatientInvAllocationsT.Status = " + AsString((long)InvUtils::iasActive) + ") "
								"OR (PatientInvAllocationsT.Status = " + AsString((long)InvUtils::iasCompleted) + ")))) AllocationListSubQ "
								"LEFT JOIN AptTypeT ON AllocationListSubQ.AptTypeID = AptTypeT.ID ";
								);

							}

				break;
			}
		break;					

		
	}

	 return strSQL;
}

// (j.jones 2009-11-17 16:13) - PLID 36326 - added functions for building the Provider Commissions recordsets
_RecordsetPtr CReportInfo::GetProviderCommissionsChargesRecordset(long nSubLevel, long nSubRepNum, BOOL bForReportVerify) const
{
	//Provider Commissions (Charges)
	/*	Version History
		DRT 8/24/2004 - Created - PLID 13964.
		DRT 2/7/2005 - PLID 15546 - Added calculations for total amount (no tax) and commission amount (no tax).
		DRT 4/6/2005 - PLID 16155 - Added a UNION so that adjustments applied to charges (with commission %'s)
			are shown in a negative value to remove from the total commission due.  These are filtered on the apply
			date, not the date of the adjustment.  All the other fields are kept as 0 so as not to disturb the totals.
		DRT 6/28/2005 - PLID 16510 - Changed the shop fee to be multiply by the quantity.
		DRT 9/8/2005 - PLID 16292  - Changed preferences to provide more options on adjusted items, returned products, etc.
		DRT 10/3/2005 - PLID 16510 - Fixed the ShopFee to always be currency.
		JMM 02/16/2005 - PLID 19274 - Made the query take the preference for adding adj to the applied amt.
		JMJ 07/12/2006 - PLID 21412 - Ensured that we don't get a divide by zero error when the charge is zero and has an adjustment
		// (a.wetta 2007-04-20 14:25) - PLID 24872 - Added advanced commission rules to the calculation of a provider's commission
		// (j.gruber 2008-09-08 13:06) - PLID 30468 - added category field
		// (j.gruber 2009-03-25 17:43) - PLID 33359 - updated discount structure
		// (j.jones 2009-11-17 11:16) - PLID 36326 - moved report into this function so we can custom build the recordset
		// (d.singleton 2012-03-20 12:01) - PLID 49050 - added place of service fields
		// (j.gruber 2012-10-31 13:22) - PLID 53242 - support shop fees per location
		TES 6/15/2015 - PLID 65983 - Added CommissionBaseDollarAmount and CommissionRuleDollarAmount, updated the commission totals to reflect those values
	*/

	// create a temp table
	CString strTempT;
	strTempT.Format("#Temp%luT", GetTickCount());
	ExecuteSql(GetRemoteDataSnapshot(), "CREATE TABLE %s ("
		"ID int, "
		"ChargeAmount money, "
		"TotalWithTax money, "
		"AppliedAmt money, "
		"NoShopFeeAmount money, "
		"NoTaxTotal money, "
		"NoTaxNoShopFeeAmount money, "
		"ShopFee money, "
		"PatID int, "
		"UserDefinedID int, "
		"PatName nvarchar(255), "
		"ProvID int, "
		"ProvName nvarchar(255), "
		"UseTieredCommissions bit, "
		"IgnoreShopFee bit, "
		"CommissionBasePercentage float, "
		"CommissionBaseDollarAmount money, "
		"ServiceID int, "
		"ServiceName nvarchar(255), "
		"Code nvarchar(50), "
		"ChargeType	nvarchar(16), "
		"ChargeTypeID int, "
		"ChargeDate	datetime, "
		"ChargeInputDate datetime, "
		"Quantity float, "
		"LocID int, "
		"LocName nvarchar(255), "
		"CommissionRulePercentage float, "
		"CommissionRuleDollarAmount money, "
		"CommissionRule nvarchar(255), "
		"CommissionAmount money, "
		"NoTaxCommissionAmount money, "
		"CategoryName nvarchar(30), "
		"TotalProviderCommissions money NOT NULL DEFAULT 0, "
		"TotalProviderCommissionsNoTax money NOT NULL DEFAULT 0, "
		"TieredRulesApplied nvarchar(4000), "
		"PlaceOfServiceID int, "
		"PlaceOfService nvarchar(255) "
		")", strTempT);

	CString sql;
	sql.Format("SELECT ID, ChargeAmount, TotalWithTax, AppliedAmt, NoShopFeeAmount, NoTaxTotal, NoTaxNoShopFeeAmount, "
		"(CASE WHEN UseTieredCommissions = 1 AND IgnoreShopFee = 1 THEN NULL ELSE ShopFee END) AS ShopFee, PatID AS PatID, "
		"UserDefinedID, PatName, ProvID AS ProvID, ProvName, UseTieredCommissions, IgnoreShopFee, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionBasePercentage END) AS CommissionBasePercentage, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionBaseDollarAmount END) AS CommissionBaseDollarAmount, "
		"ServiceID, ServiceName, Code, ChargeType, ChargeTypeID, ChargeDate AS ChargeDate, "
		"ChargeInputDate AS ChargeInputDate, Quantity, LocID AS LocID, LocName, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRulePercentage END) AS CommissionRulePercentage, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRuleDollarAmount END) AS CommissionRuleDollarAmount, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRule END) AS CommissionRule, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE "
			"CASE WHEN COALESCE(CommissionRulePercentage,CommissionBasePercentage) Is Null THEN COALESCE(CommissionRuleDollarAmount,CommissionBaseDollarAmount)*Quantity ELSE "
			"Round(convert(money, NoShopFeeAmount * ((CASE WHEN CommissionRulePercentage is not NULL THEN CommissionRulePercentage ELSE CommissionBasePercentage END)/100)),2) "
			"END "
		"END) AS CommissionAmount, "
		"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE "
			"CASE WHEN COALESCE(CommissionRulePercentage,CommissionBasePercentage) Is Null THEN COALESCE(CommissionRuleDollarAmount,CommissionBaseDollarAmount)*Quantity ELSE "
			"Round(convert(money, NoTaxNoShopFeeAmount * ((CASE WHEN CommissionRulePercentage is not NULL THEN CommissionRulePercentage ELSE CommissionBasePercentage END)/100)),2) "
			"END "
		"END) AS NoTaxCommissionAmount, "
		" CategoryName, PlaceOfServiceID, PlaceOfService "
		"from 					" 
		"(select * , "
		/* Get the commission percentage for this charge */
		"(select top 1 CommissionRulesT.Percentage "
		"from CommissionRulesLinkT "
		"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
		/* We only want a rule that is valid for the time period of a particular charge */
		"WHERE CommissionRulesT.IsTieredCommission = 0 "
			"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.ChargeDate and "
			  "convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.ChargeDate and "
			  "coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
				  "from ChargesT "
				  "left join LineItemT on ChargesT.ID = LineItemT.ID "
				  "where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
				  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
				  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
				  " ServiceID  = CommissionRulesLinkT.ServiceID AND " 
				  "DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
		"order by MoneyThreshold desc) AS CommissionRulePercentage, "
		/* Get the commission dollar amount for this charge */
		"(select top 1 CommissionRulesT.Amount "
		"from CommissionRulesLinkT "
		"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
		/* We only want a rule that is valid for the time period of a particular charge */
		"WHERE CommissionRulesT.IsTieredCommission = 0 "
		"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.ChargeDate and "
		"convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.ChargeDate and "
		"coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
		"from ChargesT "
		"left join LineItemT on ChargesT.ID = LineItemT.ID "
		"where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
		"convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
		"convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
		" ServiceID  = CommissionRulesLinkT.ServiceID AND "
		"DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
		"order by MoneyThreshold desc) AS CommissionRuleDollarAmount, "
		/* Get the name of the commission rule that applies to this charge */
		"(select top 1 CommissionRulesT.Name "
		"from CommissionRulesLinkT "
		"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
		/* We only want a rule that is valid for the time period of a particular charge */
		"WHERE CommissionRulesT.IsTieredCommission = 0 "
			"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.ChargeDate and "
			  "convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.ChargeDate and "
			  "coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
				  "from ChargesT "
				  "left join LineItemT on ChargesT.ID = LineItemT.ID "
				  "where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
				  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
				  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
				  " ServiceID  = CommissionRulesLinkT.ServiceID AND " 
				  "DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
		"order by MoneyThreshold desc) AS CommissionRule "
		"FROM "
		"(SELECT ChargesT.ID, dbo.GetChargeTotal(ChargesT.ID) AS ChargeAmount, dbo.GetChargeTotal(ChargesT.ID) AS TotalWithTax, CASE WHEN PaysQ.AppliedAmt IS NULL THEN 0 ELSE PaysQ.AppliedAmt END AS AppliedAmt,  "
		"Round(convert(money, (dbo.GetChargeTotal(ChargesT.ID) - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2) AS NoShopFeeAmount,  "
		"Round(Convert(money,((([LineCharges].[Amount]*[Quantity]* "
		"   (CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)* "
		"   (CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)* "
		"   (CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)* "
		"   (CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)* "
		"   (CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2) AS NoTaxTotal, "
		" "
		"Round(convert(money, ( "
		"	Round(Convert(money,((([LineCharges].[Amount]*[Quantity]* "
		"	(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)* "
		"	(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)* "
		"	(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)* "
		"	(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)* "
		"	(CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2) "
		" - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2) AS NoTaxNoShopFeeAmount,  "
		"convert(money, (ServiceLocationInfoT.ShopFee * ChargesT.Quantity)) AS ShopFee, PatientsT.PersonID AS PatID, PatientsT.UserDefinedID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS PatName,  "
		"ProvidersT.PersonID AS ProvID, PersonProv.Last + ', ' + PersonProv.First + ' ' + PersonProv.Middle AS ProvName, ProvidersT.UseTieredCommissions, ProvidersT.IgnoreShopFee, "
		"CommissionT.Percentage AS CommissionBasePercentage, CommissionT.Amount AS CommissionBaseDollarAmount, ServiceT.ID AS ServiceID, ServiceT.Name AS ServiceName, CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code END AS Code,    "
		"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 'Service' WHEN ProductT.ID IS NOT NULL THEN 'Product' ELSE 'Gift Certificate' END AS ChargeType,  "
		"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 0 WHEN ProductT.ID IS NOT NULL THEN 1 ELSE 2 END AS ChargeTypeID,  "
		"LineCharges.Date AS ChargeDate, LineCharges.InputDate AS ChargeInputDate, ChargesT.Quantity, CategoriesT.Name AS CategoryName, LocationsT.ID AS LocID, LocationsT.Name AS LocName, BillsT.Location AS PlaceOfServiceID, POS.Name AS PlaceOfService "
		"  "
		"FROM   "
		"LineItemT LineCharges INNER JOIN ChargesT ON LineCharges.ID = ChargesT.ID "
		" "
		"INNER JOIN BillsT ON ChargesT.BillID = BillsT.ID "
		"LEFT JOIN CommissionT ON ChargesT.ServiceID = CommissionT.ServiceID AND ChargesT.DoctorsProviders = CommissionT.ProvID   "
		"INNER JOIN PersonT ON LineCharges.PatientID = PersonT.ID   "
		"INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID   "
		"INNER JOIN ProvidersT ON ChargesT.DoctorsProviders = ProvidersT.PersonID   "
		"INNER JOIN PersonT PersonProv ON ProvidersT.PersonID = PersonProv.ID   "
		"INNER JOIN ServiceT ON ChargesT.ServiceID = ServiceT.ID   "
		"LEFT JOIN ServiceLocationInfoT ON ServiceT.ID = ServiceLocationInfoT.ServiceID AND LineCharges.LocationID = ServiceLocationInfoT.LocationID "
		"LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID   "
		"LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID   "
		"LEFT JOIN CategoriesT ON ServiceT.Category = CategoriesT.ID "
		"LEFT JOIN LocationsT ON LineCharges.LocationID = LocationsT.ID "
		"LEFT JOIN LocationsT POS ON POS.ID = BillsT.Location "
		" "
		"LEFT JOIN  "
		"	(SELECT LineCharges.ID AS ChargeID, SUM(AppliesT.Amount) AS AppliedAmt "
		"	FROM LineItemT LineCharges  "
		"	LEFT JOIN AppliesT ON LineCharges.ID = AppliesT.DestID "
		"	LEFT JOIN LineItemT LinePays ON AppliesT.SourceID = LinePays.ID "
		"	WHERE LineCharges.Type = 10 AND LineCharges.Deleted = 0 AND (LinePays.Type = 1 %s) AND LinePays.Deleted = 0 "
		"	GROUP BY LineCharges.ID "
		"	) PaysQ "
		"ON LineCharges.ID = PaysQ.ChargeID "
		"   "
		"WHERE LineCharges.Type = 10 AND LineCharges.Deleted = 0 ",
		/*For PLID19274*/ GetRemotePropertyInt("Rpt_Show_Adjs_In_Appl_Proc_Comm", 0, 0, "<None>", true) ? "OR LinePays.Type = 2" : "");

	//DRT 
	if(GetRemotePropertyInt("Rpt_ReturnUseProvCommissions", 1, 0, "<None>", true)) {
		//They wish to use our preferences on this report
		CString strReturn;

		if(GetRemotePropertyInt("Rpt_UseReturnProduct", 0, 0, "<None>", true)) {
			//They prefer the return product feature

			// (j.jones 2012-11-20 09:32) - PLID 53754 - fixed a typo in the ChargesT table name
			strReturn.Format("UNION  "
				"/*Select all returned products - these are removed from the total commission due*/  "
				"  "
				"SELECT LinePays.ID, LinePays.Amount * -1 AS ChargeAmount, LinePays.Amount * -1 AS TotalWithTax, 0 AS AppliedAmount,  "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (Round(convert(money, (dbo.GetChargeTotal(ChargesT.ID) - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2))  "
				"* LinePays.Amount / dbo.GetChargeTotal(ChargesT.ID) * -1 END "
				"AS NoShopFeeAmount,  "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE Round(Convert(money,((([LineCharges].[Amount]*[Quantity]*  "
				"	(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*   "
				"	(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*   "
				"	(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*   "
				"	(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*   "
				"   (CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)   "
				"* LinePays.Amount  "
				"/ dbo.GetChargeTotal(ChargesT.ID) * -1 END AS NoTaxTotal,  "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (Round(convert(money, (   "
				"	Round(Convert(money,((([LineCharges].[Amount]*[Quantity]*   "
				"	(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*   "
				"	(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*   "
				"	(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*   "
				"	(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*   "
				"	(CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)   "
				" - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2))  "
				"* LinePays.Amount / dbo.GetChargeTotal(ChargesT.ID) * -1 END "
				"AS NoTaxNoShopFeeAmount,  "
				"0 AS ShopFee, PatientsT.PersonID AS PatID, PatientsT.UserDefinedID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS PatName,  "
				"ProvidersT.PersonID AS ProvID, PersonProv.Last + ', ' + PersonProv.First + ' ' + PersonProv.Middle AS ProvName, ProvidersT.UseTieredCommissions, ProvidersT.IgnoreShopFee, "
				"CommissionT.Percentage AS CommissionBasePercentage, CommissionT.Amount AS CommissionBaseDollarAmount, ServiceT.ID, ServiceT.Name,  "
				"CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code END AS Code,  "
				"'Returned Product' AS ChargeType, "
				"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 0 WHEN ProductT.ID IS NOT NULL THEN 1 ELSE 2 END AS ChargeTypeID,  "
				"ReturnedProductsT.DateReturned AS ApplyDate, ReturnedProductsT.DateReturned AS ApplyInputDate, 0.0,  "
				"CategoriesT.Name AS CategoryName, LocationsT.ID AS LocID, LocationsT.Name AS LocName, BillsT.Location AS PlaceOfServiceID, POS.Name AS PlaceOfService  "
				" "
				"FROM ReturnedProductsT "
				"LEFT JOIN PaymentsT ON ReturnedProductsT.FinAdjID = PaymentsT.ID  "
				"LEFT JOIN LineItemT LinePays ON PaymentsT.ID = LinePays.ID  "
				"INNER JOIN ChargesT ON ReturnedProductsT.ChargeID = ChargesT.ID  "
				"INNER JOIN BillsT ON ChargesT.BillID = BillsT.ID "
				"INNER JOIN LineItemT LineCharges ON ChargesT.ID = LineCharges.ID  "
				" "
				"LEFT JOIN ServiceT ON ChargesT.ServiceID = ServiceT.ID  "
				"LEFT JOIN ServiceLocationInfoT ON ServiceT.ID = ServiceLocationInfoT.ServiceID AND LineCharges.LocationID = ServiceLocationInfoT.LocationID "
				"LEFT JOIN CommissionT ON ChargesT.ServiceID = CommissionT.ServiceID AND ChargesT.DoctorsProviders = CommissionT.ProvID  "
				"LEFT JOIN PersonT ON LinePays.PatientID = PersonT.ID  "
				"LEFT JOIN PatientsT ON PersonT.ID = PatientsT.PersonID  "
				"LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID     "
				"LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID     "
				"LEFT JOIN CategoriesT ON ServiceT.Category = CategoriesT.ID   "
				"LEFT JOIN LocationsT ON LineCharges.LocationID = LocationsT.ID   "
				"LEFT JOIN LocationsT POS ON POS.ID = BillsT.Location "
				"INNER JOIN ProvidersT ON ChargesT.DoctorsProviders = ProvidersT.PersonID  "
				"LEFT JOIN PersonT PersonProv ON ProvidersT.PersonID = PersonProv.ID  "
				" "
				"WHERE LineCharges.Deleted = 0 AND LinePays.ID Is Not Null AND LinePays.Type = 2 AND LinePays.Deleted = 0 "
				"AND (CommissionT.ProvID Is Not Null OR ProvidersT.UseTieredCommissions = 1)");
		}
		// (d.thompson 2009-01-05) - PLID 32612 - Remove RetAdj in favor of !RetProd
		else {
			//They prefer adjustments
			strReturn.Format("\r\nUNION "
				"/*Select all adjustments that are applied to charges -- these are removed from the total commission due*/ "
				" "
				"SELECT LinePays.ID, AppliesT.Amount * -1 AS ChargeAmount, AppliesT.Amount * -1 AS TotalWithTax, 0 AS AppliedAmount, "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (Round(convert(money, (dbo.GetChargeTotal(ChargesT.ID) - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2)) "
				"* AppliesT.Amount / dbo.GetChargeTotal(ChargesT.ID) * -1 END "
				"AS NoShopFeeAmount, "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE Round(Convert(money,((([LineCharges].[Amount]*[Quantity]* "
				"	(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*  "
				"	(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*  "
				"	(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*  "
				"	(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*  "
				"   (CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)  "
				"* AppliesT.Amount "
				"/ dbo.GetChargeTotal(ChargesT.ID) * -1 END AS NoTaxTotal, "
				"CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (Round(convert(money, (  "
				"	Round(Convert(money,((([LineCharges].[Amount]*[Quantity]*  "
				"	(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*  "
				"	(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*  "
				"	(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*  "
				"	(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*  "
				"	(CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)  "
				" - (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2)) "
				"* AppliesT.Amount / dbo.GetChargeTotal(ChargesT.ID) * -1 END "
				"AS NoTaxNoShopFeeAmount, "
				"0 AS ShopFee, PatientsT.PersonID AS PatID, PatientsT.UserDefinedID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS PatName, "
				"ProvidersT.PersonID AS ProvID, PersonProv.Last + ', ' + PersonProv.First + ' ' + PersonProv.Middle AS ProvName, ProvidersT.UseTieredCommissions, ProvidersT.IgnoreShopFee, "
				"CommissionT.Percentage AS CommissionBasePercentage, CommissionT.Amount AS CommissionBaseDollarAmount, ServiceT.ID, ServiceT.Name, "
				"CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code END AS Code, "
				"'Adjusted Item' AS ChargeType, "
				"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 0 WHEN ProductT.ID IS NOT NULL THEN 1 ELSE 2 END AS ChargeTypeID,  "
				"AppliesT.InputDate AS ApplyDate, AppliesT.InputDate AS ApplyDate, 0.0, "
				"CategoriesT.Name AS CategoryName, LocationsT.ID AS LocID, LocationsT.Name AS LocName, BillsT.Location AS PlaceOfServiceID, POS.Name AS PlaceOfService "
				" "
				"FROM LineItemT LinePays "
				"INNER JOIN PaymentsT ON LinePays.ID = PaymentsT.ID "
				"INNER JOIN AppliesT ON LinePays.ID = AppliesT.SourceID "
				"INNER JOIN ChargesT ON AppliesT.DestID = ChargesT.ID "
				"INNER JOIN BillsT ON ChargesT.BillID = BillsT.ID "
				"INNER JOIN LineItemT LineCharges ON ChargesT.ID = LineCharges.ID "
				"LEFT JOIN ServiceT ON ChargesT.ServiceID = ServiceT.ID "
				"LEFT JOIN ServiceLocationInfoT ON ServiceT.ID = ServiceLocationInfoT.ServiceID AND LineCharges.LocationID = ServiceLocationInfoT.LocationID "
				"LEFT JOIN CommissionT ON ChargesT.ServiceID = CommissionT.ServiceID AND ChargesT.DoctorsProviders = CommissionT.ProvID "
				"LEFT JOIN PersonT ON LinePays.PatientID = PersonT.ID "
				"LEFT JOIN PatientsT ON PersonT.ID = PatientsT.PersonID "
				"LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID    "
				"LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID    "
				"LEFT JOIN CategoriesT ON ServiceT.Category = CategoriesT.ID  "
				"LEFT JOIN LocationsT ON LineCharges.LocationID = LocationsT.ID  "
				"LEFT JOIN LocationsT POS ON POS.ID = BillsT.Location "
				"INNER JOIN ProvidersT ON ChargesT.DoctorsProviders = ProvidersT.PersonID "
				"LEFT JOIN PersonT PersonProv ON ProvidersT.PersonID = PersonProv.ID "
				" "
				"WHERE LinePays.Type = 2 AND LinePays.Deleted = 0 "
				"AND (CommissionT.ProvID Is Not Null OR ProvidersT.UseTieredCommissions = 1)");
		}

		sql += strReturn;
	}

	sql += 	") ChargeInfoQ ) SubQuery "
			"where (UseTieredCommissions = 1 OR CommissionBasePercentage IS NOT NULL or CommissionRulePercentage is not null OR CommissionBaseDollarAmount Is Not Null OR CommissionRuleDollarAmount Is Not Null) ";

	//add our filters, because this custom recordset will not otherwise have them applied
	CString strFilter = GetFilter(nSubLevel, nSubRepNum);
	strFilter.TrimLeft();
	strFilter.TrimRight();
	if (!strFilter.IsEmpty()) {
		ConvertCrystalToSql(sql, strFilter);
		AddFilter(sql, strFilter, TRUE);
	}

	//(e.lally 2008-04-07) PLID 9989 - check if we are verifying reports and add a filter to return no records
	//for a big performance boost.
	if(bForReportVerify != FALSE){
		CString strNoRecordFilter = " 1=0 ";
		//return no actual records for report verifications

		AddFilter(sql, strNoRecordFilter, TRUE);
	}

#ifdef _DEBUG
		CMsgBox dlg(NULL);
		dlg.msg = sql;
		dlg.DoModal();
#endif

	//now save all this to the temp table
	ExecuteSql(GetRemoteDataSnapshot(), "INSERT INTO %s (ID, ChargeAmount, TotalWithTax, AppliedAmt, NoShopFeeAmount, NoTaxTotal, NoTaxNoShopFeeAmount, ShopFee, "
			"PatID, UserDefinedID, PatName, ProvID, ProvName, UseTieredCommissions, IgnoreShopFee, CommissionBasePercentage, CommissionBaseDollarAmount, ServiceID, ServiceName, Code, ChargeType, ChargeTypeID, "
			"ChargeDate, ChargeInputDate, Quantity, LocID, LocName, CommissionRulePercentage, CommissionRuleDollarAmount, CommissionRule, CommissionAmount, "
			"NoTaxCommissionAmount, CategoryName, TotalProviderCommissions, TotalProviderCommissionsNoTax, TieredRulesApplied, PlaceOfServiceID, PlaceOfService) "
			"SELECT ID, ChargeAmount, TotalWithTax, AppliedAmt, NoShopFeeAmount, NoTaxTotal, NoTaxNoShopFeeAmount, ShopFee, "
			"PatID, UserDefinedID, Left(PatName, 255), ProvID, Left(ProvName, 255), UseTieredCommissions, IgnoreShopFee, CommissionBasePercentage, CommissionBaseDollarAmount, ServiceID, Left(ServiceName, 255), Left(Code, 50), Left(ChargeType, 16), ChargeTypeID, "
			"ChargeDate, ChargeInputDate, Quantity, LocID, Left(LocName, 255), CommissionRulePercentage, CommissionRuleDollarAmount, Left(CommissionRule, 255), CommissionAmount, "
			"NoTaxCommissionAmount, Left(CategoryName, 30), Convert(money, 0), Convert(money, 0), '', PlaceOfServiceID, Left(PlaceOfService, 255) "
			"FROM (%s) AS TempQ", strTempT, sql);

	// (j.jones 2009-11-17 15:56) - PLID 36326 - Now our temp table contains all the
	//commission information for *individual* per-service commissions, and if no providers
	//are using the tiered commission plan, we can output the temp table right now to
	//the report. However if anyone is indeed using the tiered commission plan, we have to
	//calculate the commission totals in code and add that information to the temp table.

	//we will calculate commissions on rules active on the report's end date,
	//or today's date if the report is unfiltered
	COleDateTime dtStartDate;
	dtStartDate.SetStatus(COleDateTime::invalid);
	COleDateTime dtEndDate = COleDateTime::GetCurrentTime();
	if(nDateRange > 0) {
		dtStartDate = DateFrom;
		dtEndDate = DateTo;
	}

	//this function is required even for basic commissions as it puts provider
	//grand totals in a new field, for all commission types
	//TES 8/20/2015 - PLID 65984 - Pass in false for bPaymentReport
	CalculateProviderCommissions(GetRemoteDataSnapshot(), strTempT, dtStartDate, dtEndDate, false);

	return CreateRecordset(GetRemoteDataSnapshot(), "SELECT * FROM %s", strTempT);
}

// (j.jones 2009-11-17 16:13) - PLID 36326 - added functions for building the Provider Commissions recordsets
_RecordsetPtr CReportInfo::GetProviderCommissionsPaymentsRecordset(long nSubLevel, long nSubRepNum, BOOL bForReportVerify) const
{
	//Provider Commissions (Payments)
	/*	Version History
		DRT 3/25/2004 - Created.
		DRT 4/19/2004 - PLID 12005 - Included Shop Fees.  The real commission amount is calculated as (Applied amount - shop fee) * commission %.  I
			also indicated this on the report itself.
		DRT 5/10/2004 - PLID 12151 - Made the shop fee calculation a pro-rated percentage, so if only half of the charges are covered, 
			only half of the shop fee will be assessed.
		DRT 6/24/2004 - PLID 13097 - Added the quantity and made the reports show a sum of all sold in the detailed view.
		DRT 8/24/2004 - PLID 13963 - Added apply date, made it the default date filter.  Now looks at the preference for including adjustments
			as payments.  Renamed to "Provider Commissions (Payments)"
		DRT 4/15/2005 - PLID 15555 - Improved to include no-tax values for payments.  It works primarily based on ratio - y = (applied amt / charge w/ tax).  
			This is the % of total balance paid.  We then use that ratio to calculate the no tax amount... (chg w/ no tax * y).  This takes the untaxed amount 
			and gives us the ratio for the applied amount.  This gives us equal distribution for the taxed and non-taxed portions of the charge.
			We then subtract the shop fee from this amount, and take the commission from there.
			Note that the shop fee is not run on a ratio.  If it did not exist, you could just use the ratio (y) to calculate the no tax commission by 
			multiplying (taxed commission * y).  Offices will either used the taxed or the non-taxed commission values, there is no reason they would use both.
		TES 4/26/2005 - PLID 16351 - Fixed a number of places that were dividing by the charge total without checking whether it was 0.
		DRT 6/28/2005 - PLID 16862 - Changed the calculation to multiply shop fee by the charge quantity.
		DRT 10/3/2005 - PLID 16351 - Fixed NoTaxTotal, NoTaxCommissionAmount, and ShopFee fields to always be convert(money, xxx).  These 3 fields all
			had CASE statements where the first caused the field to be a number, and the second case caused it to be money.
		// (a.wetta 2007-04-20 14:25) - PLID 24872 - Added advanced commission rules to the calculation of a provider's commission
		DRT 3/10/2009 - PLID 33381 - Added charge date and bill date (and input date versions).  NOTE:  We intentionally do not 
		//	offer filters on these dates, as they would provide misleading information to users who attempted to run the report
		//	by those filters.
		// (j.gruber 2009-03-25 17:40) - PLID 33359 - updated discount structure
		// (j.jones 2009-09-29 08:59) - PLID 25603 - we now have ChargeDate/InputDate filter options, this query only changed to
		// put AS fields in the existing ChargeDates, no ttx change, but I'm noting the change here as it counteracts Don's
		// proclamation from 3/10/2009
		// (j.jones 2009-11-17 11:16) - PLID 36326 - moved report into this function so we can custom build the recordset
		// (d.singleton 2012-03-20 11:56) - PLID 49048 - Added the Place of service fields
		// (j.gruber 2012-10-31 13:13) - PLID 53242 - changed to support multi-location shop fees
		TES 6/15/2015 - PLID 65984 - Added CommissionBaseDollarAmount and CommissionRuleDollarAmount, updated the commission totals to reflect those values
		//TES 8/17/2015 - PLID 65984 - Added ApplyID
	*/

	// create a temp table
	CString strTempT;
	strTempT.Format("#Temp%luT", GetTickCount());
	ExecuteSql(GetRemoteDataSnapshot(), "CREATE TABLE %s ("
		"ID int, "
		"ApplyID int, "
		"ChargeAmount money, "
		"TotalWithTax money, "
		"AppliedAmount money, "
		"NoShopFeeAmount money, "
		"NoTaxTotal money, "
		"NoTaxNoShopFeeAmount money, "
		"ShopFee money, "
		"PatID int, "
		"UserDefinedID int, "
		"PatName nvarchar(255), "
		"ProvID int, "
		"ProvName nvarchar(255), "
		"UseTieredCommissions bit, "
		"IgnoreShopFee bit, "
		"CommissionBasePercentage float, "
		"CommissionBaseDollarAmount money, "
		"ServiceID int, "
		"ServiceName nvarchar(255), "
		"Code nvarchar(50), "
		"ChargeType nvarchar(16), "
		"ChargeTypeID int, "
		"PayDate datetime, "
		"PayInputDate datetime, "
		"Quantity float, "
		"ApplyDate datetime, "
		"CategoryName nvarchar(30), "
		"LocID int, "
		"LocName nvarchar(255), "
		"CommissionRulePercentage float, "
		"CommissionRuleDollarAmount money, "
		"CommissionRule nvarchar(255), "
		"CommissionAmount money, "
		"NoTaxCommissionAmount money, "
		"ChargeDate datetime, "
		"ChargeInputDate datetime, "
		"BillDate datetime, "
		"BillInputDate datetime, "
		"TotalProviderCommissions money NOT NULL DEFAULT 0, "
		"TotalProviderCommissionsNoTax money NOT NULL DEFAULT 0, "
		"TieredRulesApplied nvarchar(4000), "
		"PlaceOfServiceID int, "
		"PlaceOfService nvarchar(255) "
		")", strTempT);

	CString strAdjustments = "";
	// (j.jones 2013-06-05 11:20) - PLID 56786 - this referenced a nonexistent ProviderCommissionAdjustments preference,
	// I fixed it to use the correct preference
	if(GetRemotePropertyInt("Rpt_Show_Adjs_In_Appl_Proc_Comm", 0, 0, "<None>", true)) {
		strAdjustments.Format("OR LinePays.Type = 2");
	}

	CString sql;
	sql.Format("select ID, ApplyID, ChargeAmount, TotalWithTax, AppliedAmount, NoShopFeeAmount, NoTaxTotal, NoTaxNoShopFeeAmount, "
			"(CASE WHEN UseTieredCommissions = 1 AND IgnoreShopFee = 1 THEN NULL ELSE ShopFee END) AS ShopFee, PatID AS PatID, "
			"UserDefinedID, PatName, ProvID AS ProvID, ProvName, UseTieredCommissions, IgnoreShopFee, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionBasePercentage END) AS CommissionBasePercentage, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionBaseDollarAmount END) AS CommissionBaseDollarAmount, "
			"ServiceID, ServiceName, Code, ChargeType, ChargeTypeID, PayDate AS PayDate, PayInputDate AS PayInputDate, Quantity, ApplyDate AS ApplyDate, CategoryName, LocID AS LocID, LocName, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRulePercentage END) AS CommissionRulePercentage, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRuleDollarAmount END) AS CommissionRuleDollarAmount, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE CommissionRule END) AS CommissionRule, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE "
			"	CASE WHEN COALESCE(CommissionRulePercentage,CommissionBasePercentage) Is Null THEN COALESCE(CommissionRuleDollarAmount,CommissionBaseDollarAmount)*Quantity ELSE "
			"	Round(convert(money, NoShopFeeAmount * ((CASE WHEN CommissionRulePercentage is not NULL THEN CommissionRulePercentage ELSE CommissionBasePercentage END)/100)),2) "
			"	END "
			"END) AS CommissionAmount, "
			"(CASE WHEN UseTieredCommissions = 1 THEN NULL ELSE "
			"	CASE WHEN COALESCE(CommissionRulePercentage,CommissionBasePercentage) Is Null THEN COALESCE(CommissionRuleDollarAmount,CommissionBaseDollarAmount)*Quantity ELSE "
			"	Round(convert(money, NoTaxNoShopFeeAmount * ((CASE WHEN CommissionRulePercentage is not NULL THEN CommissionRulePercentage ELSE CommissionBasePercentage END)/100)),2) "
			"	END "
			"END) AS NoTaxCommissionAmount, "
			"ChargeDate AS ChargeDate, ChargeInputDate AS ChargeInputDate, BillDate, BillInputDate, PlaceOfServiceID, PlaceOfService "

			"from "
			"(select * , "

			/* Get the commission percentage for this charge */
			"(select top 1 CommissionRulesT.Percentage "
			"from CommissionRulesLinkT "
			"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
			/* We only want a rule that is valid for the time period of a particular charge */
			"WHERE CommissionRulesT.IsTieredCommission = 0 "
			"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.PayDate and "
				  "convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.PayDate and "
				  "coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
					  "from ChargesT "
					  "left join LineItemT on ChargesT.ID = LineItemT.ID "
					  "where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
					  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
					  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
					  " ServiceID  = CommissionRulesLinkT.ServiceID AND " 
					  "DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
			"order by MoneyThreshold desc) AS CommissionRulePercentage, "

			/* Get the commission dollar amount for this charge */
			"(select top 1 CommissionRulesT.Amount "
			"from CommissionRulesLinkT "
			"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
			/* We only want a rule that is valid for the time period of a particular charge */
			"WHERE CommissionRulesT.IsTieredCommission = 0 "
			"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.PayDate and "
			"convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.PayDate and "
			"coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
			"from ChargesT "
			"left join LineItemT on ChargesT.ID = LineItemT.ID "
			"where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
			"convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
			"convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
			" ServiceID  = CommissionRulesLinkT.ServiceID AND "
			"DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
			"order by MoneyThreshold desc) AS CommissionRuleDollarAmount, "

			/* Get the name of the commission rule that applies to this charge */
			"(select top 1 CommissionRulesT.Name "
			"from CommissionRulesLinkT "
			"left join CommissionRulesT on CommissionRulesLinkT.RuleID = CommissionRulesT.ID "
			/* We only want a rule that is valid for the time period of a particular charge */
			"WHERE CommissionRulesT.IsTieredCommission = 0 "
			"AND convert(datetime, convert(nvarchar, CommissionRulesT.StartDate, 101)) <= ChargeInfoQ.PayDate and "
				  "convert(datetime, convert(nvarchar, CommissionRulesT.EndDate, 101)) >= ChargeInfoQ.PayDate and "
				  "coalesce((select sum(dbo.GetChargeTotal(ChargesT.ID)) "
					  "from ChargesT "
					  "left join LineItemT on ChargesT.ID = LineItemT.ID "
					  "where LineItemT.Type = 10 and LineItemT.Deleted = 0 and "
					  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) >= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnStartDate, 101)) and "
					  "convert(datetime, convert(nvarchar, LineItemT.Date, 101)) <= convert(datetime, convert(nvarchar, CommissionRulesT.BasedOnEndDate, 101)) and "
					  " ServiceID  = CommissionRulesLinkT.ServiceID AND " 
					  "DoctorsProviders = CommissionRulesLinkT.ProvID), 0) >= MoneyThreshold and ProvID = ChargeInfoQ.ProvID and ServiceID = ChargeInfoQ.ServiceID "
			"order by MoneyThreshold desc) AS CommissionRule "

			"from "

			/* Get all of the charge information */
			"(SELECT ChargesT.ID, AppliesT.ID AS ApplyID, dbo.GetChargeTotal(ChargesT.ID) AS ChargeAmount, AppliesT.Amount AS TotalWithTax, AppliesT.Amount AS AppliedAmount,   "

						"convert(money, CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (AppliesT.Amount - ((ServiceLocationInfoT.ShopFee * ChargesT.Quantity) * (AppliesT.Amount / dbo.GetChargeTotal(ChargesT.ID)))) END) AS NoShopFeeAmount, "

						"convert(money, CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE Round(Convert(money,((([LineCharges].[Amount]*[Quantity]* "
							"(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*  "
							"(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*  "
							"(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*  "
							"(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*  "
							"(CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)  "
						"* AppliesT.Amount "
						"/ dbo.GetChargeTotal(ChargesT.ID) END) AS NoTaxTotal, "

						"convert(money, CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (((Round(convert(money, (   "
							"Round(Convert(money,((([LineCharges].[Amount]*[Quantity]*   "
							"(CASE WHEN(CPTMultiplier1 Is Null) THEN 1 ELSE CPTMultiplier1 END)*   "
							"(CASE WHEN CPTMultiplier2 Is Null THEN 1 ELSE CPTMultiplier2 END)*   "
							"(CASE WHEN CPTMultiplier3 Is Null THEN 1 ELSE CPTMultiplier3 END)*   "
							"(CASE WHEN CPTMultiplier4 Is Null THEN 1 ELSE CPTMultiplier4 END)*   "
							"(CASE WHEN((SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null) THEN 1 ELSE ((100-Convert(float,(SELECT Sum(PercentOff) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID)))/100) END)-(CASE WHEN (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) Is Null THEN 0 ELSE (SELECT Sum(Discount) FROM ChargeDiscountsT WHERE DELETED = 0 AND ChargeID = ChargesT.ID) END))))),2)   "
						"- (ServiceLocationInfoT.ShopFee * ChargesT.Quantity))), 2))  "
						"* AppliesT.Amount / dbo.GetChargeTotal(ChargesT.ID)) + 0) END)  "
						"AS NoTaxNoShopFeeAmount, "

						"convert(money, CASE WHEN dbo.GetChargeTotal(ChargesT.ID) = 0 THEN 0 ELSE (ServiceLocationInfoT.ShopFee * ChargesT.Quantity) * AppliesT.Amount / dbo.GetChargeTotal(ChargesT.ID) END) AS ShopFee, "
						"PatientsT.PersonID AS PatID, PatientsT.UserDefinedID, PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS PatName,   "
						"ProvidersT.PersonID AS ProvID, PersonProv.Last + ', ' + PersonProv.First + ' ' + PersonProv.Middle AS ProvName, ProvidersT.UseTieredCommissions, ProvidersT.IgnoreShopFee,   "
						"CommissionT.Percentage AS CommissionBasePercentage, CommissionT.Amount AS CommissionBaseDollarAmount, ServiceT.ID AS ServiceID, ServiceT.Name AS ServiceName, CASE WHEN CPTCodeT.ID IS NULL THEN '' ELSE CPTCodeT.Code END AS Code,   "
						"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 'Service' WHEN ProductT.ID IS NOT NULL THEN 'Product' ELSE 'Gift Certificate' END AS ChargeType, "
						"CASE WHEN CPTCodeT.ID IS NOT NULL THEN 0 WHEN ProductT.ID IS NOT NULL THEN 1 ELSE 2 END AS ChargeTypeID,  "
						"LinePays.Date AS PayDate, LinePays.InputDate AS PayInputDate, "
						"ChargesT.Quantity, AppliesT.InputDate AS ApplyDate, CategoriesT.Name AS CategoryName, LocationsT.ID AS LocID, LocationsT.Name AS LocName, "
						"LineCharges.Date AS ChargeDate, LineCharges.InputDate AS ChargeInputDate, BillsT.Date AS BillDate, BillsT.InputDate AS BillInputDate, BillsT.Location AS PlaceOfServiceID, POS.Name AS PlaceOfService "
						  
						"FROM  "
						"LineItemT LinePays INNER JOIN PaymentsT ON LinePays.ID = PaymentsT.ID  "
						"LEFT JOIN AppliesT ON PaymentsT.ID = AppliesT.SourceID  "
						"LEFT JOIN ChargesT ON AppliesT.DestID = ChargesT.ID  "
						"LEFT JOIN BillsT ON ChargesT.BillID = BillsT.ID "
						"LEFT JOIN LineItemT LineCharges ON ChargesT.ID = LineCharges.ID  "
						  
						/* Should this use the charge provider or payment provider?  Charge for now, since we generally show the provider   
						a payment is applied to, not the provider of the payment elsewhere */  
						"LEFT JOIN CommissionT ON ChargesT.ServiceID = CommissionT.ServiceID AND ChargesT.DoctorsProviders = CommissionT.ProvID  "
						  
						"INNER JOIN PersonT ON LinePays.PatientID = PersonT.ID  "
						"INNER JOIN PatientsT ON PersonT.ID = PatientsT.PersonID  "
						"INNER JOIN ProvidersT ON ChargesT.DoctorsProviders = ProvidersT.PersonID  "
						"INNER JOIN PersonT PersonProv ON ProvidersT.PersonID = PersonProv.ID  "
						"INNER JOIN ServiceT ON ChargesT.ServiceID = ServiceT.ID  "
						"LEFT JOIN ServiceLocationInfoT ON ServiceT.ID = ServiceLocationInfoT.ServiceID AND LineCharges.LocationID = ServiceLocationInfoT.LocationID "
						"LEFT JOIN CPTCodeT ON ServiceT.ID = CPTCodeT.ID  "
						"LEFT JOIN ProductT ON ServiceT.ID = ProductT.ID  "
						"LEFT JOIN CategoriesT ON ServiceT.Category = CategoriesT.ID "
						"LEFT JOIN LocationsT ON LineCharges.LocationID = LocationsT.ID "
						"LEFT JOIN LocationsT POS ON BillsT.Location = POS.ID "
						  
						"WHERE  "
						"(LinePays.Type = 1 %s) AND LinePays.Deleted = 0 AND LineCharges.Type = 10 AND LineCharges.Deleted = 0 ) ChargeInfoQ ) CommissionQ "

			"where (UseTieredCommissions = 1 OR CommissionBasePercentage IS NOT NULL or CommissionRulePercentage is not null OR CommissionBaseDollarAmount Is Not Null OR CommissionRuleDollarAmount Is Not Null) ",
			strAdjustments);

	//add our filters, because this custom recordset will not otherwise have them applied
	CString strFilter = GetFilter(nSubLevel, nSubRepNum);
	strFilter.TrimLeft();
	strFilter.TrimRight();
	if (!strFilter.IsEmpty()) {
		ConvertCrystalToSql(sql, strFilter);
		AddFilter(sql, strFilter, TRUE);
	}

	//(e.lally 2008-04-07) PLID 9989 - check if we are verifying reports and add a filter to return no records
	//for a big performance boost.
	if(bForReportVerify != FALSE){
		CString strNoRecordFilter = " 1=0 ";
		//return no actual records for report verifications

		AddFilter(sql, strNoRecordFilter, TRUE);
	}

#ifdef _DEBUG
		CMsgBox dlg(NULL);
		dlg.msg = sql;
		dlg.DoModal();
#endif

	//now save all this to the temp table
	ExecuteSql(GetRemoteDataSnapshot(), "INSERT INTO %s (ID, ApplyID, ChargeAmount, TotalWithTax, AppliedAmount, NoShopFeeAmount, "
		"NoTaxTotal, NoTaxNoShopFeeAmount, ShopFee, PatID, UserDefinedID, PatName, ProvID, ProvName, UseTieredCommissions, IgnoreShopFee, "
		"CommissionBasePercentage, CommissionBaseDollarAmount, ServiceID, ServiceName, Code, ChargeType, ChargeTypeID, PayDate, PayInputDate, Quantity, "
		"ApplyDate, CategoryName, LocID, LocName, CommissionRulePercentage, CommissionRuleDollarAmount, CommissionRule, CommissionAmount, "
		"NoTaxCommissionAmount, ChargeDate, ChargeInputDate, BillDate, BillInputDate, "
		"TotalProviderCommissions, TotalProviderCommissionsNoTax, TieredRulesApplied, PlaceOfServiceID, PlaceOfService) "
		"SELECT ID, ApplyID, ChargeAmount, TotalWithTax, AppliedAmount, NoShopFeeAmount, "
		"NoTaxTotal, NoTaxNoShopFeeAmount, ShopFee, PatID, UserDefinedID, Left(PatName, 255), ProvID, Left(ProvName, 255), UseTieredCommissions, IgnoreShopFee, "
		"CommissionBasePercentage, CommissionBaseDollarAmount, ServiceID, Left(ServiceName, 255), Left(Code, 50), Left(ChargeType, 16), ChargeTypeID, PayDate, PayInputDate, Quantity, "
		"ApplyDate, Left(CategoryName, 30), LocID, Left(LocName, 255), CommissionRulePercentage, CommissionRuleDollarAmount, Left(CommissionRule, 255), CommissionAmount, "
		"NoTaxCommissionAmount, ChargeDate, ChargeInputDate, BillDate, BillInputDate, "
		"Convert(money, 0), Convert(money, 0), '', PlaceOfServiceID, Left(PlaceOfService, 255) "
		"FROM (%s) AS TempQ", strTempT, sql);

	// (j.jones 2009-11-17 15:56) - PLID 36326 - Now our temp table contains all the
	//commission information for *individual* per-service commissions, and if no providers
	//are using the tiered commission plan, we can output the temp table right now to
	//the report. However if anyone is indeed using the tiered commission plan, we have to
	//calculate the commission totals in code and add that information to the temp table.

	//we will calculate commissions on rules active on the report's end date,
	//or today's date if the report is unfiltered
	COleDateTime dtStartDate;
	dtStartDate.SetStatus(COleDateTime::invalid);
	COleDateTime dtEndDate = COleDateTime::GetCurrentTime();
	if(nDateRange > 0) {
		dtStartDate = DateFrom;
		dtEndDate = DateTo;
	}

	//this function is required even for basic commissions as it puts provider
	//grand totals in a new field, for all commission types
	//TES 8/20/2015 - PLID 65984 - Pass in true for bPaymentReport
	CalculateProviderCommissions(GetRemoteDataSnapshot(), strTempT, dtStartDate, dtEndDate, true);

	return CreateRecordset(GetRemoteDataSnapshot(), "SELECT * FROM %s", strTempT);
}

// (j.jones 2009-11-23 10:08) - PLID 36326 - This function calculates tiered provider commissions
// based on the content in the provided temp table, for all rules that are active on dtEndDate.
// This function assumes the temp table has the following fields:
// ChargeAmount, NoTaxTotal, NoShopFeeAmount, NoTaxNoShopFeeAmount, ProvID,
// ChargeTypeID, TotalProviderCommissions, TotalProviderCommissionsNoTax
//TES 8/20/2015 - PLID 65984 - The Payments report calculates slightly differently, added bPaymentsReport so it knows which calculation to use
void CReportInfo::CalculateProviderCommissions(ADODB::_ConnectionPtr pCon, CString strTempTableName, COleDateTime dtStartDate, COleDateTime dtEndDate, bool bPaymentReport) const
{
	//first let's sum up the totals in the temp table
	//Note: the totals are actually applies if we're running the payments report, so "total charges"
	//is a misnomer in that case
	//TES 8/20/2015 - PLID 65984 - The Payments report has to do a more complicated calculation, because $ commissions need to calculate per charge and not per apply
	CString strBaseCommissionTotals;
	if (bPaymentReport) {
		strBaseCommissionTotals.Format("(SELECT Sum(CommissionAmount) FROM (SELECT CommissionAmount, CASE WHEN COALESCE(CommissionBasePercentage,CommissionRulePercentage) Is Null THEN ID ELSE ApplyID END AS GroupRecord FROM %s AS AllRecords WHERE AllRecords.ProvID = ProvidersT.PersonID GROUP BY CommissionAmount, CASE WHEN COALESCE(CommissionBasePercentage,CommissionRulePercentage) Is Null THEN ID ELSE ApplyID END) SubQ) AS TotalBasicCommissionAmount, "
			"(SELECT Sum(NoTaxCommissionAmount) FROM (SELECT NoTaxCommissionAmount, CASE WHEN COALESCE(CommissionBasePercentage,CommissionRulePercentage) Is Null THEN ID ELSE ApplyID END AS GroupRecord FROM %s AS AllRecords WHERE AllRecords.ProvID = ProvidersT.PersonID GROUP BY NoTaxCommissionAmount, CASE WHEN COALESCE(CommissionBasePercentage,CommissionRulePercentage) Is Null THEN ID ELSE ApplyID END) SubQ) AS TotalNoTaxBasicCommissionAmount, ",
			strTempTableName, strTempTableName);
	}
	else {
		strBaseCommissionTotals = "Sum(CommissionAmount) AS TotalBasicCommissionAmount, "
			"Sum(NoTaxCommissionAmount) AS TotalNoTaxBasicCommissionAmount, ";
	}

	_RecordsetPtr rsProvTotals = CreateRecordset(pCon, "SELECT ProvidersT.PersonID AS ProviderID, ProvidersT.IgnoreShopFee, "
		"ProvidersT.UseTieredCommissions, "
		" %s "
		//get the total sales
		"Sum(TotalWithTax) AS TotalCharges, "
		"Sum(NoTaxTotal) AS TotalChargesNoTax, "
		"Sum(NoShopFeeAmount) AS TotalChargesNoShopFee, "
		"Sum(NoTaxNoShopFeeAmount) AS TotalChargesNoTaxNoShopFee, "
		""
		//get the total sales for service codes
		"Sum(CASE WHEN ChargeTypeID = 0 THEN TotalWithTax ELSE Convert(money,0) END) AS TotalServiceCharges, "
		"Sum(CASE WHEN ChargeTypeID = 0 THEN NoTaxTotal ELSE Convert(money,0) END) AS TotalServiceChargesNoTax, "
		"Sum(CASE WHEN ChargeTypeID = 0 THEN NoShopFeeAmount ELSE Convert(money,0) END) AS TotalServiceChargesNoShopFee, "
		"Sum(CASE WHEN ChargeTypeID = 0 THEN NoTaxNoShopFeeAmount ELSE Convert(money,0) END) AS TotalServiceChargesNoTaxNoShopFee, "
		""
		//get the total sales for products
		"Sum(CASE WHEN ChargeTypeID = 1 THEN TotalWithTax ELSE Convert(money,0) END) AS TotalProductCharges, "
		"Sum(CASE WHEN ChargeTypeID = 1 THEN NoTaxTotal ELSE Convert(money,0) END) AS TotalProductChargesNoTax, "
		"Sum(CASE WHEN ChargeTypeID = 1 THEN NoShopFeeAmount ELSE Convert(money,0) END) AS TotalProductChargesNoShopFee, "
		"Sum(CASE WHEN ChargeTypeID = 1 THEN NoTaxNoShopFeeAmount ELSE Convert(money,0) END) AS TotalProductChargesNoTaxNoShopFee, "
		""
		//get the total sales for gift certificates
		"Sum(CASE WHEN ChargeTypeID = 2 THEN TotalWithTax ELSE Convert(money,0) END) AS TotalGCCharges, "
		"Sum(CASE WHEN ChargeTypeID = 2 THEN NoTaxTotal ELSE Convert(money,0) END) AS TotalGCChargesNoTax, "
		"Sum(CASE WHEN ChargeTypeID = 2 THEN NoShopFeeAmount ELSE Convert(money,0) END) AS TotalGCChargesNoShopFee, "
		"Sum(CASE WHEN ChargeTypeID = 2 THEN NoTaxNoShopFeeAmount ELSE Convert(money,0) END) AS TotalGCChargesNoTaxNoShopFee "
		"FROM %s "
		"INNER JOIN ProvidersT ON %s.ProvID = ProvidersT.PersonID "
		"GROUP BY ProvidersT.PersonID, ProvidersT.IgnoreShopFee, ProvidersT.UseTieredCommissions",
		strBaseCommissionTotals, strTempTableName, strTempTableName);

	//don't try to load the provider rules if there are no results to calculate on
	if(rsProvTotals->eof) {
		return;
	}
	
	//EndDate is never invalid, it is at least today's date, but
	//we should assert as such, as no caller should ever be providing
	//an invalid EndDate.
	ASSERT(dtEndDate.GetStatus() != COleDateTime::invalid);

	_variant_t varEndDate = _variant_t(dtEndDate, VT_DATE);
	_variant_t varStartDate = g_cvarNull;
	if(dtStartDate.GetStatus() != COleDateTime::invalid) {
		varStartDate = _variant_t(dtStartDate, VT_DATE);
	}

	//load all the rules that are active for these providers ON the end date provided to us
	//TES 7/20/2015 - PLID 65983 - Pull the amount for $ commissions
	_RecordsetPtr rsProvRules = CreateParamRecordset(pCon, FormatString("SELECT ProvidersT.PersonID AS ProviderID, "
		"CommissionRulesT.Percentage, CommissionRulesT.Amount, CommissionRulesT.Name, CommissionRulesT.MoneyThreshold, "
		"CommissionRulesT.OverwritePriorRules, TieredCommissionRulesLinkT.RuleType "
		"FROM TieredCommissionRulesLinkT "
		"INNER JOIN CommissionRulesT ON TieredCommissionRulesLinkT.RuleID = CommissionRulesT.ID "
		"INNER JOIN ProvidersT ON TieredCommissionRulesLinkT.ProviderID = ProvidersT.PersonID "
		"WHERE CommissionRulesT.IsTieredCommission = 1 "
		"AND ProvidersT.PersonID IN (SELECT ProvID FROM %s) "
		"AND CommissionRulesT.StartDate <= {VT_DATE} "
		"AND CommissionRulesT.EndDate >= {VT_DATE} "
		"ORDER BY ProviderID, RuleType, MoneyThreshold, Percentage "
		""
		//find out if there are any rules we are ignoring that apply at some point in our date range
		//but not at the end of the date range
		"SELECT PersonT.Last + ', ' + PersonT.First + ' ' + PersonT.Middle AS ProviderName, "
		"CommissionRulesT.Name, TieredCommissionRulesLinkT.RuleType, "
		"CommissionRulesT.StartDate, CommissionRulesT.EndDate "
		"FROM TieredCommissionRulesLinkT "
		"INNER JOIN CommissionRulesT ON TieredCommissionRulesLinkT.RuleID = CommissionRulesT.ID "
		"INNER JOIN ProvidersT ON TieredCommissionRulesLinkT.ProviderID = ProvidersT.PersonID "
		"INNER JOIN PersonT ON ProvidersT.PersonID = PersonT.ID "
		"WHERE CommissionRulesT.IsTieredCommission = 1 "
		"AND ProvidersT.PersonID IN (SELECT ProvID FROM %s) "
		"AND ({VT_DATE} = NULL OR CommissionRulesT.StartDate >= {VT_DATE}) "
		"AND CommissionRulesT.EndDate < {VT_DATE} "
		"ORDER BY ProviderID, RuleType, MoneyThreshold, Percentage",
		strTempTableName, strTempTableName),
		varEndDate, varEndDate,
		varStartDate, varStartDate, varEndDate);

	struct ProviderRules {
		long nProviderID;
		CString strRuleName;
		COleCurrency cyMoneyThreshold;
		double dblPercentage;
		COleCurrency cyDollarAmount; //TES 7/20/2015 - PLID 65983
		BOOL bOverwritePriorRules;
		long nRuleType;
	};

	CArray<ProviderRules, ProviderRules> aryRules;

	while(!rsProvRules->eof) {

		ProviderRules prRule;
		prRule.nProviderID = AdoFldLong(rsProvRules, "ProviderID");
		prRule.strRuleName = AdoFldString(rsProvRules, "Name");
		prRule.cyMoneyThreshold = AdoFldCurrency(rsProvRules, "MoneyThreshold");
		prRule.dblPercentage = AdoFldDouble(rsProvRules, "Percentage", 0.0);
		//TES 7/20/2015 - PLID 65983 - Pull the amount for $ commissions
		prRule.cyDollarAmount = AdoFldCurrency(rsProvRules, "Amount", COleCurrency(0, 0));
		prRule.bOverwritePriorRules = AdoFldBool(rsProvRules, "OverwritePriorRules");
		prRule.nRuleType = AdoFldLong(rsProvRules, "RuleType");

		//does this level already exist for this provider & rule type? if so, take the higher percentage
		//TES 7/20/2015 - PLID 65983 - Check if this is % or $, and apply similar logic for the $ commissions
		BOOL bFound = FALSE;
		if (prRule.dblPercentage > 0) {
			for (int i = 0; i < aryRules.GetSize() && !bFound; i++) {
				ProviderRules prCurRule = aryRules.GetAt(i);
				if (prCurRule.nProviderID == prRule.nProviderID
					&& prCurRule.nRuleType == prRule.nRuleType
					&& prCurRule.cyMoneyThreshold == prRule.cyMoneyThreshold
					&& prCurRule.dblPercentage > 0
					&& prCurRule.dblPercentage < prRule.dblPercentage) {

					bFound = TRUE;
					//overwrite this rule
					aryRules.SetAt(i, prRule);
				}
			}
		}
		else {
			for (int i = 0; i < aryRules.GetSize() && !bFound; i++) {
				ProviderRules prCurRule = aryRules.GetAt(i);
				if (prCurRule.nProviderID == prRule.nProviderID
					&& prCurRule.nRuleType == prRule.nRuleType
					&& prCurRule.cyMoneyThreshold == prRule.cyMoneyThreshold
					&& prCurRule.dblPercentage == 0.0
					&& prCurRule.cyDollarAmount < prRule.cyDollarAmount) {

					bFound = TRUE;
					//overwrite this rule
					aryRules.SetAt(i, prRule);
				}
			}
		}
		if(!bFound) {
			aryRules.Add(prRule);
		}

		rsProvRules->MoveNext();
	}

	rsProvRules = rsProvRules->NextRecordset(NULL);

	//the next recordset gives us all rules that exist in the date range of our report,
	//but are not active on the end date of the report (which is today if no filter is used)
	//we need to warn about these rules
	CString strSkippedRules;
	long nCountSkipped = 0;
	while(!rsProvRules->eof && nCountSkipped < 6) {

		nCountSkipped++;

		if(nCountSkipped == 6) {
			strSkippedRules += "<More...>\n";
			break;
		}

		CString strProviderName = AdoFldString(rsProvRules, "ProviderName", "");
		CString strName = AdoFldString(rsProvRules, "Name", "");
		long nRuleType = AdoFldLong(rsProvRules, "RuleType", 0);
		COleDateTime dtStartDate = AdoFldDateTime(rsProvRules, "StartDate");
		COleDateTime dtEndDate = AdoFldDateTime(rsProvRules, "EndDate");

		CString strRuleType;
		if(nRuleType == 0) {
			strRuleType += "Service Codes";
		}
		else if(nRuleType == 1) {
			strRuleType += "Inventory Items";
		}
		else if(nRuleType == 2) {
			strRuleType += "Gift Certificates";
		}
		else {
			strRuleType += "All Sales";
		}

		CString strRule;
		strRule.Format("%s, Active: %s - %s, Applied to %s for %s.\n", strName,
			FormatDateTimeForInterface(dtStartDate, NULL, dtoDate), FormatDateTimeForInterface(dtEndDate, NULL, dtoDate),
			strRuleType, strProviderName);
		strSkippedRules += strRule;

		rsProvRules->MoveNext();
	}
	rsProvRules->Close();

	if(!strSkippedRules.IsEmpty()) {
		CString strWarn;
		strWarn.Format("The following tiered rules apply at some point during the date range of this report, "
			"but are not active on the end date of the report, and will be not be applied to the commission calculations:\n\n"
			"%s\n"
			"It is recommended that you review the tiered commission rules setup to ensure the rule date ranges are correct.", strSkippedRules);
		AfxMessageBox(strWarn);
	}

	CString strSqlBatch;
	CNxParamSqlArray aryParams;

	while(!rsProvTotals->eof) {

		long nProvID = AdoFldLong(rsProvTotals, "ProviderID");
		BOOL bIgnoreShopFee = AdoFldBool(rsProvTotals, "IgnoreShopFee");
		BOOL bUseTieredCommissions = AdoFldBool(rsProvTotals, "UseTieredCommissions");

		if(bUseTieredCommissions) {

			COleCurrency cyTotalCommissions = COleCurrency(0,0);
			COleCurrency cyTotalCommissionsNoTax = COleCurrency(0,0);
			COleCurrency cyServiceCommissions = COleCurrency(0,0);
			COleCurrency cyServiceCommissionsNoTax = COleCurrency(0,0);
			COleCurrency cyProductCommissions = COleCurrency(0,0);
			COleCurrency cyProductCommissionsNoTax = COleCurrency(0,0);
			COleCurrency cyGCCommissions = COleCurrency(0,0);
			COleCurrency cyGCCommissionsNoTax = COleCurrency(0,0);

			CStringArray arystrRulesApplied;
			
			//calculate commissions for each rule for this provider
			for(int i=0; i<aryRules.GetSize(); i++) {
				ProviderRules prRule = aryRules.GetAt(i);
				if(prRule.nProviderID == nProvID) {

					COleCurrency cySales = COleCurrency(0,0);
					COleCurrency cySalesNoTax = COleCurrency(0,0);

					//0 - Services, 1 - Products, 2 - Gift Certs., -1 - All
					if(prRule.nRuleType == 0) {
						//calculate on services					
						if(bIgnoreShopFee) {
							cySales = AdoFldCurrency(rsProvTotals, "TotalServiceCharges");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalServiceChargesNoTax");
						}
						else {
							cySales = AdoFldCurrency(rsProvTotals, "TotalServiceChargesNoShopFee");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalServiceChargesNoTaxNoShopFee");
						}
					}
					else if(prRule.nRuleType == 1) {
						//calculate on products
						if(bIgnoreShopFee) {
							cySales = AdoFldCurrency(rsProvTotals, "TotalProductCharges");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalProductChargesNoTax");
						}
						else {
							cySales = AdoFldCurrency(rsProvTotals, "TotalProductChargesNoShopFee");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalProductChargesNoTaxNoShopFee");
						}
					}
					else if(prRule.nRuleType == 2) {
						//calculate on gift certificates
						if(bIgnoreShopFee) {
							cySales = AdoFldCurrency(rsProvTotals, "TotalGCCharges");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalGCChargesNoTax");
						}
						else {
							cySales = AdoFldCurrency(rsProvTotals, "TotalGCChargesNoShopFee");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalGCChargesNoTaxNoShopFee");
						}
					}
					else {
						//calculate on all sales
						if(bIgnoreShopFee) {
							cySales = AdoFldCurrency(rsProvTotals, "TotalCharges");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalChargesNoTax");
						}
						else {
							cySales = AdoFldCurrency(rsProvTotals, "TotalChargesNoShopFee");
							cySalesNoTax = AdoFldCurrency(rsProvTotals, "TotalChargesNoTaxNoShopFee");
						}
					}

					//find the next tier, if one exists
					COleCurrency cyNextThreshold;
					cyNextThreshold.SetStatus(COleCurrency::invalid);

					for(int j=0; j<aryRules.GetSize() && cyNextThreshold.GetStatus() == COleCurrency::invalid; j++) {
						ProviderRules prNextRule = aryRules.GetAt(j);
						if(prNextRule.nProviderID == prRule.nProviderID
							&& prNextRule.nRuleType == prRule.nRuleType
							&& prNextRule.cyMoneyThreshold > prRule.cyMoneyThreshold) {

							cyNextThreshold = prNextRule.cyMoneyThreshold;				
						}
					}

					//we have to calculate commissions twice, based on with tax and without
					if(cySales >= prRule.cyMoneyThreshold) {

						COleCurrency cyAmtToCalculate = cySales;
						if(cyNextThreshold.GetStatus() != COleCurrency::invalid
							&& cySales >= cyNextThreshold) {
							//if there is a higher tier and our sales enter that tier,
							//simply calculate up to that tier's amount
							cyAmtToCalculate = cyNextThreshold;
						}

						//if we're not overwriting prior rules,
						//reduce the amt. to calculate to be in this tier only,
						//otherwise it includes all sales up through this tier
						if(!prRule.bOverwritePriorRules) {
							cyAmtToCalculate -= prRule.cyMoneyThreshold;
						}

						//now finally calculate the commission
						COleCurrency cyCommissionAmount;
						if (prRule.dblPercentage == 0) {
							//TES 7/20/2015 - PLID 65983 - $ commissions are just the amount
							cyCommissionAmount = prRule.cyDollarAmount;
						}
						else {
							cyCommissionAmount = CalculateAmtQuantity(cyAmtToCalculate, (prRule.dblPercentage / 100.0));
						}

						//add to our totals
						if(prRule.nRuleType == 0) {
							//add to services

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyServiceCommissions = cyCommissionAmount;
							}
							else {
								cyServiceCommissions += cyCommissionAmount;
							}
						}
						else if(prRule.nRuleType == 1) {
							//add to products

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyProductCommissions = cyCommissionAmount;
							}
							else {
								cyProductCommissions += cyCommissionAmount;
							}
						}
						else if(prRule.nRuleType == 2) {
							//add to gift certificates

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyGCCommissions = cyCommissionAmount;
							}
							else {
								cyGCCommissions += cyCommissionAmount;
							}
						}
						else {
							//add to totals

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyTotalCommissions = cyCommissionAmount;
							}
							else {
								cyTotalCommissions += cyCommissionAmount;
							}
						}
					}

					if(cySalesNoTax >= prRule.cyMoneyThreshold) {

						COleCurrency cyAmtToCalculate = cySalesNoTax;
						if(cyNextThreshold.GetStatus() != COleCurrency::invalid
							&& cySalesNoTax >= cyNextThreshold) {
							//if there is a higher tier and our sales enter that tier,
							//simply calculate up to that tier's amount
							cyAmtToCalculate = cyNextThreshold;
						}

						//if we're not overwriting prior rules,
						//reduce the amt. to calculate to be in this tier only,
						//otherwise it includes all lower tiers
						if(!prRule.bOverwritePriorRules) {
							cyAmtToCalculate -= prRule.cyMoneyThreshold;
						}

						//now finally calculate the commission
						COleCurrency cyCommissionAmount;
						if (prRule.dblPercentage == 0) {
							//TES 7/20/2015 - PLID 65983 - $ commissions are just the amount
							cyCommissionAmount = prRule.cyDollarAmount;
						}
						else {
							cyCommissionAmount = CalculateAmtQuantity(cyAmtToCalculate, (prRule.dblPercentage / 100.0));
						}

						//add to our totals
						if(prRule.nRuleType == 0) {
							//add to services

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyServiceCommissionsNoTax = cyCommissionAmount;
							}
							else {
								cyServiceCommissionsNoTax += cyCommissionAmount;
							}
						}
						else if(prRule.nRuleType == 1) {
							//add to products

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyProductCommissionsNoTax = cyCommissionAmount;
							}
							else {
								cyProductCommissionsNoTax += cyCommissionAmount;
							}
						}
						else if(prRule.nRuleType == 2) {
							//add to gift certificates

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyGCCommissionsNoTax = cyCommissionAmount;
							}
							else {
								cyGCCommissionsNoTax += cyCommissionAmount;
							}
						}
						else {
							//add to totals

							//if overwriting, we just replace the current commissions
							if(prRule.bOverwritePriorRules) {
								cyTotalCommissionsNoTax = cyCommissionAmount;
							}
							else {
								cyTotalCommissionsNoTax += cyCommissionAmount;
							}
						}
					}

					//if the rule applied to either total, track the name once
					if(cySalesNoTax >= prRule.cyMoneyThreshold
						|| cySales >= prRule.cyMoneyThreshold) {

						CString str = prRule.strRuleName;
						if(prRule.nRuleType == 0) {
							str += " (Service Codes)";
						}
						else if(prRule.nRuleType == 1) {
							str += " (Inventory Items)";
						}
						else if(prRule.nRuleType == 2) {
							str += " (Gift Certificates)";
						}
						else {
							str += " (All Sales)";
						}

						//insert at the top, so the rules are tracked
						//highest to lowest in value, per service type
						//(they are currently loaded lowest to highest)
						arystrRulesApplied.InsertAt(0, str);
					}
				}
			}

			//cyTotalCommissions should only be nonzero if the provider
			//had rules for "All Sales", and if so, should not have any
			//rules for other types, and thus those fields should be zero
			if(cyTotalCommissions > COleCurrency(0,0)) {
				ASSERT(cyServiceCommissions == COleCurrency(0,0)
					&& cyProductCommissions == COleCurrency(0,0)
					&& cyGCCommissions == COleCurrency(0,0));
			}
			else {
				cyTotalCommissions = cyServiceCommissions + cyProductCommissions + cyGCCommissions;
				cyTotalCommissionsNoTax = cyServiceCommissionsNoTax + cyProductCommissionsNoTax + cyGCCommissionsNoTax;
			}

			RoundCurrency(cyTotalCommissions);
			RoundCurrency(cyTotalCommissionsNoTax);

			//Build the rule list
			CString strRulesApplied;
			for(int i=0; i<arystrRulesApplied.GetSize(); i++) {

				CString strCurRule = arystrRulesApplied.GetAt(i);

				//We are limited to 4000 characters, so in the rare case that the rule names
				//exceed 4000, don't add the next rule
				if((strRulesApplied.GetLength() + 2 + strCurRule.GetLength()) > 4000) {
					ASSERT(FALSE);
					break;
				}

				if(!arystrRulesApplied.IsEmpty()) {
					strRulesApplied += "\r\n";
				}
				strRulesApplied += strCurRule;
			}

			//properly reflect if there are no rules
			if(strRulesApplied.IsEmpty()) {
				strRulesApplied = "<No Tiered Rules Apply>";
			}

			//update the "total" columns for every record for this provider
			AddParamStatementToSqlBatch(strSqlBatch, aryParams, FormatString("UPDATE %s SET "
				"TotalProviderCommissions = Convert(money, {STRING}), "
				"TotalProviderCommissionsNoTax = Convert(money, {STRING}), "
				"TieredRulesApplied = {STRING} "
				"WHERE ProvID = {INT}", strTempTableName),
				FormatCurrencyForSql(cyTotalCommissions), FormatCurrencyForSql(cyTotalCommissionsNoTax),
				strRulesApplied,
				nProvID);
		}
		else {
			//if not using tiered commissions, we only need to calculate the sum of basic commissions,
			//the reason is so the report will total on one field

			COleCurrency cyTotalCommissions = AdoFldCurrency(rsProvTotals, "TotalBasicCommissionAmount", COleCurrency(0,0));
			COleCurrency cyTotalCommissionsNoTax = AdoFldCurrency(rsProvTotals, "TotalNoTaxBasicCommissionAmount", COleCurrency(0,0));

			AddParamStatementToSqlBatch(strSqlBatch, aryParams, FormatString("UPDATE %s SET "
				"TotalProviderCommissions = Convert(money, {STRING}), "
				"TotalProviderCommissionsNoTax = Convert(money, {STRING}) "				
				"WHERE ProvID = {INT}", strTempTableName),
				FormatCurrencyForSql(cyTotalCommissions), FormatCurrencyForSql(cyTotalCommissionsNoTax), nProvID);
		}

		rsProvTotals->MoveNext();
	}
	rsProvTotals->Close();

	if(!strSqlBatch.IsEmpty()) {
		ExecuteParamSqlBatch(pCon, strSqlBatch, aryParams);
	}
}